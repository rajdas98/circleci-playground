{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseWorkflow/TableData.tsx\",\n    _s = $RefreshSig$();\n\nimport { IconButton, Menu, MenuItem, TableCell, Typography } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport React from 'react';\nimport LinearProgressBar from '../../../components/ProgressBar/LinearProgressBar';\nimport { history } from '../../../redux/configureStore';\nimport timeDifferenceForDate from '../../../utils/datesModifier';\nimport CustomStatus from '../CustomStatus/Status';\nimport useStyles from './styles';\n\nvar TableData = function TableData(_ref) {\n  _s();\n\n  var data = _ref.data,\n      exeData = _ref.exeData;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var open = Boolean(anchorEl);\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  }; // Function to capitalize the first letter of the word\n  // eg: internal to Internal\n\n\n  var nameCapitalized = function nameCapitalized(clusterType) {\n    if (clusterType) return clusterType.charAt(0).toUpperCase() + clusterType.slice(1);\n    return 'Not Available';\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.tableDataStatus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CustomStatus, {\n    status: exeData.phase,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.workflowNameData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"workflowName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, data.workflow_name))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.clusterName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, nameCapitalized(data.cluster_name))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.reliabiltyData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, exeData.phase === 'Failed' || exeData.phase === '' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Overall RR: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.failed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, \"0%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progressBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgressBar, {\n    width: 2,\n    value: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Overall RR: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.success,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, \"100%\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progressBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgressBar, {\n    width: 2,\n    value: 100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.stepsData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, Object.keys(exeData.nodes).length)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, timeDifferenceForDate(data.last_updated))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"more\",\n    \"aria-controls\": \"long-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    className: classes.optionBtn,\n    \"data-cy\": \"browseWorkflowOptions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Menu, {\n    id: \"long-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Workflow\",\n    onClick: function onClick() {\n      history.push(\"/workflows/details/\".concat(data.workflow_run_id));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    \"data-cy\": \"workflowDetails\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/show-workflow.svg\",\n    alt: \"Display Workflow\",\n    className: classes.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Show the workflow\"))), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Analysis\",\n    onClick: function onClick() {\n      return history.push(\"/workflows/analytics/\".concat(data.workflow_id));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    \"data-cy\": \"workflowAnalytics\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/show-analytics.svg\",\n    alt: \"Display Analytics\",\n    className: classes.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, \"Show the analytics\"))))));\n};\n\n_s(TableData, \"vXA32r6EXukv831dcFOknrOnVCE=\", false, function () {\n  return [useStyles];\n});\n\n_c = TableData;\nexport default TableData;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableData\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseWorkflow/TableData.tsx"],"names":["IconButton","Menu","MenuItem","TableCell","Typography","MoreVertIcon","React","LinearProgressBar","history","timeDifferenceForDate","CustomStatus","useStyles","TableData","data","exeData","classes","useState","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","nameCapitalized","clusterType","charAt","toUpperCase","slice","tableDataStatus","phase","workflowNameData","workflow_name","clusterName","cluster_name","reliabiltyData","failed","progressBar","success","stepsData","Object","keys","nodes","length","last_updated","optionBtn","push","workflow_run_id","expDiv","btnImg","btnText","workflow_id"],"mappings":"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","sourcesContent":["import {\n  IconButton,\n  Menu,\n  MenuItem,\n  TableCell,\n  Typography,\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport React from 'react';\nimport LinearProgressBar from '../../../components/ProgressBar/LinearProgressBar';\nimport {\n  ExecutionData,\n  WorkflowRun,\n} from '../../../models/graphql/workflowData';\nimport { history } from '../../../redux/configureStore';\nimport timeDifferenceForDate from '../../../utils/datesModifier';\nimport CustomStatus from '../CustomStatus/Status';\nimport useStyles from './styles';\n\ninterface TableDataProps {\n  data: WorkflowRun;\n  exeData: ExecutionData;\n}\n\nconst TableData: React.FC<TableDataProps> = ({ data, exeData }) => {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  // Function to capitalize the first letter of the word\n  // eg: internal to Internal\n  const nameCapitalized = (clusterType: string) => {\n    if (clusterType)\n      return clusterType.charAt(0).toUpperCase() + clusterType.slice(1);\n    return 'Not Available';\n  };\n\n  return (\n    <>\n      <TableCell className={classes.tableDataStatus}>\n        <CustomStatus status={exeData.phase} />\n      </TableCell>\n      <TableCell className={classes.workflowNameData}>\n        <Typography data-cy=\"workflowName\">\n          <strong>{data.workflow_name}</strong>\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <Typography className={classes.clusterName}>\n          {nameCapitalized(data.cluster_name)}\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <div className={classes.reliabiltyData}>\n          {exeData.phase === 'Failed' || exeData.phase === '' ? (\n            <>\n              <Typography>\n                Overall RR: <span className={classes.failed}>0%</span>\n              </Typography>\n              <div className={classes.progressBar}>\n                <LinearProgressBar width={2} value={0} />\n              </div>\n            </>\n          ) : (\n            <>\n              <Typography>\n                Overall RR: <span className={classes.success}>100%</span>\n              </Typography>\n              <div className={classes.progressBar}>\n                <LinearProgressBar width={2} value={100} />\n              </div>\n            </>\n          )}\n        </div>\n      </TableCell>\n      <TableCell>\n        <Typography className={classes.stepsData}>\n          {Object.keys(exeData.nodes).length}\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <Typography>{timeDifferenceForDate(data.last_updated)}</Typography>\n      </TableCell>\n      <TableCell>\n        <IconButton\n          aria-label=\"more\"\n          aria-controls=\"long-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n          className={classes.optionBtn}\n          data-cy=\"browseWorkflowOptions\"\n        >\n          <MoreVertIcon />\n        </IconButton>\n        <Menu\n          id=\"long-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={open}\n          onClose={handleClose}\n        >\n          <MenuItem\n            value=\"Workflow\"\n            onClick={() => {\n              history.push(`/workflows/details/${data.workflow_run_id}`);\n            }}\n          >\n            <div className={classes.expDiv} data-cy=\"workflowDetails\">\n              <img\n                src=\"/icons/show-workflow.svg\"\n                alt=\"Display Workflow\"\n                className={classes.btnImg}\n              />\n              <Typography className={classes.btnText}>\n                Show the workflow\n              </Typography>\n            </div>\n          </MenuItem>\n          <MenuItem\n            value=\"Analysis\"\n            onClick={() =>\n              history.push(`/workflows/analytics/${data.workflow_id}`)\n            }\n          >\n            <div className={classes.expDiv} data-cy=\"workflowAnalytics\">\n              <img\n                src=\"/icons/show-analytics.svg\"\n                alt=\"Display Analytics\"\n                className={classes.btnImg}\n              />\n              <Typography className={classes.btnText}>\n                Show the analytics\n              </Typography>\n            </div>\n          </MenuItem>\n          {/* <MenuItem value=\"Scheduler\" onClick={handleMenu}>\n            Show the scheduler\n          </MenuItem> */}\n        </Menu>\n      </TableCell>\n    </>\n  );\n};\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}