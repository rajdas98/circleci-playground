{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/pages/MyHub/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, CardActionArea, CardContent, Paper, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { useTranslation } from 'react-i18next';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport useStyles from './styles';\nimport QuickActionCard from '../../components/QuickActionCard';\nimport ButtonFilled from '../../components/Button/ButtonFilled';\nimport DeveloperGuide from '../../components/DeveloperGuide';\nimport VideoCarousel from '../../components/VideoCarousel';\nimport { history } from '../../redux/configureStore';\nimport { GET_HUB_STATUS, SYNC_REPO } from '../../graphql';\nimport Loader from '../../components/Loader';\n\nvar MyHub = function MyHub() {\n  _s();\n\n  // UserData from Redux\n  var userData = useSelector(function (state) {\n    return state.userData;\n  }); // Get MyHubs with Status\n\n  var _useQuery = useQuery(GET_HUB_STATUS, {\n    variables: {\n      data: userData.selectedProjectID\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      refetch = _useQuery.refetch;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loader = _useState2[0],\n      setLoader = _useState2[1]; // Mutation to sync a repo\n\n\n  var _useMutation = useMutation(SYNC_REPO, {\n    onCompleted: function onCompleted() {\n      refetch();\n      setLoader(false);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      syncRepo = _useMutation2[0];\n\n  var totalHubs = data && data.getHubStatus;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      github = _useState4[0],\n      setGithub = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      key = _useState6[0],\n      setKey = _useState6[1];\n\n  return /*#__PURE__*/React.createElement(Scaffold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    gutterBottom: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, t('myhub.mainPage.header')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, t('myhub.mainPage.github')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.detailsDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, github ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.githubConfirmed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, t('myhub.mainPage.availableHubs'))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.connectHub,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, t('myhub.mainPage.switchHub')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noHub,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, totalHubs && totalHubs.length === 0 ? /*#__PURE__*/React.createElement(DeveloperGuide, {\n    header: t('myhub.mainPage.devGuideHeader'),\n    description: t('myhub.mainPage.devGuideDescription'),\n    expAvailable: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chartsGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, totalHubs && totalHubs.map(function (hub) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      key: hub.id,\n      elevation: 3,\n      className: classes.cardDivChart,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.cardContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: hub.IsAvailable ? classes.connected : classes.error,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, hub.IsAvailable ? 'Connected' : 'Error'), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/icons/\".concat(hub.HubName === 'Chaos Hub' ? 'myhub-litmus.svg' : 'my-hub-charts.svg'),\n      alt: \"add-hub\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      className: classes.hubName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, hub.HubName), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      className: classes.hubBranch,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, hub.RepoURL.split('/')[4], \"/\", hub.RepoBranch), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.totalExp,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, parseInt(hub.TotalExp, 10) > 0 ? \"\".concat(hub.TotalExp, \" experiments\") : '[Error: could not connect]'), /*#__PURE__*/React.createElement(\"hr\", {\n      className: classes.horizontalLine,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }), hub.IsAvailable ? /*#__PURE__*/React.createElement(ButtonFilled, {\n      styles: {\n        width: '100%'\n      },\n      handleClick: function handleClick() {\n        history.push(\"/myhub/\".concat(hub.HubName));\n      },\n      isPrimary: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 35\n      }\n    }, \"View\") : /*#__PURE__*/React.createElement(Button, {\n      className: classes.failedBtn,\n      disabled: key === hub.id && loader,\n      onClick: function onClick() {\n        syncRepo({\n          variables: {\n            HubName: hub.HubName,\n            projectID: userData.selectedProjectID\n          }\n        });\n        setKey(hub.id);\n        setLoader(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 35\n      }\n    }, key === hub.id && loader ? t('myhub.mainPage.sync') : t('myhub.mainPage.retry'))));\n  }), userData.userRole !== 'Viewer' ? /*#__PURE__*/React.createElement(Card, {\n    elevation: 3,\n    className: classes.cardDiv,\n    onClick: function onClick() {\n      history.push({\n        pathname: '/myhub/connect'\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.cardContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/add-hub.svg\",\n    alt: \"add-hub\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 31\n    }\n  }, t('myhub.mainPage.connectNewHub'))))) : null))) :\n  /*#__PURE__*/\n  //  No GitHub connected div\n  React.createElement(\"div\", {\n    className: classes.noGithubAccount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/myhub-crossed.svg\",\n    alt: \"myhub\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.noGitHubText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, t('myhub.mainPage.noGithubCredentials'))), /*#__PURE__*/React.createElement(ButtonFilled, {\n    isPrimary: false,\n    handleClick: function handleClick() {\n      setGithub(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, t('myhub.mainPage.submitBtn')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(VideoCarousel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.videoDescription,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, t('myhub.mainPage.videoDescription')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.quickActionDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(QuickActionCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }))))));\n};\n\n_s(MyHub, \"jYK3zDps6w4cqJXnv6LoLWZKqh0=\", false, function () {\n  return [useSelector, useQuery, useMutation, useStyles, useTranslation];\n});\n\n_c = MyHub;\nexport default MyHub;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyHub\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/pages/MyHub/index.tsx"],"names":["Button","Card","CardActionArea","CardContent","Paper","Typography","React","useState","useSelector","useMutation","useQuery","useTranslation","Scaffold","useStyles","QuickActionCard","ButtonFilled","DeveloperGuide","VideoCarousel","history","GET_HUB_STATUS","SYNC_REPO","Loader","MyHub","userData","state","variables","data","selectedProjectID","fetchPolicy","loading","refetch","loader","setLoader","onCompleted","syncRepo","totalHubs","getHubStatus","classes","t","github","setGithub","key","setKey","header","mainDiv","detailsDiv","githubConfirmed","connectHub","noHub","length","chartsGroup","map","hub","id","cardDivChart","cardContent","IsAvailable","connected","error","HubName","hubName","hubBranch","RepoURL","split","RepoBranch","totalExp","parseInt","TotalExp","horizontalLine","width","push","failedBtn","projectID","userRole","cardDiv","pathname","noGithubAccount","noGitHubText","root","videoDescription","quickActionDiv"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Card,\n  CardActionArea,\n  CardContent,\n  Paper,\n  Typography,\n} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { useTranslation } from 'react-i18next';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport useStyles from './styles';\nimport QuickActionCard from '../../components/QuickActionCard';\nimport ButtonFilled from '../../components/Button/ButtonFilled';\nimport DeveloperGuide from '../../components/DeveloperGuide';\nimport VideoCarousel from '../../components/VideoCarousel';\nimport { history } from '../../redux/configureStore';\nimport { RootState } from '../../redux/reducers';\nimport { GET_HUB_STATUS, SYNC_REPO } from '../../graphql';\nimport Loader from '../../components/Loader';\nimport { HubDetails, HubStatus } from '../../models/redux/myhub';\n\nconst MyHub = () => {\n  // UserData from Redux\n  const userData = useSelector((state: RootState) => state.userData);\n\n  // Get MyHubs with Status\n  const { data, loading, refetch } = useQuery<HubStatus>(GET_HUB_STATUS, {\n    variables: { data: userData.selectedProjectID },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const [loader, setLoader] = useState(false);\n\n  // Mutation to sync a repo\n  const [syncRepo] = useMutation(SYNC_REPO, {\n    onCompleted: () => {\n      refetch();\n      setLoader(false);\n    },\n  });\n\n  const totalHubs = data && data.getHubStatus;\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [github, setGithub] = useState(true);\n  const [key, setKey] = useState('');\n\n  return (\n    <Scaffold>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {/* Header Div */}\n          <div className={classes.header}>\n            <Typography variant=\"h3\" gutterBottom>\n              {t('myhub.mainPage.header')}\n            </Typography>\n            <Typography variant=\"h4\">\n              <strong>{t('myhub.mainPage.github')}</strong>\n            </Typography>\n          </div>\n          {/* Charts Div */}\n          <div className={classes.mainDiv}>\n            <div className={classes.detailsDiv}>\n              {github ? (\n                <div className={classes.githubConfirmed}>\n                  <Typography variant=\"h4\" gutterBottom>\n                    <strong>{t('myhub.mainPage.availableHubs')}</strong>\n                  </Typography>\n                  <Typography className={classes.connectHub}>\n                    {t('myhub.mainPage.switchHub')}\n                  </Typography>\n                  <div className={classes.noHub}>\n                    {totalHubs && totalHubs.length === 0 ? (\n                      <DeveloperGuide\n                        header={t('myhub.mainPage.devGuideHeader')}\n                        description={t('myhub.mainPage.devGuideDescription')}\n                        expAvailable={false}\n                      />\n                    ) : (\n                      <></>\n                    )}\n                    <div className={classes.chartsGroup}>\n                      {totalHubs &&\n                        totalHubs.map((hub: HubDetails) => {\n                          return (\n                            <Paper\n                              key={hub.id}\n                              elevation={3}\n                              className={classes.cardDivChart}\n                            >\n                              <CardContent className={classes.cardContent}>\n                                <Typography\n                                  className={\n                                    hub.IsAvailable\n                                      ? classes.connected\n                                      : classes.error\n                                  }\n                                >\n                                  {hub.IsAvailable ? 'Connected' : 'Error'}\n                                </Typography>\n                                <img\n                                  src={`/icons/${\n                                    hub.HubName === 'Chaos Hub'\n                                      ? 'myhub-litmus.svg'\n                                      : 'my-hub-charts.svg'\n                                  }`}\n                                  alt=\"add-hub\"\n                                />\n                                <Typography\n                                  variant=\"h6\"\n                                  align=\"center\"\n                                  className={classes.hubName}\n                                >\n                                  {hub.HubName}\n                                </Typography>\n                                <Typography\n                                  variant=\"h6\"\n                                  align=\"center\"\n                                  className={classes.hubBranch}\n                                >\n                                  {hub.RepoURL.split('/')[4]}/{hub.RepoBranch}\n                                </Typography>\n                                <Typography className={classes.totalExp}>\n                                  {parseInt(hub.TotalExp, 10) > 0\n                                    ? `${hub.TotalExp} experiments`\n                                    : '[Error: could not connect]'}\n                                </Typography>\n                                <hr className={classes.horizontalLine} />\n                                {hub.IsAvailable ? (\n                                  <ButtonFilled\n                                    styles={{ width: '100%' }}\n                                    handleClick={() => {\n                                      history.push(`/myhub/${hub.HubName}`);\n                                    }}\n                                    isPrimary={false}\n                                  >\n                                    View\n                                  </ButtonFilled>\n                                ) : (\n                                  <Button\n                                    className={classes.failedBtn}\n                                    disabled={key === hub.id && loader}\n                                    onClick={() => {\n                                      syncRepo({\n                                        variables: {\n                                          HubName: hub.HubName,\n                                          projectID: userData.selectedProjectID,\n                                        },\n                                      });\n                                      setKey(hub.id);\n                                      setLoader(true);\n                                    }}\n                                  >\n                                    {key === hub.id && loader\n                                      ? t('myhub.mainPage.sync')\n                                      : t('myhub.mainPage.retry')}\n                                  </Button>\n                                )}\n                              </CardContent>\n                            </Paper>\n                          );\n                        })}\n                      {userData.userRole !== 'Viewer' ? (\n                        <Card\n                          elevation={3}\n                          className={classes.cardDiv}\n                          onClick={() => {\n                            history.push({ pathname: '/myhub/connect' });\n                          }}\n                        >\n                          <CardActionArea>\n                            <CardContent className={classes.cardContent}>\n                              <img src=\"/icons/add-hub.svg\" alt=\"add-hub\" />\n                              <Typography variant=\"h6\" align=\"center\">\n                                {t('myhub.mainPage.connectNewHub')}\n                              </Typography>\n                            </CardContent>\n                          </CardActionArea>\n                        </Card>\n                      ) : null}\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                //  No GitHub connected div\n                <div className={classes.noGithubAccount}>\n                  <img src=\"/icons/myhub-crossed.svg\" alt=\"myhub\" />\n                  <Typography variant=\"h4\" className={classes.noGitHubText}>\n                    <strong>{t('myhub.mainPage.noGithubCredentials')}</strong>\n                  </Typography>\n                  <ButtonFilled\n                    isPrimary={false}\n                    handleClick={() => {\n                      setGithub(true);\n                    }}\n                  >\n                    {t('myhub.mainPage.submitBtn')}\n                  </ButtonFilled>\n                </div>\n              )}\n            </div>\n            <div className={classes.root}>\n              {/* Video Carousel Div */}\n              <VideoCarousel />\n              <Typography className={classes.videoDescription}>\n                {t('myhub.mainPage.videoDescription')}\n              </Typography>\n              <div className={classes.quickActionDiv}>\n                <QuickActionCard />\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      {/* Header Div */}\n    </Scaffold>\n  );\n};\n\nexport default MyHub;\n"]},"metadata":{},"sourceType":"module"}