{"ast":null,"code":"import _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/InputFieldOutline/index.tsx\";\n\nimport React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { useStyles, useStylesLitmus } from './styles';\n\nvar InputFieldOutline = function InputFieldOutline(_ref) {\n  var type = _ref.type,\n      label = _ref.label,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      helperText = _ref.helperText,\n      validationError = _ref.validationError,\n      styles = _ref.styles,\n      success = _ref.success,\n      required = _ref.required,\n      iconType = _ref.iconType,\n      handleChange = _ref.handleChange;\n  var LitmusTextFieldStylesExternal = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPassword = _useState2[0],\n      setShowPassword = _useState2[1];\n\n  var classes = useStylesLitmus(success);\n\n  var handleClickShowPassword = function handleClickShowPassword() {\n    setShowPassword(true);\n  };\n\n  var handleMouseDownPassword = function handleMouseDownPassword(event) {\n    event.preventDefault();\n    setShowPassword(false);\n  };\n\n  if (type === 'password' && validationError === false) {\n    return /*#__PURE__*/React.createElement(TextField, {\n      className: LitmusTextFieldStylesExternal.inputArea,\n      label: label,\n      helperText: helperText,\n      value: value,\n      type: showPassword ? 'text' : 'password',\n      required: required,\n      onChange: handleChange,\n      variant: \"filled\",\n      style: styles,\n      InputProps: {\n        classes,\n        disableUnderline: true,\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleClickShowPassword,\n          onMouseDown: handleMouseDownPassword,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }\n        }, showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 35\n          }\n        }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 52\n          }\n        })))\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (type === 'password' && validationError === true) {\n    return /*#__PURE__*/React.createElement(TextField, {\n      className: LitmusTextFieldStylesExternal.inputArea,\n      error: true,\n      label: label,\n      helperText: helperText,\n      value: value,\n      type: showPassword ? 'text' : 'password',\n      required: required,\n      onChange: handleChange,\n      style: styles,\n      variant: \"filled\",\n      InputProps: {\n        classes,\n        disableUnderline: true,\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleClickShowPassword,\n          onMouseDown: handleMouseDownPassword,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }\n        }, showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 35\n          }\n        }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 52\n          }\n        })))\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (iconType) {\n    if (iconType === 'iconLeft' && validationError === false) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        className: LitmusTextFieldStylesExternal.inputArea,\n        label: label,\n        helperText: helperText,\n        value: value,\n        type: type,\n        required: required,\n        style: styles,\n        onChange: handleChange,\n        variant: \"filled\",\n        InputProps: {\n          classes,\n          disableUnderline: true,\n          startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"start\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(AccountCircle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (iconType === 'iconLeft' && validationError === true) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        className: LitmusTextFieldStylesExternal.inputArea,\n        error: true,\n        label: label,\n        helperText: helperText,\n        value: value,\n        type: type,\n        style: styles,\n        required: required,\n        onChange: handleChange,\n        variant: \"filled\",\n        InputProps: {\n          classes,\n          disableUnderline: true,\n          startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"start\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(AccountCircle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (iconType === 'iconRight' && validationError === false) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        className: LitmusTextFieldStylesExternal.inputArea,\n        label: label,\n        helperText: helperText,\n        value: value,\n        type: type,\n        style: styles,\n        required: required,\n        onChange: handleChange,\n        variant: \"filled\",\n        InputProps: {\n          classes,\n          disableUnderline: true,\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(AccountCircle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (iconType === 'iconRight' && validationError === false && success === true) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        className: LitmusTextFieldStylesExternal.inputArea,\n        label: label,\n        helperText: helperText,\n        value: value,\n        type: type,\n        required: required,\n        style: styles,\n        onChange: handleChange,\n        variant: \"filled\",\n        InputProps: {\n          classes,\n          disableUnderline: true,\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(AccountCircle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (iconType === 'iconRight' && validationError === true) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        className: LitmusTextFieldStylesExternal.inputArea,\n        error: true,\n        label: label,\n        helperText: helperText,\n        value: value,\n        type: type,\n        style: styles,\n        required: required,\n        onChange: handleChange,\n        variant: \"filled\",\n        InputProps: {\n          classes,\n          disableUnderline: true,\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: \"/icons/closeFilled.svg\",\n            alt: \"Error\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (iconType === 'iconLeftRight' && validationError === false) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        className: LitmusTextFieldStylesExternal.inputArea,\n        label: label,\n        helperText: helperText,\n        value: value,\n        type: type,\n        style: styles,\n        required: required,\n        onChange: handleChange,\n        variant: \"filled\",\n        InputProps: {\n          classes,\n          disableUnderline: true,\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(AccountCircle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }\n          })),\n          startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"start\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(AccountCircle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (iconType === 'iconLeftRight' && validationError === true) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        className: LitmusTextFieldStylesExternal.inputArea,\n        error: true,\n        label: label,\n        helperText: helperText,\n        value: value,\n        type: type,\n        style: styles,\n        required: required,\n        onChange: handleChange,\n        variant: \"filled\",\n        InputProps: {\n          classes,\n          disableUnderline: true,\n          startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"start\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(AccountCircle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }\n          })),\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: \"/icons/closeFilled.svg\",\n            alt: \"Error\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(TextField, {\n    className: LitmusTextFieldStylesExternal.inputArea,\n    error: validationError,\n    disabled: disabled,\n    label: label,\n    helperText: helperText,\n    value: value,\n    type: type,\n    style: styles,\n    required: required,\n    onChange: handleChange,\n    variant: \"filled\",\n    InputProps: {\n      classes,\n      disableUnderline: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default InputFieldOutline;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/InputFieldOutline/index.tsx"],"names":["React","useState","TextField","IconButton","InputAdornment","AccountCircle","Visibility","VisibilityOff","useStyles","useStylesLitmus","InputFieldOutline","type","label","value","disabled","helperText","validationError","styles","success","required","iconType","handleChange","LitmusTextFieldStylesExternal","showPassword","setShowPassword","classes","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","inputArea","disableUnderline","endAdornment","startAdornment"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { OutlinedInputProps, TextField } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { useStyles, useStylesLitmus } from './styles';\n\ninterface InputFieldOutlineProps {\n  label: string;\n  type?: string;\n  helperText?: string;\n  validationError: boolean;\n  success?: boolean;\n  disabled?: boolean;\n  value: string;\n  required?: boolean;\n  iconType?: string | undefined;\n  styles?: {};\n  handleChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst InputFieldOutline: React.FC<InputFieldOutlineProps> = ({\n  type,\n  label,\n  value,\n  disabled,\n  helperText,\n  validationError,\n  styles,\n  success,\n  required,\n  iconType,\n  handleChange,\n}) => {\n  const LitmusTextFieldStylesExternal = useStyles();\n\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n\n  const classes = useStylesLitmus(success);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(true);\n  };\n\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault();\n    setShowPassword(false);\n  };\n\n  if (type === 'password' && validationError === false) {\n    return (\n      <TextField\n        className={LitmusTextFieldStylesExternal.inputArea}\n        label={label}\n        helperText={helperText}\n        value={value}\n        type={showPassword ? 'text' : 'password'}\n        required={required}\n        onChange={handleChange}\n        variant=\"filled\"\n        style={styles}\n        InputProps={\n          {\n            classes,\n            disableUnderline: true,\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          } as Partial<OutlinedInputProps>\n        }\n      />\n    );\n  }\n  if (type === 'password' && validationError === true) {\n    return (\n      <TextField\n        className={LitmusTextFieldStylesExternal.inputArea}\n        error\n        label={label}\n        helperText={helperText}\n        value={value}\n        type={showPassword ? 'text' : 'password'}\n        required={required}\n        onChange={handleChange}\n        style={styles}\n        variant=\"filled\"\n        InputProps={\n          {\n            classes,\n            disableUnderline: true,\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          } as Partial<OutlinedInputProps>\n        }\n      />\n    );\n  }\n\n  if (iconType) {\n    if (iconType === 'iconLeft' && validationError === false) {\n      return (\n        <TextField\n          className={LitmusTextFieldStylesExternal.inputArea}\n          label={label}\n          helperText={helperText}\n          value={value}\n          type={type}\n          required={required}\n          style={styles}\n          onChange={handleChange}\n          variant=\"filled\"\n          InputProps={\n            {\n              classes,\n              disableUnderline: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            } as Partial<OutlinedInputProps>\n          }\n        />\n      );\n    }\n    if (iconType === 'iconLeft' && validationError === true) {\n      return (\n        <TextField\n          className={LitmusTextFieldStylesExternal.inputArea}\n          error\n          label={label}\n          helperText={helperText}\n          value={value}\n          type={type}\n          style={styles}\n          required={required}\n          onChange={handleChange}\n          variant=\"filled\"\n          InputProps={\n            {\n              classes,\n              disableUnderline: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            } as Partial<OutlinedInputProps>\n          }\n        />\n      );\n    }\n    if (iconType === 'iconRight' && validationError === false) {\n      return (\n        <TextField\n          className={LitmusTextFieldStylesExternal.inputArea}\n          label={label}\n          helperText={helperText}\n          value={value}\n          type={type}\n          style={styles}\n          required={required}\n          onChange={handleChange}\n          variant=\"filled\"\n          InputProps={\n            {\n              classes,\n              disableUnderline: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            } as Partial<OutlinedInputProps>\n          }\n        />\n      );\n    }\n    if (\n      iconType === 'iconRight' &&\n      validationError === false &&\n      success === true\n    ) {\n      return (\n        <TextField\n          className={LitmusTextFieldStylesExternal.inputArea}\n          label={label}\n          helperText={helperText}\n          value={value}\n          type={type}\n          required={required}\n          style={styles}\n          onChange={handleChange}\n          variant=\"filled\"\n          InputProps={\n            {\n              classes,\n              disableUnderline: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            } as Partial<OutlinedInputProps>\n          }\n        />\n      );\n    }\n    if (iconType === 'iconRight' && validationError === true) {\n      return (\n        <TextField\n          className={LitmusTextFieldStylesExternal.inputArea}\n          error\n          label={label}\n          helperText={helperText}\n          value={value}\n          type={type}\n          style={styles}\n          required={required}\n          onChange={handleChange}\n          variant=\"filled\"\n          InputProps={\n            {\n              classes,\n              disableUnderline: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <img src=\"/icons/closeFilled.svg\" alt=\"Error\" />\n                </InputAdornment>\n              ),\n            } as Partial<OutlinedInputProps>\n          }\n        />\n      );\n    }\n    if (iconType === 'iconLeftRight' && validationError === false) {\n      return (\n        <TextField\n          className={LitmusTextFieldStylesExternal.inputArea}\n          label={label}\n          helperText={helperText}\n          value={value}\n          type={type}\n          style={styles}\n          required={required}\n          onChange={handleChange}\n          variant=\"filled\"\n          InputProps={\n            {\n              classes,\n              disableUnderline: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            } as Partial<OutlinedInputProps>\n          }\n        />\n      );\n    }\n    if (iconType === 'iconLeftRight' && validationError === true) {\n      return (\n        <TextField\n          className={LitmusTextFieldStylesExternal.inputArea}\n          error\n          label={label}\n          helperText={helperText}\n          value={value}\n          type={type}\n          style={styles}\n          required={required}\n          onChange={handleChange}\n          variant=\"filled\"\n          InputProps={\n            {\n              classes,\n              disableUnderline: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <img src=\"/icons/closeFilled.svg\" alt=\"Error\" />\n                </InputAdornment>\n              ),\n            } as Partial<OutlinedInputProps>\n          }\n        />\n      );\n    }\n  }\n\n  return (\n    <TextField\n      className={LitmusTextFieldStylesExternal.inputArea}\n      error={validationError}\n      disabled={disabled}\n      label={label}\n      helperText={helperText}\n      value={value}\n      type={type}\n      style={styles}\n      required={required}\n      onChange={handleChange}\n      variant=\"filled\"\n      InputProps={\n        {\n          classes,\n          disableUnderline: true,\n        } as Partial<OutlinedInputProps>\n      }\n    />\n  );\n};\n\nexport default InputFieldOutline;\n"]},"metadata":{},"sourceType":"module"}