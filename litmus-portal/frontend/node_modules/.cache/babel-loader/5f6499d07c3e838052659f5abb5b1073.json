{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/Home/AverageResilienceScore/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\nvar AverageResilienceScore = function AverageResilienceScore(_ref) {\n  _s();\n\n  var value = _ref.value;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      progress = _useState2[0],\n      setProgress = _useState2[1];\n  /*\n    Cutting a regular progres indicator into half\n    and converting value to fit in that range\n    Ex - 100 becomes half -> 100/2 = 50\n    So full range of the progress indicator is 50    \n  */\n\n\n  useEffect(function () {\n    setProgress(value / 2);\n  }, [value]);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headerMain,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, t('homeView.averageResilienceScore.header')), /*#__PURE__*/React.createElement(Box, {\n    className: classes.progressBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progressIndicatorDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    variant: \"static\",\n    thickness: 2,\n    size: 200,\n    value: progress,\n    className: classes.progressIndicator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progressIndicatorCompleterDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progressIndicatorCompleterDivTransformer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    variant: \"static\",\n    thickness: 2,\n    size: 200,\n    value: (100 - value) / 2,\n    className: classes.progressIndicatorCompleter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.progressLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/avgResilience.png\",\n    alt: \"Progress Icon\",\n    className: classes.progressIcon,\n    \"data-cy\": \"progressIcon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    component: \"div\",\n    className: classes.progressText,\n    \"data-cy\": \"progressValue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"\".concat(Math.round(value), \"%\")))), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    className: classes.testResultDesc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, t('homeView.averageResilienceScore.desc')));\n};\n\n_s(AverageResilienceScore, \"D17BsWx5BPxG54OzKSH3JbxkH7s=\", false, function () {\n  return [useStyles, useTranslation];\n});\n\n_c = AverageResilienceScore;\nexport default AverageResilienceScore;\n\nvar _c;\n\n$RefreshReg$(_c, \"AverageResilienceScore\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/Home/AverageResilienceScore/index.tsx"],"names":["React","useState","useEffect","Paper","CircularProgress","Box","Typography","useTranslation","useStyles","AverageResilienceScore","value","classes","t","progress","setProgress","root","headerMain","progressBox","progressIndicatorDiv","progressIndicator","progressIndicatorCompleterDiv","progressIndicatorCompleterDivTransformer","progressIndicatorCompleter","progressLabel","progressIcon","progressText","Math","round","testResultDesc"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\ninterface AverageResilienceScoreProps {\n  value: number;\n}\n\nconst AverageResilienceScore: React.FC<AverageResilienceScoreProps> = ({\n  value,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [progress, setProgress] = useState<number>(0);\n\n  /*\n    Cutting a regular progres indicator into half\n    and converting value to fit in that range\n    Ex - 100 becomes half -> 100/2 = 50\n    So full range of the progress indicator is 50    \n  */\n  useEffect(() => {\n    setProgress(value / 2);\n  }, [value]);\n\n  return (\n    <Paper className={classes.root} variant=\"outlined\">\n      <Typography className={classes.headerMain}>\n        {t('homeView.averageResilienceScore.header')}\n      </Typography>\n      <Box className={classes.progressBox}>\n        <div className={classes.progressIndicatorDiv}>\n          <CircularProgress\n            variant=\"static\"\n            thickness={2}\n            size={200}\n            value={progress}\n            className={classes.progressIndicator}\n          />\n        </div>\n        <div className={classes.progressIndicatorCompleterDiv}>\n          <div className={classes.progressIndicatorCompleterDivTransformer}>\n            <CircularProgress\n              variant=\"static\"\n              thickness={2}\n              size={200}\n              value={(100 - value) / 2}\n              className={classes.progressIndicatorCompleter}\n            />\n          </div>\n        </div>\n        <Box className={classes.progressLabel}>\n          <img\n            src=\"/icons/avgResilience.png\"\n            alt=\"Progress Icon\"\n            className={classes.progressIcon}\n            data-cy=\"progressIcon\"\n          />\n          <Typography\n            variant=\"caption\"\n            component=\"div\"\n            className={classes.progressText}\n            data-cy=\"progressValue\"\n          >{`${Math.round(value)}%`}</Typography>\n        </Box>\n      </Box>\n      <Typography variant=\"body2\" className={classes.testResultDesc}>\n        {t('homeView.averageResilienceScore.desc')}\n      </Typography>\n    </Paper>\n  );\n};\n\nexport default AverageResilienceScore;\n"]},"metadata":{},"sourceType":"module"}