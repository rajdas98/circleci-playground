{"ast":null,"code":"import _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/Header/ProfileDropdownSection.tsx\";\n\nimport { Box, IconButton } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\nimport React, { useRef, useState } from 'react';\nimport userAvatar from '../../utils/user';\nimport ProfileInfoDropdownItems from './ProfileDropdownItems';\nimport useStyles from './styles';\n\nvar ProfileDropdownSection = function ProfileDropdownSection(_ref) {\n  var name = _ref.name,\n      email = _ref.email,\n      username = _ref.username,\n      selectedProjectID = _ref.selectedProjectID,\n      CallbackToSetSelectedProjectID = _ref.CallbackToSetSelectedProjectID,\n      selectedProjectName = _ref.selectedProjectName,\n      userRole = _ref.userRole;\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isProfilePopoverOpen = _useState2[0],\n      setProfilePopoverOpen = _useState2[1];\n\n  var profileMenuRef = useRef(null);\n  var initials = name ? userAvatar(name) : userAvatar(name);\n\n  var sendSelectedProjectIDToHeader = function sendSelectedProjectIDToHeader(selectedProjectID) {\n    CallbackToSetSelectedProjectID(selectedProjectID);\n    setProfilePopoverOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    p: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, name ? /*#__PURE__*/React.createElement(Avatar, {\n    alt: initials,\n    className: classes.avatarBackground,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, initials) : /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"User\",\n    className: classes.avatarBackground,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    p: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"full-name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, name, ' ', /*#__PURE__*/React.createElement(IconButton, {\n    \"data-cy\": \"header-dropdown\",\n    edge: \"end\",\n    ref: profileMenuRef,\n    \"aria-label\": \"account of current user\",\n    \"aria-haspopup\": \"true\",\n    onClick: function onClick() {\n      return setProfilePopoverOpen(true);\n    },\n    className: classes.buttonPositionExpand,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ExpandMoreTwoToneIcon, {\n    htmlColor: \"grey\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.projectDisplay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, username, \" . \", userRole, \" . \", selectedProjectName))), /*#__PURE__*/React.createElement(ProfileInfoDropdownItems, {\n    anchorEl: profileMenuRef.current,\n    isOpen: isProfilePopoverOpen,\n    onClose: function onClose() {\n      return setProfilePopoverOpen(false);\n    },\n    name: name,\n    username: username,\n    email: email,\n    selectedProjectID: selectedProjectID,\n    CallbackToSetSelectedProjectIDOnProfileDropdown: sendSelectedProjectIDToHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ProfileDropdownSection;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/Header/ProfileDropdownSection.tsx"],"names":["Box","IconButton","Avatar","Typography","ExpandMoreTwoToneIcon","React","useRef","useState","userAvatar","ProfileInfoDropdownItems","useStyles","ProfileDropdownSection","name","email","username","selectedProjectID","CallbackToSetSelectedProjectID","selectedProjectName","userRole","classes","isProfilePopoverOpen","setProfilePopoverOpen","profileMenuRef","initials","sendSelectedProjectIDToHeader","avatarBackground","buttonPositionExpand","projectDisplay","current"],"mappings":"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","sourcesContent":["import { Box, IconButton } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\nimport React, { useRef, useState } from 'react';\nimport { ProjectsCallBackType } from '../../models/header';\nimport userAvatar from '../../utils/user';\nimport ProfileInfoDropdownItems from './ProfileDropdownItems';\nimport useStyles from './styles';\n\ninterface ProfileInfoDropdownSectionProps {\n  name: string;\n  email: string;\n  username: string;\n  selectedProjectID: string;\n  CallbackToSetSelectedProjectID: ProjectsCallBackType;\n  userRole: string;\n  selectedProjectName: string;\n}\n\nconst ProfileDropdownSection: React.FC<ProfileInfoDropdownSectionProps> = ({\n  name,\n  email,\n  username,\n  selectedProjectID,\n  CallbackToSetSelectedProjectID,\n  selectedProjectName,\n  userRole,\n}) => {\n  const classes = useStyles();\n  const [isProfilePopoverOpen, setProfilePopoverOpen] = useState(false);\n  const profileMenuRef = useRef<HTMLButtonElement>(null);\n  const initials = name ? userAvatar(name) : userAvatar(name);\n\n  const sendSelectedProjectIDToHeader = (selectedProjectID: string) => {\n    CallbackToSetSelectedProjectID(selectedProjectID);\n    setProfilePopoverOpen(false);\n  };\n\n  return (\n    <div>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Box p={1}>\n          {name ? (\n            <Avatar alt={initials} className={classes.avatarBackground}>\n              {initials}\n            </Avatar>\n          ) : (\n            <Avatar alt=\"User\" className={classes.avatarBackground} />\n          )}\n        </Box>\n\n        <Box p={1}>\n          <Typography data-cy=\"full-name\">\n            {name}{' '}\n            <IconButton\n              data-cy=\"header-dropdown\"\n              edge=\"end\"\n              ref={profileMenuRef}\n              aria-label=\"account of current user\"\n              aria-haspopup=\"true\"\n              onClick={() => setProfilePopoverOpen(true)}\n              className={classes.buttonPositionExpand}\n            >\n              <ExpandMoreTwoToneIcon htmlColor=\"grey\" />\n            </IconButton>\n          </Typography>\n\n          <Typography className={classes.projectDisplay}>\n            {username} . {userRole} . {selectedProjectName}\n          </Typography>\n        </Box>\n      </Box>\n      <ProfileInfoDropdownItems\n        anchorEl={profileMenuRef.current as HTMLElement}\n        isOpen={isProfilePopoverOpen}\n        onClose={() => setProfilePopoverOpen(false)}\n        name={name}\n        username={username}\n        email={email}\n        selectedProjectID={selectedProjectID}\n        CallbackToSetSelectedProjectIDOnProfileDropdown={\n          sendSelectedProjectIDToHeader\n        }\n      />\n    </div>\n  );\n};\n\nexport default ProfileDropdownSection;\n"]},"metadata":{},"sourceType":"module"}