{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/InstallChaos/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Typography } from '@material-ui/core';\nimport Done from '@material-ui/icons/DoneAllTwoTone';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\nimport ButtonOutline from '../Button/ButtonOutline';\n\nvar InstallChaos = function InstallChaos(_ref) {\n  _s();\n\n  var title = _ref.title,\n      description = _ref.description,\n      yamlLink = _ref.yamlLink;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      copying = _useState2[0],\n      setCopying = _useState2[1];\n\n  var yaml = \"kubectl apply -f \".concat(yamlLink);\n\n  function copyTextToClipboard(text) {\n    if (!navigator.clipboard) {\n      console.error('Oops Could not copy text: ');\n      return;\n    }\n\n    setCopying(true);\n    navigator.clipboard.writeText(text).catch(function (err) {\n      return console.error('Async: Could not copy text: ', err);\n    });\n    setTimeout(function () {\n      return setCopying(false);\n    }, 3000);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, description), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.linkBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    className: classes.yamlLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"kubectl apply -f \", yamlLink), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutline, {\n    isDisabled: false,\n    handleClick: function handleClick() {\n      return copyTextToClipboard(yaml);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, !copying ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rowDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/copy.svg\",\n    className: classes.copyBtnImg,\n    alt: \"copy\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, t('myhub.installChaos.copy'))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rowDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Done, {\n    className: classes.done,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, t('myhub.installChaos.copied')))))));\n};\n\n_s(InstallChaos, \"2EBMOz/m9+xrRkVRuQtXrz1FGWY=\", false, function () {\n  return [useStyles, useTranslation];\n});\n\n_c = InstallChaos;\nexport default InstallChaos;\n\nvar _c;\n\n$RefreshReg$(_c, \"InstallChaos\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/InstallChaos/index.tsx"],"names":["Typography","Done","React","useState","useTranslation","useStyles","ButtonOutline","InstallChaos","title","description","yamlLink","classes","t","copying","setCopying","yaml","copyTextToClipboard","text","navigator","clipboard","console","error","writeText","catch","err","setTimeout","root","linkBox","buttonBox","rowDiv","copyBtnImg","done"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\nimport Done from '@material-ui/icons/DoneAllTwoTone';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\nimport ButtonOutline from '../Button/ButtonOutline';\n\ninterface InstallProps {\n  title: string;\n  description: string;\n  yamlLink: string;\n}\n\nconst InstallChaos: React.FC<InstallProps> = ({\n  title,\n  description,\n  yamlLink,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [copying, setCopying] = useState(false);\n  const yaml = `kubectl apply -f ${yamlLink}`;\n\n  function copyTextToClipboard(text: string) {\n    if (!navigator.clipboard) {\n      console.error('Oops Could not copy text: ');\n      return;\n    }\n    setCopying(true);\n    navigator.clipboard\n      .writeText(text)\n      .catch((err) => console.error('Async: Could not copy text: ', err));\n\n    setTimeout(() => setCopying(false), 3000);\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>{title}</div>\n      <div className={classes.description}>{description}</div>\n      <div className={classes.linkBox}>\n        <Typography variant=\"subtitle1\" className={classes.yamlLink}>\n          kubectl apply -f {yamlLink}\n        </Typography>\n\n        <div className={classes.buttonBox}>\n          <ButtonOutline\n            isDisabled={false}\n            handleClick={() => copyTextToClipboard(yaml)}\n          >\n            {!copying ? (\n              <div className={classes.rowDiv}>\n                <img\n                  src=\"/icons/copy.svg\"\n                  className={classes.copyBtnImg}\n                  alt=\"copy\"\n                />\n                <Typography>{t('myhub.installChaos.copy')}</Typography>\n              </div>\n            ) : (\n              <div className={classes.rowDiv}>\n                <Done className={classes.done} />\n                <Typography>{t('myhub.installChaos.copied')}</Typography>\n              </div>\n            )}\n          </ButtonOutline>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default InstallChaos;\n"]},"metadata":{},"sourceType":"module"}