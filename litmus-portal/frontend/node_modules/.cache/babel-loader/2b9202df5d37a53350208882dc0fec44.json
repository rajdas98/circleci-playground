{"ast":null,"code":"import _objectSpread from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseAnalytics/WorkflowComparisonTable/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-loop-func */\n\n/* eslint-disable no-console */\nimport { useQuery } from '@apollo/client';\nimport { IconButton, MuiThemeProvider, Paper, Table, TableBody, TableCell, TableContainer, TablePagination, TableRow, Typography } from '@material-ui/core';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as _ from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport Loader from '../../../../components/Loader';\nimport { WORKFLOW_LIST_DETAILS } from '../../../../graphql/quries';\nimport { customThemeAnalyticsTable, customThemeAnalyticsTableCompareMode } from '../../../../theme';\nimport { sortAlphaAsc, sortAlphaDesc, sortNumAsc, sortNumDesc } from '../../../../utils/sort';\nimport ResilienceScoreComparisonPlot from '../WorkflowComparisonPlot/index';\nimport useStyles from './styles';\nimport TableData from './TableData';\nimport TableHeader from './TableHeader';\nimport TableToolBar from './TableToolbar';\n\nvar WorkflowComparisonTable = function WorkflowComparisonTable() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _React$useState = React.useState({\n    range: {\n      startDate: 'all',\n      endDate: 'all'\n    },\n    selectedCluster: 'All',\n    sortData: {\n      name: {\n        sort: false,\n        ascending: true\n      },\n      startDate: {\n        sort: true,\n        ascending: true\n      },\n      cluster: {\n        sort: false,\n        ascending: true\n      }\n    },\n    searchTokens: ['']\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      filter = _React$useState2[0],\n      setFilter = _React$useState2[1];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayData = _useState2[0],\n      setDisplayData = _useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      clusters = _React$useState4[0],\n      setClusters = _React$useState4[1];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      page = _React$useState6[0],\n      setPage = _React$useState6[1];\n\n  var _React$useState7 = React.useState(5),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      rowsPerPage = _React$useState8[0],\n      setRowsPerPage = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      selected = _React$useState10[0],\n      setSelected = _React$useState10[1];\n\n  var isSelected = function isSelected(name) {\n    return selected.indexOf(name) !== -1;\n  };\n\n  var emptyRows = rowsPerPage - Math.min(rowsPerPage, displayData.length - page * rowsPerPage);\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      compare = _React$useState12[0],\n      setCompare = _React$useState12[1];\n\n  var _React$useState13 = React.useState(true),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      isDataAvailable = _React$useState14[0],\n      setIsDataAvailable = _React$useState14[1];\n\n  var _React$useState15 = React.useState(true),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      showAll = _React$useState16[0],\n      setShowAll = _React$useState16[1];\n\n  var _React$useState17 = React.useState(),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      plotDataForComparison = _React$useState18[0],\n      setPlotDataForComparison = _React$useState18[1];\n\n  var _React$useState19 = React.useState([]),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      totalValidWorkflowRuns = _React$useState20[0],\n      setTotalValidWorkflowRuns = _React$useState20[1];\n\n  var _React$useState21 = React.useState(0),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      totalValidWorkflowRunsCount = _React$useState22[0],\n      setTotalValidWorkflowRunsCount = _React$useState22[1];\n\n  var selectedProjectID = useSelector(function (state) {\n    return state.userData.selectedProjectID;\n  }); // Apollo query to get the scheduled workflow data\n\n  var _useQuery = useQuery(WORKFLOW_LIST_DETAILS, {\n    variables: {\n      projectID: selectedProjectID,\n      workflowIDs: []\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var getClusters = function getClusters(searchingData) {\n    var uniqueList = [];\n    searchingData.forEach(function (data) {\n      if (!uniqueList.includes(data.cluster_name)) {\n        uniqueList.push(data.cluster_name);\n      }\n    });\n    setClusters(uniqueList);\n  };\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  var handleSelectAllClick = function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      var newSelecteds = displayData.map(function (n) {\n        return n.workflow_id;\n      });\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  var handleClick = function handleClick(event, name) {\n    var selectedIndex = selected.indexOf(name);\n    var newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  var searchingDataRetriever = function searchingDataRetriever() {\n    var searchingData = [];\n\n    if (compare === false) {\n      var _data$ListWorkflow;\n\n      searchingData = (_data$ListWorkflow = data === null || data === void 0 ? void 0 : data.ListWorkflow) !== null && _data$ListWorkflow !== void 0 ? _data$ListWorkflow : [];\n    } else {\n      var searchedData = [];\n      selected.forEach(function (workflowID) {\n        data === null || data === void 0 ? void 0 : data.ListWorkflow.forEach(function (workflow) {\n          if (workflow.workflow_id === workflowID) {\n            searchedData.push(workflow);\n          }\n        });\n      });\n      searchingData = searchedData;\n    }\n\n    return searchingData;\n  };\n\n  var randomColor = function randomColor() {\n    return Math.floor(Math.random() * 16777215).toString(16);\n  }; // Function to convert UNIX time in format of DD MMM YYY\n\n\n  var formatDate = function formatDate(date) {\n    var updated = new Date(parseInt(date, 10) * 1000).toString();\n    var resDate = moment(updated).format('dddd DD/MM/YYYY HH:mm:ss Z');\n    return resDate;\n  };\n\n  var generateDataForComparing = function generateDataForComparing() {\n    var plotData = {\n      xData: {\n        Hourly: [[]],\n        Daily: [[]],\n        Monthly: [[]]\n      },\n      yData: {\n        Hourly: [[]],\n        Daily: [[]],\n        Monthly: [[]]\n      },\n      labels: [],\n      colors: []\n    };\n    var totalValidRuns = 0;\n    var totalValidWorkflowRuns = [];\n    var timeSeriesArray = [];\n    selected.forEach(function (workflow) {\n      var workflowData = data === null || data === void 0 ? void 0 : data.ListWorkflow.filter(function match(wkf) {\n        return wkf.workflow_id === workflow;\n      });\n      var runs = workflowData ? workflowData[0].workflow_runs : [];\n      var workflowTimeSeriesData = [];\n      var isWorkflowValid = false;\n\n      try {\n        runs.forEach(function (data) {\n          try {\n            (function () {\n              var executionData = JSON.parse(data.execution_data);\n              var nodes = executionData.nodes;\n              var experimentTestResultsArrayPerWorkflowRun = [];\n              var totalExperimentsPassed = 0;\n              var weightsSum = 0;\n              var testDetails = {\n                testNames: [],\n                testWeights: [],\n                testResults: []\n              };\n              var isValid = false;\n\n              for (var _i = 0, _Object$keys = Object.keys(nodes); _i < _Object$keys.length; _i++) {\n                var key = _Object$keys[_i];\n                var node = nodes[key];\n\n                if (node.chaosData) {\n                  (function () {\n                    var chaosData = node.chaosData;\n\n                    if (chaosData.experimentVerdict === 'Pass' || chaosData.experimentVerdict === 'Fail') {\n                      var weightageMap = workflowData ? workflowData[0].weightages : [];\n                      weightageMap.forEach(function (weightage) {\n                        if (weightage.experiment_name === chaosData.experimentName) {\n                          if (chaosData.experimentVerdict === 'Pass') {\n                            experimentTestResultsArrayPerWorkflowRun.push(weightage.weightage);\n                            totalExperimentsPassed += 1;\n                          }\n\n                          if (chaosData.experimentVerdict === 'Fail') {\n                            experimentTestResultsArrayPerWorkflowRun.push(0);\n                          }\n\n                          if (chaosData.experimentVerdict === 'Pass' || chaosData.experimentVerdict === 'Fail') {\n                            weightsSum += weightage.weightage;\n                            testDetails.testNames.push(weightage.experiment_name);\n                            testDetails.testWeights.push(weightage.weightage);\n                            testDetails.testResults.push(chaosData.experimentVerdict);\n                            isValid = true;\n                            isWorkflowValid = true;\n                          }\n                        }\n                      });\n                    }\n                  })();\n                }\n              }\n\n              if (executionData.event_type === 'UPDATE' && isValid) {\n                totalValidRuns += 1;\n                totalValidWorkflowRuns.push({\n                  cluster_name: workflowData ? workflowData[0].cluster_name : '',\n                  workflow_name: workflowData ? workflowData[0].workflow_name : '',\n                  run_date: formatDate(executionData.creationTimestamp),\n                  tests_passed: totalExperimentsPassed,\n                  tests_failed: experimentTestResultsArrayPerWorkflowRun.length - totalExperimentsPassed,\n                  resilience_score: experimentTestResultsArrayPerWorkflowRun.length ? experimentTestResultsArrayPerWorkflowRun.reduce(function (a, b) {\n                    return a + b;\n                  }, 0) / weightsSum * 100 : 0,\n                  test_details: testDetails\n                });\n                workflowTimeSeriesData.push({\n                  date: data.last_updated,\n                  value: experimentTestResultsArrayPerWorkflowRun.length ? experimentTestResultsArrayPerWorkflowRun.reduce(function (a, b) {\n                    return a + b;\n                  }, 0) / weightsSum * 100 : 0\n                });\n              }\n            })();\n          } catch (error) {\n            console.error(error);\n          }\n        });\n\n        if (isWorkflowValid) {\n          plotData.labels.push(workflowData ? workflowData[0].workflow_name : '');\n          plotData.colors.push(\"#\".concat(randomColor()));\n          timeSeriesArray.push(workflowTimeSeriesData);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    if (plotData.labels.length === 0) {\n      setIsDataAvailable(false);\n    }\n\n    timeSeriesArray.forEach(function (workflowTimeSeriesData, index) {\n      var hourlyGroupedResults = _.groupBy(workflowTimeSeriesData, function (data) {\n        return moment.unix(parseInt(data.date, 10)).startOf('hour').format('YYYY-MM-DD HH:mm:ss');\n      });\n\n      var dailyGroupedResults = _.groupBy(workflowTimeSeriesData, function (data) {\n        return moment.unix(parseInt(data.date, 10)).startOf('day').format('YYYY-MM-DD');\n      });\n\n      var monthlyGroupedResults = _.groupBy(workflowTimeSeriesData, function (data) {\n        return moment.unix(parseInt(data.date, 10)).startOf('month').format('YYYY-MM');\n      });\n\n      plotData.xData.Hourly[index] = [];\n      plotData.yData.Hourly[index] = [];\n      Object.keys(hourlyGroupedResults).forEach(function (hour) {\n        var total = 0;\n        hourlyGroupedResults[hour].forEach(function (data) {\n          total += data.value;\n        });\n        plotData.xData.Hourly[index].push(hour);\n        plotData.yData.Hourly[index].push(total / hourlyGroupedResults[hour].length);\n      });\n      plotData.xData.Daily[index] = [];\n      plotData.yData.Daily[index] = [];\n      Object.keys(dailyGroupedResults).forEach(function (day) {\n        var total = 0;\n        dailyGroupedResults[day].forEach(function (data) {\n          total += data.value;\n        });\n        plotData.xData.Daily[index].push(day);\n        plotData.yData.Daily[index].push(total / dailyGroupedResults[day].length);\n      });\n      plotData.xData.Monthly[index] = [];\n      plotData.yData.Monthly[index] = [];\n      Object.keys(monthlyGroupedResults).forEach(function (month) {\n        var total = 0;\n        monthlyGroupedResults[month].forEach(function (data) {\n          total += data.value;\n        });\n        plotData.xData.Monthly[index].push(month);\n        plotData.yData.Monthly[index].push(total / monthlyGroupedResults[month].length);\n      });\n    });\n    setPlotDataForComparison(plotData);\n    setTotalValidWorkflowRuns(totalValidWorkflowRuns);\n    setTotalValidWorkflowRunsCount(totalValidRuns);\n  };\n\n  var CallbackForComparing = function CallbackForComparing(compareWorkflows) {\n    setCompare(compareWorkflows);\n    var payload = [];\n    selected.forEach(function (workflow) {\n      displayData.forEach(function (displayWorkflow, i) {\n        if (displayWorkflow.workflow_id === workflow && data) {\n          payload.push(data === null || data === void 0 ? void 0 : data.ListWorkflow[i]);\n        }\n      });\n    });\n    generateDataForComparing();\n    setDisplayData(payload);\n  };\n\n  var generatePDF = function generatePDF() {\n    if (document.getElementById('analytics')) {\n      var heads = [{\n        cluster_name: 'Cluster Name',\n        workflow_name: 'Workflow Name',\n        run_date: 'Date-Time',\n        tests_passed: '#Expts. Passed',\n        tests_failed: '#Expts. Failed',\n        resilience_score: 'Reliability Score',\n        test_details_string: 'Experiment Details\\nName\\nWeight / Verdict'\n      }];\n      var rows = [];\n      totalValidWorkflowRuns.forEach(function (run) {\n        var _run$test_details;\n\n        var detail_string = '';\n        (_run$test_details = run.test_details) === null || _run$test_details === void 0 ? void 0 : _run$test_details.testNames.forEach(function (experiment, index) {\n          var _run$test_details2, _run$test_details3;\n\n          detail_string += \"\".concat(experiment, \"\\n\").concat((_run$test_details2 = run.test_details) === null || _run$test_details2 === void 0 ? void 0 : _run$test_details2.testWeights[index], \" / \").concat((_run$test_details3 = run.test_details) === null || _run$test_details3 === void 0 ? void 0 : _run$test_details3.testResults[index], \"\\n\");\n        });\n        rows.push({\n          cluster_name: run.cluster_name,\n          workflow_name: run.workflow_name,\n          run_date: run.run_date,\n          tests_passed: run.tests_passed.toString(),\n          tests_failed: run.tests_failed.toString(),\n          resilience_score: run.resilience_score.toString(),\n          test_details_string: detail_string\n        });\n      });\n      var input = document.getElementById('analytics');\n      html2canvas(input).then(function (canvas) {\n        var imgWidth = 206;\n        var imgHeight = canvas.height * imgWidth / canvas.width;\n        var contentDataURL = canvas.toDataURL('image/png');\n        var doc = new jsPDF('p', 'mm', 'a4'); // A4 size page of PDF\n\n        var position = -45;\n        doc.setFontSize(10);\n        doc.text('Litmus Portal Report Version: 1.10', 10, 10);\n        doc.text('Time of Generation:', 10, 15);\n        doc.text(new Date().toString(), 42, 15);\n        doc.text('Total Number of Chaos Workflow Schedules under consideration:', 10, 20);\n        doc.text(plotDataForComparison ? plotDataForComparison.labels.length.toString() : '0', 114, 20);\n        doc.text('Total Number of Chaos Workflow Runs under consideration:', 10, 25);\n        doc.text(totalValidWorkflowRunsCount.toString(), 105, 25);\n        var img = new Image();\n        img.src = '/icons/LitmusLogo.png';\n        doc.addImage(img, 'png', 165, 10, 30, 12.5);\n        doc.line(0, 33, 300, 33);\n        doc.setLineWidth(5.0);\n        doc.text('Workflow Run Details Table & Workflow Schedules Table with Resilience Score Comparison Graph', 27.5, 39);\n\n        try {\n          autoTable(doc, {\n            head: heads,\n            body: rows,\n            startY: 44,\n            margin: {\n              horizontal: 2\n            },\n            styles: {\n              overflow: 'linebreak'\n            },\n            bodyStyles: {\n              valign: 'top'\n            },\n            theme: 'striped',\n            showHead: 'firstPage'\n          });\n        } catch (err) {\n          console.log(err);\n        }\n\n        doc.addPage();\n        doc.addImage(contentDataURL, 'PNG', 2, position, imgWidth, imgHeight);\n        doc.save('litmus-portal-analytics.pdf'); // Generated PDF\n      });\n    }\n  };\n\n  useEffect(function () {\n    setDisplayData(data ? data.ListWorkflow : []);\n    getClusters(data ? data.ListWorkflow : []);\n  }, [data]);\n  useEffect(function () {\n    var payload = searchingDataRetriever().filter(function (wkf) {\n      return filter.searchTokens.every(function (s) {\n        return wkf.workflow_name.toLowerCase().includes(s) || (wkf.cluster_name !== undefined ? wkf.cluster_name.toLowerCase().includes(s) : false);\n      });\n    }).filter(function (data) {\n      return filter.selectedCluster === 'All' ? true : data.cluster_name === filter.selectedCluster;\n    }).filter(function (data) {\n      return filter.range.startDate === 'all' || filter.range.startDate && filter.range.endDate === undefined ? true : parseInt(data.created_at, 10) * 1000 >= new Date(moment(filter.range.startDate).format()).getTime() && parseInt(data.created_at, 10) * 1000 <= new Date(new Date(moment(filter.range.endDate).format()).setHours(23, 59, 59)).getTime();\n    }).sort(function (a, b) {\n      // Sorting based on unique fields\n      if (filter.sortData.name.sort) {\n        var x = a.workflow_name;\n        var y = b.workflow_name;\n        return filter.sortData.name.ascending ? sortAlphaAsc(x, y) : sortAlphaDesc(x, y);\n      }\n\n      if (filter.sortData.startDate.sort) {\n        var _x = parseInt(a.created_at, 10);\n\n        var _y = parseInt(b.created_at, 10);\n\n        return filter.sortData.startDate.ascending ? sortNumAsc(_y, _x) : sortNumDesc(_y, _x);\n      }\n\n      if (filter.sortData.cluster.sort) {\n        var _x2 = a.cluster_name;\n        var _y2 = b.cluster_name;\n        return filter.sortData.cluster.ascending ? sortAlphaAsc(_x2, _y2) : sortAlphaDesc(_x2, _y2);\n      }\n\n      return 0;\n    });\n    setDisplayData(payload);\n    setShowAll(false);\n    getClusters(searchingDataRetriever());\n  }, [filter, compare]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    id: \"analytics\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.analyticsDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 11\n    }\n  }, ' ', compare === true ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"back\",\n    \"aria-haspopup\": \"true\",\n    onClick: function onClick() {\n      return setCompare(false);\n    },\n    className: classes.buttonBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExpandMoreTwoToneIcon, {\n    htmlColor: palette.secondary.dark,\n    className: classes.buttonBackStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 15\n    }\n  }), ' ', \"Workflow comparison\")), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 9\n    }\n  }, compare === true ? 'Choose the right workflows and get comparative results' : 'Choose workflows to compare their resilience scores'), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tableFix,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"Heading section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableToolBar, {\n    numSelected: selected.length,\n    searchToken: filter.searchTokens[0],\n    handleSearch: function handleSearch(event, token) {\n      return setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        searchTokens: (event !== undefined ? event.target.value : token || '').toLowerCase().split(' ').filter(function (s) {\n          return s !== '';\n        })\n      }));\n    },\n    clusters: clusters,\n    callbackToSetCluster: function callbackToSetCluster(clusterName) {\n      setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        selectedCluster: clusterName\n      }));\n    },\n    callbackToSetRange: function callbackToSetRange(selectedStartDate, selectedEndDate) {\n      setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        range: {\n          startDate: selectedStartDate,\n          endDate: selectedEndDate\n        }\n      }));\n    },\n    callbackToCompare: CallbackForComparing,\n    callbackToExport: function callbackToExport() {\n      return generatePDF();\n    },\n    comparisonState: compare,\n    reInitialize: compare === false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"table section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: compare === false ? customThemeAnalyticsTable : customThemeAnalyticsTableCompareMode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.tableBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: compare === false && selected.length <= 2 ? classes.tableMain : compare === false && selected.length > 2 ? classes.tableMainShowAll : showAll === true && selected.length <= 3 ? classes.tableMainShowAll : showAll === true && selected.length > 3 ? classes.tableMain : classes.tableMainCompare,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"simple table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    onSelectAllClick: handleSelectAllClick,\n    numSelected: selected.length,\n    rowCount: displayData.length,\n    comparisonState: compare,\n    callBackToSort: function callBackToSort(sortConfigurations) {\n      setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        sortData: sortConfigurations\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 21\n    }\n  }, loading ? /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 29\n    }\n  }))) : error ? /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 29\n    }\n  }, t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.unableToFetch')))) : displayData && displayData.length ? displayData.slice(0).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (data, index) {\n    var isItemSelected = isSelected(data.workflow_id);\n    var labelId = \"enhanced-table-checkbox-\".concat(index);\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      onClick: function onClick(event) {\n        if (compare === false) {\n          handleClick(event, data.workflow_id);\n        }\n      },\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: data.workflow_id,\n      selected: isItemSelected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(TableData, {\n      data: data,\n      itemSelectionStatus: isItemSelected,\n      labelIdentifier: labelId,\n      comparisonState: compare,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 33\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 29\n    }\n  }, t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.noRecords')))), emptyRows > 0 && /*#__PURE__*/React.createElement(TableRow, {\n    style: {\n      height: 75 * emptyRows\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 27\n    }\n  }))))), compare === false || showAll === true ? /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, 50],\n    component: \"div\",\n    count: displayData.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(Paper, {\n    elevation: 0,\n    className: classes.seeAllPaper,\n    onClick: function onClick() {\n      return setShowAll(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.seeAllText,\n    variant: \"body2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 21\n    }\n  }, ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 23\n    }\n  }, t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.showSelectedWorkflows'), ' ', \"(\", selected.length, \")\", ' '), ' '))))))), isDataAvailable === true ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 9\n    }\n  }, compare === true ? /*#__PURE__*/React.createElement(Paper, {\n    variant: \"outlined\",\n    className: classes.backgroundFix,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.comparisonHeadingFix,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 19\n    }\n  }, t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.resilienceScoreComparison'))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 17\n    }\n  }, t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.comparativeResults')), plotDataForComparison ? /*#__PURE__*/React.createElement(ResilienceScoreComparisonPlot, {\n    xData: plotDataForComparison.xData,\n    yData: plotDataForComparison.yData,\n    labels: plotDataForComparison.labels,\n    colors: plotDataForComparison.colors,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 19\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Paper, {\n    variant: \"outlined\",\n    className: classes.noData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 11\n    }\n  }, t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.noRuns')), ' '));\n};\n\n_s(WorkflowComparisonTable, \"xcs0KHGIv6k1QAaF2yi4zKVyPTY=\", false, function () {\n  return [useStyles, useTheme, useTranslation, useSelector, useQuery];\n});\n\n_c = WorkflowComparisonTable;\nexport default WorkflowComparisonTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkflowComparisonTable\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseAnalytics/WorkflowComparisonTable/index.tsx"],"names":["useQuery","IconButton","MuiThemeProvider","Paper","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","Typography","useTheme","ExpandMoreTwoToneIcon","html2canvas","jsPDF","autoTable","_","moment","React","useEffect","useState","useTranslation","useSelector","Loader","WORKFLOW_LIST_DETAILS","customThemeAnalyticsTable","customThemeAnalyticsTableCompareMode","sortAlphaAsc","sortAlphaDesc","sortNumAsc","sortNumDesc","ResilienceScoreComparisonPlot","useStyles","TableData","TableHeader","TableToolBar","WorkflowComparisonTable","classes","palette","t","range","startDate","endDate","selectedCluster","sortData","name","sort","ascending","cluster","searchTokens","filter","setFilter","displayData","setDisplayData","clusters","setClusters","page","setPage","rowsPerPage","setRowsPerPage","selected","setSelected","isSelected","indexOf","emptyRows","Math","min","length","compare","setCompare","isDataAvailable","setIsDataAvailable","showAll","setShowAll","plotDataForComparison","setPlotDataForComparison","totalValidWorkflowRuns","setTotalValidWorkflowRuns","totalValidWorkflowRunsCount","setTotalValidWorkflowRunsCount","selectedProjectID","state","userData","variables","projectID","workflowIDs","fetchPolicy","data","loading","error","getClusters","searchingData","uniqueList","forEach","includes","cluster_name","push","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleSelectAllClick","checked","newSelecteds","map","n","workflow_id","handleClick","selectedIndex","newSelected","concat","slice","searchingDataRetriever","ListWorkflow","searchedData","workflowID","workflow","randomColor","floor","random","toString","formatDate","date","updated","Date","resDate","format","generateDataForComparing","plotData","xData","Hourly","Daily","Monthly","yData","labels","colors","totalValidRuns","timeSeriesArray","workflowData","match","wkf","runs","workflow_runs","workflowTimeSeriesData","isWorkflowValid","executionData","JSON","parse","execution_data","nodes","experimentTestResultsArrayPerWorkflowRun","totalExperimentsPassed","weightsSum","testDetails","testNames","testWeights","testResults","isValid","Object","keys","key","node","chaosData","experimentVerdict","weightageMap","weightages","weightage","experiment_name","experimentName","event_type","workflow_name","run_date","creationTimestamp","tests_passed","tests_failed","resilience_score","reduce","a","b","test_details","last_updated","console","log","index","hourlyGroupedResults","groupBy","unix","startOf","dailyGroupedResults","monthlyGroupedResults","hour","total","day","month","CallbackForComparing","compareWorkflows","payload","displayWorkflow","i","generatePDF","document","getElementById","heads","test_details_string","rows","run","detail_string","experiment","input","then","canvas","imgWidth","imgHeight","height","width","contentDataURL","toDataURL","doc","position","setFontSize","text","img","Image","src","addImage","line","setLineWidth","head","body","startY","margin","horizontal","styles","overflow","bodyStyles","valign","theme","showHead","err","addPage","save","every","s","toLowerCase","undefined","created_at","getTime","setHours","x","y","root","analyticsDiv","heading","buttonBack","secondary","dark","buttonBackStyle","description","tableFix","token","split","clusterName","selectedStartDate","selectedEndDate","tableBody","tableMain","tableMainShowAll","tableMainCompare","sortConfigurations","isItemSelected","labelId","seeAllPaper","seeAllText","backgroundFix","comparisonHeadingFix","noData"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\n/* eslint-disable no-loop-func */\n/* eslint-disable no-console */\nimport { useQuery } from '@apollo/client';\nimport {\n  IconButton,\n  MuiThemeProvider,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport ExpandMoreTwoToneIcon from '@material-ui/icons/ExpandMoreTwoTone';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport * as _ from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport Loader from '../../../../components/Loader';\nimport { WORKFLOW_LIST_DETAILS } from '../../../../graphql/quries';\nimport {\n  ExecutionData,\n  WeightageMap,\n  Workflow,\n  WorkflowList,\n  WorkflowListDataVars,\n} from '../../../../models/graphql/workflowListData';\nimport { RootState } from '../../../../redux/reducers';\nimport {\n  customThemeAnalyticsTable,\n  customThemeAnalyticsTableCompareMode,\n} from '../../../../theme';\nimport {\n  sortAlphaAsc,\n  sortAlphaDesc,\n  sortNumAsc,\n  sortNumDesc,\n} from '../../../../utils/sort';\nimport ResilienceScoreComparisonPlot from '../WorkflowComparisonPlot/index';\nimport useStyles from './styles';\nimport TableData from './TableData';\nimport TableHeader from './TableHeader';\nimport TableToolBar from './TableToolbar';\n\ninterface RangeType {\n  startDate: string;\n  endDate: string;\n}\n\ninterface SortData {\n  startDate: { sort: boolean; ascending: boolean };\n  name: { sort: boolean; ascending: boolean };\n  cluster: { sort: boolean; ascending: boolean };\n}\n\ninterface Filter {\n  range: RangeType;\n  selectedCluster: string;\n  sortData: SortData;\n  searchTokens: string[];\n}\n\ninterface ResilienceScoreComparisonPlotProps {\n  xData: { Hourly: string[][]; Daily: string[][]; Monthly: string[][] };\n  yData: { Hourly: number[][]; Daily: number[][]; Monthly: number[][] };\n  labels: string[];\n  colors: string[];\n}\n\ninterface DatedResilienceScore {\n  date: string;\n  value: number;\n}\n\ninterface TestDetails {\n  testNames: string[];\n  testWeights: number[];\n  testResults: string[];\n}\n\ninterface WorkflowDataForExport {\n  cluster_name: string;\n  workflow_name: string;\n  run_date: string;\n  tests_passed: number | string;\n  tests_failed: number | string;\n  resilience_score: number | string;\n  test_details?: TestDetails;\n  test_details_string?: string;\n}\n\nconst WorkflowComparisonTable = () => {\n  const classes = useStyles();\n  const { palette } = useTheme();\n  const { t } = useTranslation();\n  const [filter, setFilter] = React.useState<Filter>({\n    range: { startDate: 'all', endDate: 'all' },\n    selectedCluster: 'All',\n    sortData: {\n      name: { sort: false, ascending: true },\n      startDate: { sort: true, ascending: true },\n      cluster: { sort: false, ascending: true },\n    },\n    searchTokens: [''],\n  });\n  const [displayData, setDisplayData] = useState<Workflow[]>([]);\n  const [clusters, setClusters] = React.useState<string[]>([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n  const emptyRows =\n    rowsPerPage -\n    Math.min(rowsPerPage, displayData.length - page * rowsPerPage);\n  const [compare, setCompare] = React.useState<Boolean>(false);\n  const [isDataAvailable, setIsDataAvailable] = React.useState<Boolean>(true);\n  const [showAll, setShowAll] = React.useState<Boolean>(true);\n  const [plotDataForComparison, setPlotDataForComparison] = React.useState<\n    ResilienceScoreComparisonPlotProps\n  >();\n  const [totalValidWorkflowRuns, setTotalValidWorkflowRuns] = React.useState<\n    WorkflowDataForExport[]\n  >([]);\n  const [\n    totalValidWorkflowRunsCount,\n    setTotalValidWorkflowRunsCount,\n  ] = React.useState<number>(0);\n  const selectedProjectID = useSelector(\n    (state: RootState) => state.userData.selectedProjectID\n  );\n\n  // Apollo query to get the scheduled workflow data\n  const { data, loading, error } = useQuery<WorkflowList, WorkflowListDataVars>(\n    WORKFLOW_LIST_DETAILS,\n    {\n      variables: { projectID: selectedProjectID, workflowIDs: [] },\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  const getClusters = (searchingData: Workflow[]) => {\n    const uniqueList: string[] = [];\n    searchingData.forEach((data) => {\n      if (!uniqueList.includes(data.cluster_name)) {\n        uniqueList.push(data.cluster_name);\n      }\n    });\n    setClusters(uniqueList);\n  };\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = displayData.map((n: Workflow) => n.workflow_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const searchingDataRetriever = () => {\n    let searchingData: Workflow[] = [];\n    if (compare === false) {\n      searchingData = data?.ListWorkflow ?? [];\n    } else {\n      const searchedData: Workflow[] = [];\n      selected.forEach((workflowID) => {\n        data?.ListWorkflow.forEach((workflow) => {\n          if (workflow.workflow_id === workflowID) {\n            searchedData.push(workflow);\n          }\n        });\n      });\n      searchingData = searchedData;\n    }\n    return searchingData;\n  };\n\n  const randomColor = () => Math.floor(Math.random() * 16777215).toString(16);\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('dddd DD/MM/YYYY HH:mm:ss Z');\n    return resDate;\n  };\n\n  const generateDataForComparing = () => {\n    const plotData: ResilienceScoreComparisonPlotProps = {\n      xData: {\n        Hourly: [[]],\n        Daily: [[]],\n        Monthly: [[]],\n      },\n      yData: {\n        Hourly: [[]],\n        Daily: [[]],\n        Monthly: [[]],\n      },\n      labels: [],\n      colors: [],\n    };\n    let totalValidRuns: number = 0;\n    const totalValidWorkflowRuns: WorkflowDataForExport[] = [];\n    const timeSeriesArray: DatedResilienceScore[][] = [];\n    selected.forEach((workflow) => {\n      const workflowData = data?.ListWorkflow.filter(function match(wkf) {\n        return wkf.workflow_id === workflow;\n      });\n      const runs = workflowData ? workflowData[0].workflow_runs : [];\n      const workflowTimeSeriesData: DatedResilienceScore[] = [];\n      let isWorkflowValid: boolean = false;\n      try {\n        runs.forEach((data) => {\n          try {\n            const executionData: ExecutionData = JSON.parse(\n              data.execution_data\n            );\n            const { nodes } = executionData;\n            const experimentTestResultsArrayPerWorkflowRun: number[] = [];\n            let totalExperimentsPassed: number = 0;\n            let weightsSum: number = 0;\n            const testDetails: TestDetails = {\n              testNames: [],\n              testWeights: [],\n              testResults: [],\n            };\n            let isValid: boolean = false;\n            for (const key of Object.keys(nodes)) {\n              const node = nodes[key];\n              if (node.chaosData) {\n                const { chaosData } = node;\n                if (\n                  chaosData.experimentVerdict === 'Pass' ||\n                  chaosData.experimentVerdict === 'Fail'\n                ) {\n                  const weightageMap: WeightageMap[] = workflowData\n                    ? workflowData[0].weightages\n                    : [];\n                  weightageMap.forEach((weightage) => {\n                    if (\n                      weightage.experiment_name === chaosData.experimentName\n                    ) {\n                      if (chaosData.experimentVerdict === 'Pass') {\n                        experimentTestResultsArrayPerWorkflowRun.push(\n                          weightage.weightage\n                        );\n                        totalExperimentsPassed += 1;\n                      }\n                      if (chaosData.experimentVerdict === 'Fail') {\n                        experimentTestResultsArrayPerWorkflowRun.push(0);\n                      }\n                      if (\n                        chaosData.experimentVerdict === 'Pass' ||\n                        chaosData.experimentVerdict === 'Fail'\n                      ) {\n                        weightsSum += weightage.weightage;\n                        testDetails.testNames.push(weightage.experiment_name);\n                        testDetails.testWeights.push(weightage.weightage);\n                        testDetails.testResults.push(\n                          chaosData.experimentVerdict\n                        );\n                        isValid = true;\n                        isWorkflowValid = true;\n                      }\n                    }\n                  });\n                }\n              }\n            }\n            if (executionData.event_type === 'UPDATE' && isValid) {\n              totalValidRuns += 1;\n              totalValidWorkflowRuns.push({\n                cluster_name: workflowData ? workflowData[0].cluster_name : '',\n                workflow_name: workflowData\n                  ? workflowData[0].workflow_name\n                  : '',\n                run_date: formatDate(executionData.creationTimestamp),\n                tests_passed: totalExperimentsPassed,\n                tests_failed:\n                  experimentTestResultsArrayPerWorkflowRun.length -\n                  totalExperimentsPassed,\n                resilience_score: experimentTestResultsArrayPerWorkflowRun.length\n                  ? (experimentTestResultsArrayPerWorkflowRun.reduce(\n                      (a, b) => a + b,\n                      0\n                    ) /\n                      weightsSum) *\n                    100\n                  : 0,\n                test_details: testDetails,\n              });\n              workflowTimeSeriesData.push({\n                date: data.last_updated,\n                value: experimentTestResultsArrayPerWorkflowRun.length\n                  ? (experimentTestResultsArrayPerWorkflowRun.reduce(\n                      (a, b) => a + b,\n                      0\n                    ) /\n                      weightsSum) *\n                    100\n                  : 0,\n              });\n            }\n          } catch (error) {\n            console.error(error);\n          }\n        });\n        if (isWorkflowValid) {\n          plotData.labels.push(\n            workflowData ? workflowData[0].workflow_name : ''\n          );\n          plotData.colors.push(`#${randomColor()}`);\n          timeSeriesArray.push(workflowTimeSeriesData);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    if (plotData.labels.length === 0) {\n      setIsDataAvailable(false);\n    }\n\n    timeSeriesArray.forEach((workflowTimeSeriesData, index) => {\n      const hourlyGroupedResults = _.groupBy(workflowTimeSeriesData, (data) =>\n        moment\n          .unix(parseInt(data.date, 10))\n          .startOf('hour')\n          .format('YYYY-MM-DD HH:mm:ss')\n      );\n      const dailyGroupedResults = _.groupBy(workflowTimeSeriesData, (data) =>\n        moment.unix(parseInt(data.date, 10)).startOf('day').format('YYYY-MM-DD')\n      );\n      const monthlyGroupedResults = _.groupBy(workflowTimeSeriesData, (data) =>\n        moment.unix(parseInt(data.date, 10)).startOf('month').format('YYYY-MM')\n      );\n      plotData.xData.Hourly[index] = [];\n      plotData.yData.Hourly[index] = [];\n      Object.keys(hourlyGroupedResults).forEach((hour) => {\n        let total = 0;\n        hourlyGroupedResults[hour].forEach((data) => {\n          total += data.value;\n        });\n        plotData.xData.Hourly[index].push(hour);\n        plotData.yData.Hourly[index].push(\n          total / hourlyGroupedResults[hour].length\n        );\n      });\n      plotData.xData.Daily[index] = [];\n      plotData.yData.Daily[index] = [];\n      Object.keys(dailyGroupedResults).forEach((day) => {\n        let total = 0;\n        dailyGroupedResults[day].forEach((data) => {\n          total += data.value;\n        });\n        plotData.xData.Daily[index].push(day);\n        plotData.yData.Daily[index].push(\n          total / dailyGroupedResults[day].length\n        );\n      });\n      plotData.xData.Monthly[index] = [];\n      plotData.yData.Monthly[index] = [];\n      Object.keys(monthlyGroupedResults).forEach((month) => {\n        let total = 0;\n        monthlyGroupedResults[month].forEach((data) => {\n          total += data.value;\n        });\n        plotData.xData.Monthly[index].push(month);\n        plotData.yData.Monthly[index].push(\n          total / monthlyGroupedResults[month].length\n        );\n      });\n    });\n    setPlotDataForComparison(plotData);\n    setTotalValidWorkflowRuns(totalValidWorkflowRuns);\n    setTotalValidWorkflowRunsCount(totalValidRuns);\n  };\n\n  const CallbackForComparing = (compareWorkflows: boolean) => {\n    setCompare(compareWorkflows);\n    const payload: Workflow[] = [];\n    selected.forEach((workflow) => {\n      displayData.forEach((displayWorkflow, i) => {\n        if (displayWorkflow.workflow_id === workflow && data) {\n          payload.push(data?.ListWorkflow[i]);\n        }\n      });\n    });\n    generateDataForComparing();\n    setDisplayData(payload);\n  };\n\n  const generatePDF = () => {\n    if (document.getElementById('analytics')) {\n      const heads = [\n        {\n          cluster_name: 'Cluster Name',\n          workflow_name: 'Workflow Name',\n          run_date: 'Date-Time',\n          tests_passed: '#Expts. Passed',\n          tests_failed: '#Expts. Failed',\n          resilience_score: 'Reliability Score',\n          test_details_string: 'Experiment Details\\nName\\nWeight / Verdict',\n        },\n      ];\n      const rows: any[] = [];\n      totalValidWorkflowRuns.forEach((run) => {\n        let detail_string = '';\n        run.test_details?.testNames.forEach((experiment, index) => {\n          detail_string += `${experiment}\\n${run.test_details?.testWeights[index]} / ${run.test_details?.testResults[index]}\\n`;\n        });\n        rows.push({\n          cluster_name: run.cluster_name,\n          workflow_name: run.workflow_name,\n          run_date: run.run_date,\n          tests_passed: run.tests_passed.toString(),\n          tests_failed: run.tests_failed.toString(),\n          resilience_score: run.resilience_score.toString(),\n          test_details_string: detail_string,\n        });\n      });\n\n      const input: HTMLElement | null = document.getElementById('analytics');\n      html2canvas(input as HTMLElement).then((canvas) => {\n        const imgWidth = 206;\n        const imgHeight = (canvas.height * imgWidth) / canvas.width;\n        const contentDataURL = canvas.toDataURL('image/png');\n        const doc = new jsPDF('p', 'mm', 'a4'); // A4 size page of PDF\n        const position = -45;\n        doc.setFontSize(10);\n        doc.text('Litmus Portal Report Version: 1.10', 10, 10);\n        doc.text('Time of Generation:', 10, 15);\n        doc.text(new Date().toString(), 42, 15);\n        doc.text(\n          'Total Number of Chaos Workflow Schedules under consideration:',\n          10,\n          20\n        );\n        doc.text(\n          plotDataForComparison\n            ? plotDataForComparison.labels.length.toString()\n            : '0',\n          114,\n          20\n        );\n        doc.text(\n          'Total Number of Chaos Workflow Runs under consideration:',\n          10,\n          25\n        );\n        doc.text(totalValidWorkflowRunsCount.toString(), 105, 25);\n        const img = new Image();\n        img.src = '/icons/LitmusLogo.png';\n        doc.addImage(img, 'png', 165, 10, 30, 12.5);\n        doc.line(0, 33, 300, 33);\n        doc.setLineWidth(5.0);\n        doc.text(\n          'Workflow Run Details Table & Workflow Schedules Table with Resilience Score Comparison Graph',\n          27.5,\n          39\n        );\n        try {\n          autoTable(doc, {\n            head: heads,\n            body: rows,\n            startY: 44,\n            margin: { horizontal: 2 },\n            styles: { overflow: 'linebreak' },\n            bodyStyles: { valign: 'top' },\n            theme: 'striped',\n            showHead: 'firstPage',\n          });\n        } catch (err) {\n          console.log(err);\n        }\n        doc.addPage();\n        doc.addImage(contentDataURL, 'PNG', 2, position, imgWidth, imgHeight);\n        doc.save('litmus-portal-analytics.pdf'); // Generated PDF\n      });\n    }\n  };\n\n  useEffect(() => {\n    setDisplayData(data ? data.ListWorkflow : []);\n    getClusters(data ? data.ListWorkflow : []);\n  }, [data]);\n\n  useEffect(() => {\n    const payload = searchingDataRetriever()\n      .filter((wkf: Workflow) => {\n        return filter.searchTokens.every(\n          (s: string) =>\n            wkf.workflow_name.toLowerCase().includes(s) ||\n            (wkf.cluster_name !== undefined\n              ? wkf.cluster_name.toLowerCase().includes(s)\n              : false)\n        );\n      })\n      .filter((data) => {\n        return filter.selectedCluster === 'All'\n          ? true\n          : data.cluster_name === filter.selectedCluster;\n      })\n      .filter((data) => {\n        return filter.range.startDate === 'all' ||\n          (filter.range.startDate && filter.range.endDate === undefined)\n          ? true\n          : parseInt(data.created_at, 10) * 1000 >=\n              new Date(moment(filter.range.startDate).format()).getTime() &&\n              parseInt(data.created_at, 10) * 1000 <=\n                new Date(\n                  new Date(moment(filter.range.endDate).format()).setHours(\n                    23,\n                    59,\n                    59\n                  )\n                ).getTime();\n      })\n      .sort((a: Workflow, b: Workflow) => {\n        // Sorting based on unique fields\n        if (filter.sortData.name.sort) {\n          const x = a.workflow_name;\n          const y = b.workflow_name;\n\n          return filter.sortData.name.ascending\n            ? sortAlphaAsc(x, y)\n            : sortAlphaDesc(x, y);\n        }\n        if (filter.sortData.startDate.sort) {\n          const x = parseInt(a.created_at, 10);\n\n          const y = parseInt(b.created_at, 10);\n\n          return filter.sortData.startDate.ascending\n            ? sortNumAsc(y, x)\n            : sortNumDesc(y, x);\n        }\n        if (filter.sortData.cluster.sort) {\n          const x = a.cluster_name;\n          const y = b.cluster_name;\n\n          return filter.sortData.cluster.ascending\n            ? sortAlphaAsc(x, y)\n            : sortAlphaDesc(x, y);\n        }\n        return 0;\n      });\n    setDisplayData(payload);\n    setShowAll(false);\n    getClusters(searchingDataRetriever());\n  }, [filter, compare]);\n\n  return (\n    <div className={classes.root} id=\"analytics\">\n      <div className={classes.analyticsDiv}>\n        <Typography className={classes.heading}>\n          <strong>\n            {' '}\n            {compare === true ? (\n              <IconButton\n                aria-label=\"back\"\n                aria-haspopup=\"true\"\n                onClick={() => setCompare(false)}\n                className={classes.buttonBack}\n              >\n                <ExpandMoreTwoToneIcon\n                  htmlColor={palette.secondary.dark}\n                  className={classes.buttonBackStyle}\n                />\n              </IconButton>\n            ) : (\n              <div />\n            )}{' '}\n            Workflow comparison\n          </strong>\n        </Typography>\n        <Typography className={classes.description}>\n          {compare === true\n            ? 'Choose the right workflows and get comparative results'\n            : 'Choose workflows to compare their resilience scores'}\n        </Typography>\n        <br />\n      </div>\n      <div className={classes.tableFix}>\n        <div>\n          <section className=\"Heading section\">\n            <TableToolBar\n              numSelected={selected.length}\n              searchToken={filter.searchTokens[0]}\n              handleSearch={(\n                event: React.ChangeEvent<{ value: unknown }> | undefined,\n                token: string | undefined\n              ) =>\n                setFilter({\n                  ...filter,\n                  searchTokens: (event !== undefined\n                    ? ((event.target as HTMLInputElement).value as string)\n                    : token || ''\n                  )\n                    .toLowerCase()\n                    .split(' ')\n                    .filter((s) => s !== ''),\n                })\n              }\n              clusters={clusters}\n              callbackToSetCluster={(clusterName: string) => {\n                setFilter({\n                  ...filter,\n                  selectedCluster: clusterName,\n                });\n              }}\n              callbackToSetRange={(\n                selectedStartDate: string,\n                selectedEndDate: string\n              ) => {\n                setFilter({\n                  ...filter,\n                  range: {\n                    startDate: selectedStartDate,\n                    endDate: selectedEndDate,\n                  },\n                });\n              }}\n              callbackToCompare={CallbackForComparing}\n              callbackToExport={() => generatePDF()}\n              comparisonState={compare}\n              reInitialize={compare === false}\n            />\n          </section>\n          <section className=\"table section\">\n            <MuiThemeProvider\n              theme={\n                compare === false\n                  ? customThemeAnalyticsTable\n                  : customThemeAnalyticsTableCompareMode\n              }\n            >\n              <Paper className={classes.tableBody}>\n                <TableContainer\n                  className={\n                    compare === false && selected.length <= 2\n                      ? classes.tableMain\n                      : compare === false && selected.length > 2\n                      ? classes.tableMainShowAll\n                      : showAll === true && selected.length <= 3\n                      ? classes.tableMainShowAll\n                      : showAll === true && selected.length > 3\n                      ? classes.tableMain\n                      : classes.tableMainCompare\n                  }\n                >\n                  <Table aria-label=\"simple table\">\n                    <TableHeader\n                      onSelectAllClick={handleSelectAllClick}\n                      numSelected={selected.length}\n                      rowCount={displayData.length}\n                      comparisonState={compare}\n                      callBackToSort={(sortConfigurations: SortData) => {\n                        setFilter({\n                          ...filter,\n                          sortData: sortConfigurations,\n                        });\n                      }}\n                    />\n                    <TableBody>\n                      {loading ? (\n                        <TableRow>\n                          <TableCell colSpan={6}>\n                            <Loader />\n                          </TableCell>\n                        </TableRow>\n                      ) : error ? (\n                        <TableRow>\n                          <TableCell colSpan={6}>\n                            <Typography align=\"center\">\n                              {t(\n                                'chaosWorkflows.browseAnalytics.workFlowComparisonTable.unableToFetch'\n                              )}\n                            </Typography>\n                          </TableCell>\n                        </TableRow>\n                      ) : displayData && displayData.length ? (\n                        displayData\n                          .slice(0)\n                          .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                          )\n                          .map((data: Workflow, index: number) => {\n                            const isItemSelected = isSelected(data.workflow_id);\n                            const labelId = `enhanced-table-checkbox-${index}`;\n                            return (\n                              <TableRow\n                                hover\n                                onClick={(event) => {\n                                  if (compare === false) {\n                                    handleClick(event, data.workflow_id);\n                                  }\n                                }}\n                                role=\"checkbox\"\n                                aria-checked={isItemSelected}\n                                tabIndex={-1}\n                                key={data.workflow_id}\n                                selected={isItemSelected}\n                              >\n                                <TableData\n                                  data={data}\n                                  itemSelectionStatus={isItemSelected}\n                                  labelIdentifier={labelId}\n                                  comparisonState={compare}\n                                />\n                              </TableRow>\n                            );\n                          })\n                      ) : (\n                        <TableRow>\n                          <TableCell colSpan={6}>\n                            <Typography align=\"center\">\n                              {t(\n                                'chaosWorkflows.browseAnalytics.workFlowComparisonTable.noRecords'\n                              )}\n                            </Typography>\n                          </TableCell>\n                        </TableRow>\n                      )}\n                      {emptyRows > 0 && (\n                        <TableRow style={{ height: 75 * emptyRows }}>\n                          <TableCell colSpan={6} />\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n                {compare === false || showAll === true ? (\n                  <TablePagination\n                    rowsPerPageOptions={[5, 10, 25, 50]}\n                    component=\"div\"\n                    count={displayData.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                  />\n                ) : (\n                  <Paper\n                    elevation={0}\n                    className={classes.seeAllPaper}\n                    onClick={() => setShowAll(true)}\n                  >\n                    <Typography className={classes.seeAllText} variant=\"body2\">\n                      {' '}\n                      <strong>\n                        {t(\n                          'chaosWorkflows.browseAnalytics.workFlowComparisonTable.showSelectedWorkflows'\n                        )}{' '}\n                        ({selected.length}){' '}\n                      </strong>{' '}\n                    </Typography>\n                  </Paper>\n                )}\n              </Paper>\n            </MuiThemeProvider>\n          </section>\n        </div>\n      </div>\n      {isDataAvailable === true ? (\n        <div>\n          {compare === true ? (\n            <Paper variant=\"outlined\" className={classes.backgroundFix}>\n              <div className={classes.comparisonHeadingFix}>\n                <Typography className={classes.heading}>\n                  <strong>\n                    {t(\n                      'chaosWorkflows.browseAnalytics.workFlowComparisonTable.resilienceScoreComparison'\n                    )}\n                  </strong>\n                </Typography>\n                <Typography className={classes.description}>\n                  {t(\n                    'chaosWorkflows.browseAnalytics.workFlowComparisonTable.comparativeResults'\n                  )}\n                </Typography>\n                {plotDataForComparison ? (\n                  <ResilienceScoreComparisonPlot\n                    xData={plotDataForComparison.xData}\n                    yData={plotDataForComparison.yData}\n                    labels={plotDataForComparison.labels}\n                    colors={plotDataForComparison.colors}\n                  />\n                ) : (\n                  <div />\n                )}\n              </div>\n            </Paper>\n          ) : (\n            <div />\n          )}\n        </div>\n      ) : (\n        <Paper variant=\"outlined\" className={classes.noData}>\n          <Typography variant=\"h5\" align=\"center\">\n            {t('chaosWorkflows.browseAnalytics.workFlowComparisonTable.noRuns')}\n          </Typography>{' '}\n        </Paper>\n      )}\n    </div>\n  );\n};\n\nexport default WorkflowComparisonTable;\n"]},"metadata":{},"sourceType":"module"}