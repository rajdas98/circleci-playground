{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ReliabilityScore/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport ButtonFilled from '../../../components/Button/ButtonFilled';\nimport ButtonOutline from '../../../components/Button/ButtonOutline';\nimport Center from '../../../containers/layouts/Center';\nimport Unimodal from '../../../containers/layouts/Unimodal';\nimport useActions from '../../../redux/actions';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport WeightSlider from '../WeightSlider';\nimport ResultTable from './ResultTable';\nimport useStyles from './styles'; // import InfoTooltip from '../../../components/InfoTooltip';\n\nvar ReliablityScore = function ReliablityScore() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var workflowData = useSelector(function (state) {\n    return state.workflowData;\n  });\n  var workflow = useActions(WorkflowActions);\n  var weights = workflowData.weights;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var testNames = [];\n  var testWeights = [];\n  weights.forEach(function (weight) {\n    testNames.push(weight.experimentName);\n    testWeights.push(weight.weight);\n  });\n\n  function _handleChange(_ref) {\n    var newValue = _ref.newValue,\n        index = _ref.index;\n    weights[index].weight = newValue;\n    workflow.setWorkflowDetails({\n      weights\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.reliabilityScore.header'))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.reliabilityScore.info'), \" \", weights === null || weights === void 0 ? void 0 : weights.length, ' ', t('createWorkflow.reliabilityScore.infoNext'), ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.reliabilityScore.infoNextStrong')))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.horizontalLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.testHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.reliabilityScore.testHeading')))), weights.map(function (Data, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(WeightSlider, {\n      index: index,\n      testName: Data.experimentName,\n      weight: Data.weight,\n      handleChange: function handleChange(newValue, index) {\n        return _handleChange({\n          newValue,\n          index\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.horizontalLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modalDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutline, {\n    isDisabled: true,\n    handleClick: function handleClick() {\n      return setOpen(true);\n    },\n    \"data-cy\": \"testRunButton\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonOutlineDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"icons/video.png\",\n    alt: \"Play icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.buttonOutlineText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.reliabilityScore.button.demo')))), /*#__PURE__*/React.createElement(Unimodal, {\n    open: open,\n    handleClose: function handleClose() {\n      return setOpen(false);\n    },\n    hasCloseBtn: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ResultTable, {\n    testValue: testWeights,\n    testNames: testNames,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.horizontalLineResult,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Center, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    handleClick: function handleClick() {\n      return setOpen(false);\n    },\n    \"data-cy\": \"gotItButton\",\n    isPrimary: true,\n    styles: classes.gotItBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }\n  }, t('createWorkflow.reliabilityScore.button.gotIt'))))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.testInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.reliabilityScore.testInfo')))))));\n};\n\n_s(ReliablityScore, \"30o8TBQcl/VEBr5zzPN7CY8Ki7o=\", false, function () {\n  return [useStyles, useTranslation, useSelector, useActions];\n});\n\n_c = ReliablityScore;\nexport default ReliablityScore;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReliablityScore\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ReliabilityScore/index.tsx"],"names":["Typography","React","useSelector","useTranslation","ButtonFilled","ButtonOutline","Center","Unimodal","useActions","WorkflowActions","WeightSlider","ResultTable","useStyles","ReliablityScore","classes","t","workflowData","state","workflow","weights","useState","open","setOpen","testNames","testWeights","forEach","weight","push","experimentName","handleChange","newValue","index","setWorkflowDetails","root","mainDiv","headerText","description","length","horizontalLine","divRow","testHeading","map","Data","modalDiv","buttonOutlineDiv","buttonOutlineText","horizontalLineResult","gotItBtn","testInfo"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport ButtonFilled from '../../../components/Button/ButtonFilled';\nimport ButtonOutline from '../../../components/Button/ButtonOutline';\nimport Center from '../../../containers/layouts/Center';\nimport Unimodal from '../../../containers/layouts/Unimodal';\nimport { experimentMap, WorkflowData } from '../../../models/redux/workflow';\nimport useActions from '../../../redux/actions';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { RootState } from '../../../redux/reducers';\nimport WeightSlider from '../WeightSlider';\nimport ResultTable from './ResultTable';\nimport useStyles from './styles';\n// import InfoTooltip from '../../../components/InfoTooltip';\n\nconst ReliablityScore = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const workflowData: WorkflowData = useSelector(\n    (state: RootState) => state.workflowData\n  );\n  const workflow = useActions(WorkflowActions);\n\n  const { weights } = workflowData;\n\n  const [open, setOpen] = React.useState(false);\n\n  const testNames: string[] = [];\n  const testWeights: number[] = [];\n  weights.forEach((weight) => {\n    testNames.push(weight.experimentName);\n    testWeights.push(weight.weight);\n  });\n\n  function handleChange({\n    newValue,\n    index,\n  }: {\n    newValue: number;\n    index: number;\n  }) {\n    (weights as any)[index].weight = newValue;\n    workflow.setWorkflowDetails({\n      weights,\n    });\n  }\n\n  return (\n    <div>\n      <form className={classes.root}>\n        <div className={classes.mainDiv}>\n          <div>\n            <Typography className={classes.headerText}>\n              <strong>{t('createWorkflow.reliabilityScore.header')}</strong>\n            </Typography>\n            <Typography className={classes.description}>\n              {t('createWorkflow.reliabilityScore.info')} {weights?.length}{' '}\n              {t('createWorkflow.reliabilityScore.infoNext')}{' '}\n              <strong>\n                {t('createWorkflow.reliabilityScore.infoNextStrong')}\n              </strong>\n            </Typography>\n          </div>\n          <hr className={classes.horizontalLine} />\n          <div className={classes.divRow}>\n            <Typography className={classes.testHeading}>\n              <strong>\n                {t('createWorkflow.reliabilityScore.testHeading')}\n              </strong>\n            </Typography>\n          </div>\n          {(weights as any).map((Data: experimentMap, index: number) => (\n            <div>\n              <div>\n                <WeightSlider\n                  index={index}\n                  testName={Data.experimentName}\n                  weight={Data.weight}\n                  handleChange={(newValue, index) =>\n                    handleChange({ newValue, index })\n                  }\n                />\n              </div>\n            </div>\n          ))}\n          <hr className={classes.horizontalLine} />\n          <div className={classes.modalDiv}>\n            <div className={classes.divRow}>\n              <ButtonOutline\n                isDisabled\n                handleClick={() => setOpen(true)}\n                data-cy=\"testRunButton\"\n              >\n                <div className={classes.buttonOutlineDiv}>\n                  <img src=\"icons/video.png\" alt=\"Play icon\" />\n                  <Typography className={classes.buttonOutlineText}>\n                    {t('createWorkflow.reliabilityScore.button.demo')}\n                  </Typography>\n                </div>\n              </ButtonOutline>\n              {/* <div className={classes.toolTipDiv}>\n                <InfoTooltip value=\"Text Default\" />\n                </div> */}\n              <Unimodal\n                open={open}\n                handleClose={() => setOpen(false)}\n                hasCloseBtn={false}\n              >\n                <div>\n                  <ResultTable testValue={testWeights} testNames={testNames} />\n                  <hr className={classes.horizontalLineResult} />\n                  <Center>\n                    <ButtonFilled\n                      handleClick={() => setOpen(false)}\n                      data-cy=\"gotItButton\"\n                      isPrimary\n                      styles={classes.gotItBtn}\n                    >\n                      <div>\n                        {t('createWorkflow.reliabilityScore.button.gotIt')}\n                      </div>\n                    </ButtonFilled>\n                  </Center>\n                </div>\n              </Unimodal>\n            </div>\n            <div>\n              <Typography className={classes.testInfo}>\n                {t('createWorkflow.reliabilityScore.testInfo')}\n              </Typography>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ReliablityScore;\n"]},"metadata":{},"sourceType":"module"}