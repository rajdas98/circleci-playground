{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseTemplate/Head.tsx\",\n    _s = $RefreshSig$();\n\nimport { Typography } from '@material-ui/core';\nimport React from 'react';\nimport capitalize from '../../../utils/capitalize';\nimport useStyles from './styles';\n\nvar Head = function Head(_ref) {\n  _s();\n\n  var image = _ref.image,\n      title = _ref.title,\n      details = _ref.details;\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: \"workflowIcon\",\n    className: classes.bgIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"expName\",\n    className: classes.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, title === null || title === void 0 ? void 0 : title.split('-').map(function (text) {\n    return \"\".concat(capitalize(text), \" \");\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.bodytext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, details)));\n};\n\n_s(Head, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Head;\nexport default Head;\n\nvar _c;\n\n$RefreshReg$(_c, \"Head\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseTemplate/Head.tsx"],"names":["Typography","React","capitalize","useStyles","Head","image","title","details","classes","flexRow","bgIcon","body","headerText","split","map","text","bodytext"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAQA,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,OAA+B;AAAA;;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC/D,MAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,sBACE;AAAK,IAAA,SAAS,EAAEK,OAAO,CAACC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEJ,KAAV;AAAiB,IAAA,GAAG,EAAC,cAArB;AAAoC,IAAA,SAAS,EAAEG,OAAO,CAACE,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACG,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,eAAQ,SAApB;AAA8B,IAAA,SAAS,EAAEH,OAAO,CAACI,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGN,KAFH,aAEGA,KAFH,uBAEGA,KAAK,CAAEO,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAsB,UAACC,IAAD;AAAA,qBAAab,UAAU,CAACa,IAAD,CAAvB;AAAA,GAAtB,CAFH,CADF,eAKE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEP,OAAO,CAACQ,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CT,OAA1C,CALF,CAFF,CADF;AAYD,CAdD;;GAAMH,I;UACYD,S;;;KADZC,I;AAgBN,eAAeA,IAAf","sourcesContent":["import { Typography } from '@material-ui/core';\nimport React from 'react';\nimport capitalize from '../../../utils/capitalize';\nimport useStyles from './styles';\n\ninterface HeadProps {\n  image?: string;\n  title?: string;\n  details?: string;\n}\n\nconst Head: React.FC<HeadProps> = ({ image, title, details }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.flexRow}>\n      <img src={image} alt=\"workflowIcon\" className={classes.bgIcon} />\n      <div className={classes.body}>\n        <Typography data-cy=\"expName\" className={classes.headerText}>\n          {/* Converting 'some-experiment' to 'Some Experiment' using capitalize utility */}\n          {title?.split('-').map((text) => `${capitalize(text)} `)}\n        </Typography>\n        <Typography className={classes.bodytext}>{details}</Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default Head;\n"]},"metadata":{},"sourceType":"module"}