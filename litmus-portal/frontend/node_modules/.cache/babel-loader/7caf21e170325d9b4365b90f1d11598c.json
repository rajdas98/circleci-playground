{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar extendFlat = require('../../lib').extendFlat;\n\nvar OHLCattrs = require('../ohlc/attributes');\n\nvar boxAttrs = require('../box/attributes');\n\nfunction directionAttrs(lineColorDefault) {\n  return {\n    line: {\n      color: extendFlat({}, boxAttrs.line.color, {\n        dflt: lineColorDefault\n      }),\n      width: boxAttrs.line.width,\n      editType: 'style'\n    },\n    fillcolor: boxAttrs.fillcolor,\n    editType: 'style'\n  };\n}\n\nmodule.exports = {\n  x: OHLCattrs.x,\n  open: OHLCattrs.open,\n  high: OHLCattrs.high,\n  low: OHLCattrs.low,\n  close: OHLCattrs.close,\n  line: {\n    width: extendFlat({}, boxAttrs.line.width, {\n      description: [boxAttrs.line.width.description, 'Note that this style setting can also be set per', 'direction via `increasing.line.width` and', '`decreasing.line.width`.'].join(' ')\n    }),\n    editType: 'style'\n  },\n  increasing: directionAttrs(OHLCattrs.increasing.line.color.dflt),\n  decreasing: directionAttrs(OHLCattrs.decreasing.line.color.dflt),\n  text: OHLCattrs.text,\n  hovertext: OHLCattrs.hovertext,\n  whiskerwidth: extendFlat({}, boxAttrs.whiskerwidth, {\n    dflt: 0\n  }),\n  hoverlabel: OHLCattrs.hoverlabel\n};","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/plotly.js/src/traces/candlestick/attributes.js"],"names":["extendFlat","require","OHLCattrs","boxAttrs","directionAttrs","lineColorDefault","line","color","dflt","width","editType","fillcolor","module","exports","x","open","high","low","close","description","join","increasing","decreasing","text","hovertext","whiskerwidth","hoverlabel"],"mappings":"AAAA;;;;;;;AASA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBD,UAAtC;;AACA,IAAIE,SAAS,GAAGD,OAAO,CAAC,oBAAD,CAAvB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,mBAAD,CAAtB;;AAEA,SAASG,cAAT,CAAwBC,gBAAxB,EAA0C;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAEP,UAAU,CAAC,EAAD,EAAKG,QAAQ,CAACG,IAAT,CAAcC,KAAnB,EAA0B;AAACC,QAAAA,IAAI,EAAEH;AAAP,OAA1B,CADf;AAEFI,MAAAA,KAAK,EAAEN,QAAQ,CAACG,IAAT,CAAcG,KAFnB;AAGFC,MAAAA,QAAQ,EAAE;AAHR,KADH;AAOHC,IAAAA,SAAS,EAAER,QAAQ,CAACQ,SAPjB;AAQHD,IAAAA,QAAQ,EAAE;AARP,GAAP;AAUH;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,CAAC,EAAEZ,SAAS,CAACY,CADA;AAEbC,EAAAA,IAAI,EAAEb,SAAS,CAACa,IAFH;AAGbC,EAAAA,IAAI,EAAEd,SAAS,CAACc,IAHH;AAIbC,EAAAA,GAAG,EAAEf,SAAS,CAACe,GAJF;AAKbC,EAAAA,KAAK,EAAEhB,SAAS,CAACgB,KALJ;AAObZ,EAAAA,IAAI,EAAE;AACFG,IAAAA,KAAK,EAAET,UAAU,CAAC,EAAD,EAAKG,QAAQ,CAACG,IAAT,CAAcG,KAAnB,EAA0B;AACvCU,MAAAA,WAAW,EAAE,CACThB,QAAQ,CAACG,IAAT,CAAcG,KAAd,CAAoBU,WADX,EAET,kDAFS,EAGT,2CAHS,EAIT,0BAJS,EAKXC,IALW,CAKN,GALM;AAD0B,KAA1B,CADf;AASFV,IAAAA,QAAQ,EAAE;AATR,GAPO;AAmBbW,EAAAA,UAAU,EAAEjB,cAAc,CAACF,SAAS,CAACmB,UAAV,CAAqBf,IAArB,CAA0BC,KAA1B,CAAgCC,IAAjC,CAnBb;AAqBbc,EAAAA,UAAU,EAAElB,cAAc,CAACF,SAAS,CAACoB,UAAV,CAAqBhB,IAArB,CAA0BC,KAA1B,CAAgCC,IAAjC,CArBb;AAuBbe,EAAAA,IAAI,EAAErB,SAAS,CAACqB,IAvBH;AAwBbC,EAAAA,SAAS,EAAEtB,SAAS,CAACsB,SAxBR;AAyBbC,EAAAA,YAAY,EAAEzB,UAAU,CAAC,EAAD,EAAKG,QAAQ,CAACsB,YAAd,EAA4B;AAAEjB,IAAAA,IAAI,EAAE;AAAR,GAA5B,CAzBX;AA2BbkB,EAAAA,UAAU,EAAExB,SAAS,CAACwB;AA3BT,CAAjB","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar extendFlat = require('../../lib').extendFlat;\nvar OHLCattrs = require('../ohlc/attributes');\nvar boxAttrs = require('../box/attributes');\n\nfunction directionAttrs(lineColorDefault) {\n    return {\n        line: {\n            color: extendFlat({}, boxAttrs.line.color, {dflt: lineColorDefault}),\n            width: boxAttrs.line.width,\n            editType: 'style'\n        },\n\n        fillcolor: boxAttrs.fillcolor,\n        editType: 'style'\n    };\n}\n\nmodule.exports = {\n    x: OHLCattrs.x,\n    open: OHLCattrs.open,\n    high: OHLCattrs.high,\n    low: OHLCattrs.low,\n    close: OHLCattrs.close,\n\n    line: {\n        width: extendFlat({}, boxAttrs.line.width, {\n            description: [\n                boxAttrs.line.width.description,\n                'Note that this style setting can also be set per',\n                'direction via `increasing.line.width` and',\n                '`decreasing.line.width`.'\n            ].join(' ')\n        }),\n        editType: 'style'\n    },\n\n    increasing: directionAttrs(OHLCattrs.increasing.line.color.dflt),\n\n    decreasing: directionAttrs(OHLCattrs.decreasing.line.color.dflt),\n\n    text: OHLCattrs.text,\n    hovertext: OHLCattrs.hovertext,\n    whiskerwidth: extendFlat({}, boxAttrs.whiskerwidth, { dflt: 0 }),\n\n    hoverlabel: OHLCattrs.hoverlabel,\n};\n"]},"metadata":{},"sourceType":"script"}