{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nvar addLabel = require(\"./label/add-label\");\n\nvar util = require(\"./util\");\n\nvar d3 = require(\"./d3\");\n\nmodule.exports = createEdgeLabels;\n\nfunction createEdgeLabels(selection, g) {\n  var svgEdgeLabels = selection.selectAll(\"g.edgeLabel\").data(g.edges(), function (e) {\n    return util.edgeToId(e);\n  }).classed(\"update\", true);\n  svgEdgeLabels.exit().remove();\n  svgEdgeLabels.enter().append(\"g\").classed(\"edgeLabel\", true).style(\"opacity\", 0);\n  svgEdgeLabels = selection.selectAll(\"g.edgeLabel\");\n  svgEdgeLabels.each(function (e) {\n    var root = d3.select(this);\n    root.select(\".label\").remove();\n    var edge = g.edge(e);\n    var label = addLabel(root, g.edge(e), 0, 0).classed(\"label\", true);\n    var bbox = label.node().getBBox();\n\n    if (edge.labelId) {\n      label.attr(\"id\", edge.labelId);\n    }\n\n    if (!_.has(edge, \"width\")) {\n      edge.width = bbox.width;\n    }\n\n    if (!_.has(edge, \"height\")) {\n      edge.height = bbox.height;\n    }\n  });\n  var exitSelection;\n\n  if (svgEdgeLabels.exit) {\n    exitSelection = svgEdgeLabels.exit();\n  } else {\n    exitSelection = svgEdgeLabels.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style(\"opacity\", 0).remove();\n  return svgEdgeLabels;\n}","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/dagre-d3/lib/create-edge-labels.js"],"names":["_","require","addLabel","util","d3","module","exports","createEdgeLabels","selection","g","svgEdgeLabels","selectAll","data","edges","e","edgeToId","classed","exit","remove","enter","append","style","each","root","select","edge","label","bbox","node","getBBox","labelId","attr","has","width","height","exitSelection","applyTransition"],"mappings":"AAAA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,UAAD,CAAf;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,mBAAD,CAAtB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIG,EAAE,GAAGH,OAAO,CAAC,MAAD,CAAhB;;AAEAI,MAAM,CAACC,OAAP,GAAiBC,gBAAjB;;AAEA,SAASA,gBAAT,CAA0BC,SAA1B,EAAqCC,CAArC,EAAwC;AACtC,MAAIC,aAAa,GAAGF,SAAS,CAACG,SAAV,CAAoB,aAApB,EACjBC,IADiB,CACZH,CAAC,CAACI,KAAF,EADY,EACD,UAASC,CAAT,EAAY;AAAE,WAAOX,IAAI,CAACY,QAAL,CAAcD,CAAd,CAAP;AAA0B,GADvC,EAEjBE,OAFiB,CAET,QAFS,EAEC,IAFD,CAApB;AAIAN,EAAAA,aAAa,CAACO,IAAd,GAAqBC,MAArB;AACAR,EAAAA,aAAa,CAACS,KAAd,GAAsBC,MAAtB,CAA6B,GAA7B,EACGJ,OADH,CACW,WADX,EACwB,IADxB,EAEGK,KAFH,CAES,SAFT,EAEoB,CAFpB;AAIAX,EAAAA,aAAa,GAAGF,SAAS,CAACG,SAAV,CAAoB,aAApB,CAAhB;AAEAD,EAAAA,aAAa,CAACY,IAAd,CAAmB,UAASR,CAAT,EAAY;AAC7B,QAAIS,IAAI,GAAGnB,EAAE,CAACoB,MAAH,CAAU,IAAV,CAAX;AACAD,IAAAA,IAAI,CAACC,MAAL,CAAY,QAAZ,EAAsBN,MAAtB;AACA,QAAIO,IAAI,GAAGhB,CAAC,CAACgB,IAAF,CAAOX,CAAP,CAAX;AACA,QAAIY,KAAK,GAAGxB,QAAQ,CAACqB,IAAD,EAAOd,CAAC,CAACgB,IAAF,CAAOX,CAAP,CAAP,EAAkB,CAAlB,EAAqB,CAArB,CAAR,CAAgCE,OAAhC,CAAwC,OAAxC,EAAiD,IAAjD,CAAZ;AACA,QAAIW,IAAI,GAAGD,KAAK,CAACE,IAAN,GAAaC,OAAb,EAAX;;AAEA,QAAIJ,IAAI,CAACK,OAAT,EAAkB;AAAEJ,MAAAA,KAAK,CAACK,IAAN,CAAW,IAAX,EAAiBN,IAAI,CAACK,OAAtB;AAAiC;;AACrD,QAAI,CAAC9B,CAAC,CAACgC,GAAF,CAAMP,IAAN,EAAY,OAAZ,CAAL,EAA2B;AAAEA,MAAAA,IAAI,CAACQ,KAAL,GAAaN,IAAI,CAACM,KAAlB;AAA0B;;AACvD,QAAI,CAACjC,CAAC,CAACgC,GAAF,CAAMP,IAAN,EAAY,QAAZ,CAAL,EAA4B;AAAEA,MAAAA,IAAI,CAACS,MAAL,GAAcP,IAAI,CAACO,MAAnB;AAA4B;AAC3D,GAVD;AAYA,MAAIC,aAAJ;;AAEA,MAAIzB,aAAa,CAACO,IAAlB,EAAwB;AACtBkB,IAAAA,aAAa,GAAGzB,aAAa,CAACO,IAAd,EAAhB;AACD,GAFD,MAEO;AACLkB,IAAAA,aAAa,GAAGzB,aAAa,CAACC,SAAd,CAAwB,IAAxB,CAAhB,CADK,CAC0C;AAChD;;AAEDR,EAAAA,IAAI,CAACiC,eAAL,CAAqBD,aAArB,EAAoC1B,CAApC,EACGY,KADH,CACS,SADT,EACoB,CADpB,EAEGH,MAFH;AAIA,SAAOR,aAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar addLabel = require(\"./label/add-label\");\nvar util = require(\"./util\");\nvar d3 = require(\"./d3\");\n\nmodule.exports = createEdgeLabels;\n\nfunction createEdgeLabels(selection, g) {\n  var svgEdgeLabels = selection.selectAll(\"g.edgeLabel\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  svgEdgeLabels.exit().remove();\n  svgEdgeLabels.enter().append(\"g\")\n    .classed(\"edgeLabel\", true)\n    .style(\"opacity\", 0);\n\n  svgEdgeLabels = selection.selectAll(\"g.edgeLabel\");\n\n  svgEdgeLabels.each(function(e) {\n    var root = d3.select(this);\n    root.select(\".label\").remove();\n    var edge = g.edge(e);\n    var label = addLabel(root, g.edge(e), 0, 0).classed(\"label\", true);\n    var bbox = label.node().getBBox();\n\n    if (edge.labelId) { label.attr(\"id\", edge.labelId); }\n    if (!_.has(edge, \"width\")) { edge.width = bbox.width; }\n    if (!_.has(edge, \"height\")) { edge.height = bbox.height; }\n  });\n\n  var exitSelection;\n\n  if (svgEdgeLabels.exit) {\n    exitSelection = svgEdgeLabels.exit();\n  } else {\n    exitSelection = svgEdgeLabels.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgEdgeLabels;\n}\n"]},"metadata":{},"sourceType":"script"}