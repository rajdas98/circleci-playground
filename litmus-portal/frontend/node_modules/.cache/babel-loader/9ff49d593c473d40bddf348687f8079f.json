{"ast":null,"code":"export var UserActions;\n\n(function (UserActions) {\n  UserActions[\"LOAD_USER_DETAILS\"] = \"LOAD_USER_DETAILS\";\n  UserActions[\"UPDATE_USER_DETAILS\"] = \"UPDATE_USER_DETAILS\";\n  UserActions[\"LOGOUT_USER\"] = \"LOGOUT_USER\";\n})(UserActions || (UserActions = {}));","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/models/redux/user.ts"],"names":["UserActions"],"mappings":"AAaA,WAAYA,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W","sourcesContent":["export interface UpdateUser {\n  selectedProjectID: string;\n  selectedProjectName: string;\n  selectedProjectOwner: string;\n  userRole: string;\n  loader: boolean;\n}\n\nexport interface UserData extends UpdateUser {\n  username: string;\n  name: string;\n  email: string;\n}\nexport enum UserActions {\n  LOAD_USER_DETAILS = 'LOAD_USER_DETAILS',\n  UPDATE_USER_DETAILS = 'UPDATE_USER_DETAILS',\n  LOGOUT_USER = 'LOGOUT_USER',\n}\n\ninterface UserActionType<T, P> {\n  type: T;\n  payload: P;\n}\n\nexport type UserAction =\n  | UserActionType<typeof UserActions.LOAD_USER_DETAILS, string>\n  | UserActionType<typeof UserActions.LOGOUT_USER, string>\n  | UserActionType<typeof UserActions.UPDATE_USER_DETAILS, UpdateUser>;\n"]},"metadata":{},"sourceType":"module"}