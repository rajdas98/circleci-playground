{"ast":null,"code":"import _objectSpread from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/Settings/AccountsTab/AccountSettings/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Divider, Typography } from '@material-ui/core';\nimport React, { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ButtonFilled from '../../../../components/Button/ButtonFilled';\nimport InputFieldOutline from '../../../../components/InputFieldOutline';\nimport Loader from '../../../../components/Loader';\nimport config from '../../../../config';\nimport Unimodal from '../../../../containers/layouts/Unimodal';\nimport getToken from '../../../../utils/getToken';\nimport { validateConfirmPassword, validateStartEmptySpacing } from '../../../../utils/validate';\nimport PersonalDetails from '../PersonalDetails';\nimport useStyles from './styles'; // used for password field\n\n// AccountSettings displays the starting page of \"Accounts\" tab\nvar AccountSettings = function AccountSettings() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // used for modal\n\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var isSuccess = useRef(false);\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  }; // states for the three password fields\n\n\n  var _React$useState5 = React.useState({\n    newPassword: '',\n    currPassword: '',\n    confNewPassword: ''\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      password = _React$useState6[0],\n      setPassword = _React$useState6[1]; // handleCurrPassword handles password for first password field\n\n\n  var handleCurrPassword = function handleCurrPassword(prop) {\n    return function (event) {\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        [prop]: event.target.value\n      }));\n    };\n  }; // handleNewPassword handles password for second password field\n\n\n  var handleNewPassword = function handleNewPassword(prop) {\n    return function (event) {\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        [prop]: event.target.value\n      }));\n    };\n  }; // handleConfPassword handles password for third password field\n\n\n  var handleConfPassword = function handleConfPassword(prop) {\n    return function (event) {\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        [prop]: event.target.value\n      }));\n    };\n  };\n\n  if (password.confNewPassword.length > 0 && password.newPassword === password.confNewPassword) isSuccess.current = true;else isSuccess.current = false;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var handleChangePassword = function handleChangePassword() {\n    setLoading(true);\n    fetch(\"\".concat(config.auth.url, \"/update/password\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \".concat(getToken())\n      },\n      body: JSON.stringify({\n        old_password: password.currPassword,\n        new_password: password.newPassword\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if ('error' in data) {\n        setError(data.error_description);\n      } else {\n        setError('');\n      }\n\n      setLoading(false);\n      setOpen(true);\n    }).catch(function (err) {\n      setLoading(false);\n      setError(err.message);\n      setOpen(true);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.suSegments,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PersonalDetails, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, t('settings.accountsTab.accountsSettings.header'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.outerPass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.innerPass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"currPassword\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputFieldOutline, {\n    required: true,\n    value: password.currPassword,\n    handleChange: handleCurrPassword('currPassword'),\n    type: \"password\",\n    label: t('settings.accountsTab.accountsSettings.label.currPassword'),\n    validationError: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"newPassword\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputFieldOutline, {\n    required: true,\n    type: \"password\",\n    handleChange: handleNewPassword('newPassword'),\n    success: isSuccess.current,\n    helperText: validateStartEmptySpacing(password.newPassword) ? 'Should not start with empty space' : '',\n    label: t('settings.accountsTab.accountsSettings.label.newPassword'),\n    validationError: validateStartEmptySpacing(password.newPassword),\n    value: password.newPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"confPassword\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputFieldOutline, {\n    helperText: validateConfirmPassword(password.newPassword, password.confNewPassword) ? 'Password is not same' : '',\n    required: true,\n    type: \"password\",\n    handleChange: handleConfPassword('confNewPassword'),\n    success: isSuccess.current,\n    label: t('settings.accountsTab.accountsSettings.label.confNewPassword'),\n    validationError: validateConfirmPassword(password.newPassword, password.confNewPassword),\n    value: password.confNewPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"change-password\",\n    className: classes.buttonModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    \"data-cy\": \"button\",\n    isPrimary: true,\n    isDisabled: !(isSuccess.current && password.currPassword.length > 0 && !loading),\n    handleClick: handleChangePassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 23\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, t('settings.accountsTab.accountsSettings.button.changePass')))), /*#__PURE__*/React.createElement(Unimodal, {\n    open: open,\n    handleClose: handleClose,\n    hasCloseBtn: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, error.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.errDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.textError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typo,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, t('settings.accountsTab.accountsSettings.modal.headerErrStrong'), \":\"), ' ', t('settings.accountsTab.accountsSettings.modal.headerErr'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.textSecondError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typoSub,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 23\n    }\n  }, t('settings.accountsTab.accountsSettings.modal.headerErrStrong'), \": \", error)), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"done\",\n    className: classes.buttonModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    isPrimary: true,\n    isDisabled: false,\n    handleClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, t('settings.accountsTab.accountsSettings.button.done'))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/lock.svg\",\n    alt: \"lock\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typo,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 23\n    }\n  }, t('settings.accountsTab.accountsSettings.modal.header'), ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }\n  }, t('settings.accountsTab.accountsSettings.modal.headerStrong')), \"Your password \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 39\n    }\n  }, \"has been changed!\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.text1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typo1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 23\n    }\n  }, t('settings.accountsTab.accountsSettings.modal.info'))), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"done\",\n    className: classes.buttonModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    isPrimary: true,\n    isDisabled: false,\n    handleClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, t('settings.accountsTab.accountsSettings.button.done'))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.col2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/pass.svg\",\n    \"data-cy\": \"lock\",\n    alt: \"lockIcon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }))))));\n};\n\n_s(AccountSettings, \"IhceDRZ0CRCXM3wrw8ZOLT97Yvk=\", false, function () {\n  return [useStyles, useTranslation];\n});\n\n_c = AccountSettings;\nexport default AccountSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSettings\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/Settings/AccountsTab/AccountSettings/index.tsx"],"names":["Divider","Typography","React","useRef","useState","useTranslation","ButtonFilled","InputFieldOutline","Loader","config","Unimodal","getToken","validateConfirmPassword","validateStartEmptySpacing","PersonalDetails","useStyles","AccountSettings","classes","t","open","setOpen","isSuccess","loading","setLoading","handleClose","newPassword","currPassword","confNewPassword","password","setPassword","handleCurrPassword","prop","event","target","value","handleNewPassword","handleConfPassword","length","current","error","setError","handleChangePassword","fetch","auth","url","method","headers","Authorization","body","JSON","stringify","old_password","new_password","then","response","json","data","error_description","catch","err","message","container","suSegments","divider","headerText","outerPass","innerPass","buttonModal","errDiv","textError","typo","textSecondError","typoSub","text","text1","typo1","col2"],"mappings":"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","sourcesContent":["import { Divider, Typography } from '@material-ui/core';\nimport React, { useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ButtonFilled from '../../../../components/Button/ButtonFilled';\nimport InputFieldOutline from '../../../../components/InputFieldOutline';\nimport Loader from '../../../../components/Loader';\nimport config from '../../../../config';\nimport Unimodal from '../../../../containers/layouts/Unimodal';\nimport getToken from '../../../../utils/getToken';\nimport {\n  validateConfirmPassword,\n  validateStartEmptySpacing,\n} from '../../../../utils/validate';\nimport PersonalDetails from '../PersonalDetails';\nimport useStyles from './styles';\n\n// used for password field\ninterface Password {\n  currPassword: string;\n  newPassword: string;\n  confNewPassword: string;\n}\n\n// AccountSettings displays the starting page of \"Accounts\" tab\nconst AccountSettings: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  // used for modal\n  const [open, setOpen] = React.useState(false);\n  const isSuccess = useRef<boolean>(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // states for the three password fields\n  const [password, setPassword] = React.useState<Password>({\n    newPassword: '',\n    currPassword: '',\n    confNewPassword: '',\n  });\n\n  // handleCurrPassword handles password for first password field\n  const handleCurrPassword = (prop: keyof Password) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setPassword({\n      ...password,\n      [prop]: event.target.value,\n    });\n  };\n\n  // handleNewPassword handles password for second password field\n  const handleNewPassword = (prop: keyof Password) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setPassword({\n      ...password,\n      [prop]: event.target.value,\n    });\n  };\n\n  // handleConfPassword handles password for third password field\n  const handleConfPassword = (prop: keyof Password) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setPassword({\n      ...password,\n      [prop]: event.target.value,\n    });\n  };\n\n  if (\n    password.confNewPassword.length > 0 &&\n    password.newPassword === password.confNewPassword\n  )\n    isSuccess.current = true;\n  else isSuccess.current = false;\n  const [error, setError] = useState<string>('');\n  const handleChangePassword = () => {\n    setLoading(true);\n    fetch(`${config.auth.url}/update/password`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${getToken()}`,\n      },\n      body: JSON.stringify({\n        old_password: password.currPassword,\n        new_password: password.newPassword,\n      }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if ('error' in data) {\n          setError(data.error_description as string);\n        } else {\n          setError('');\n        }\n        setLoading(false);\n        setOpen(true);\n      })\n      .catch((err) => {\n        setLoading(false);\n        setError(err.message as string);\n        setOpen(true);\n      });\n  };\n\n  return (\n    <div className={classes.container}>\n      <div>\n        <div className={classes.suSegments}>\n          {/* Below component renders the upper section of the page, displays personal details */}\n          <PersonalDetails />\n          <Divider className={classes.divider} />\n\n          {/* Displays the lower segment containing the password details */}\n          <Typography className={classes.headerText}>\n            <strong>{t('settings.accountsTab.accountsSettings.header')}</strong>\n          </Typography>\n          <div className={classes.outerPass}>\n            <form className={classes.innerPass}>\n              {/* Current Password */}\n              <div data-cy=\"currPassword\">\n                <InputFieldOutline\n                  required\n                  value={password.currPassword}\n                  handleChange={handleCurrPassword('currPassword')}\n                  type=\"password\"\n                  label={t(\n                    'settings.accountsTab.accountsSettings.label.currPassword'\n                  )}\n                  validationError={false}\n                />\n              </div>\n              {/* New Password */}\n              <div data-cy=\"newPassword\">\n                <InputFieldOutline\n                  required\n                  type=\"password\"\n                  handleChange={handleNewPassword('newPassword')}\n                  success={isSuccess.current}\n                  helperText={\n                    validateStartEmptySpacing(password.newPassword)\n                      ? 'Should not start with empty space'\n                      : ''\n                  }\n                  label={t(\n                    'settings.accountsTab.accountsSettings.label.newPassword'\n                  )}\n                  validationError={validateStartEmptySpacing(\n                    password.newPassword\n                  )}\n                  value={password.newPassword}\n                />\n              </div>\n              {/* Confirm new password */}\n              <div data-cy=\"confPassword\">\n                <InputFieldOutline\n                  helperText={\n                    validateConfirmPassword(\n                      password.newPassword,\n                      password.confNewPassword\n                    )\n                      ? 'Password is not same'\n                      : ''\n                  }\n                  required\n                  type=\"password\"\n                  handleChange={handleConfPassword('confNewPassword')}\n                  success={isSuccess.current}\n                  label={t(\n                    'settings.accountsTab.accountsSettings.label.confNewPassword'\n                  )}\n                  validationError={validateConfirmPassword(\n                    password.newPassword,\n                    password.confNewPassword\n                  )}\n                  value={password.confNewPassword}\n                />\n              </div>\n              <div data-cy=\"change-password\" className={classes.buttonModal}>\n                <ButtonFilled\n                  data-cy=\"button\"\n                  isPrimary\n                  isDisabled={\n                    !(\n                      isSuccess.current &&\n                      password.currPassword.length > 0 &&\n                      !loading\n                    )\n                  }\n                  handleClick={handleChangePassword}\n                >\n                  {loading ? (\n                    <div>\n                      <Loader size={20} />\n                    </div>\n                  ) : (\n                    <>\n                      {t(\n                        'settings.accountsTab.accountsSettings.button.changePass'\n                      )}\n                    </>\n                  )}\n                </ButtonFilled>\n              </div>\n              <Unimodal\n                open={open}\n                handleClose={handleClose}\n                hasCloseBtn={false}\n              >\n                {error.length ? (\n                  <div className={classes.errDiv}>\n                    <div className={classes.textError}>\n                      <Typography className={classes.typo} align=\"center\">\n                        <strong>\n                          {t(\n                            'settings.accountsTab.accountsSettings.modal.headerErrStrong'\n                          )}\n                          :\n                        </strong>{' '}\n                        {t(\n                          'settings.accountsTab.accountsSettings.modal.headerErr'\n                        )}\n                      </Typography>\n                    </div>\n                    <div className={classes.textSecondError}>\n                      <Typography className={classes.typoSub}>\n                        {t(\n                          'settings.accountsTab.accountsSettings.modal.headerErrStrong'\n                        )}\n                        : {error}\n                      </Typography>\n                    </div>\n                    <div data-cy=\"done\" className={classes.buttonModal}>\n                      <ButtonFilled\n                        isPrimary\n                        isDisabled={false}\n                        handleClick={handleClose}\n                      >\n                        <>\n                          {t(\n                            'settings.accountsTab.accountsSettings.button.done'\n                          )}\n                        </>\n                      </ButtonFilled>\n                    </div>\n                  </div>\n                ) : (\n                  <div className={classes.body}>\n                    <img src=\"./icons/lock.svg\" alt=\"lock\" />\n                    <div className={classes.text}>\n                      <Typography className={classes.typo} align=\"center\">\n                        {t(\n                          'settings.accountsTab.accountsSettings.modal.header'\n                        )}{' '}\n                        <strong>\n                          {t(\n                            'settings.accountsTab.accountsSettings.modal.headerStrong'\n                          )}\n                        </strong>\n                        Your password <strong>has been changed!</strong>\n                      </Typography>\n                    </div>\n                    <div className={classes.text1}>\n                      <Typography className={classes.typo1}>\n                        {t('settings.accountsTab.accountsSettings.modal.info')}\n                      </Typography>\n                    </div>\n                    <div data-cy=\"done\" className={classes.buttonModal}>\n                      <ButtonFilled\n                        isPrimary\n                        isDisabled={false}\n                        handleClick={handleClose}\n                      >\n                        <>\n                          {t(\n                            'settings.accountsTab.accountsSettings.button.done'\n                          )}\n                        </>\n                      </ButtonFilled>\n                    </div>\n                  </div>\n                )}\n              </Unimodal>\n            </form>\n            <div className={classes.col2}>\n              <img src=\"./icons/pass.svg\" data-cy=\"lock\" alt=\"lockIcon\" />\n              {/*  <Typography className={classes.txt1}>\n                Your new password <strong>must</strong> be:\n              </Typography>\n              <Typography className={classes.txt2}>\n                1. Be at least 8 characters in length\n              </Typography>\n              <Typography className={classes.txt2}>\n                2. Not be same as your current password\n              </Typography>\n              <Typography className={classes.txt2}>\n                3. Be a combination of letters, numbers and special characters\n              </Typography> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default AccountSettings;\n"]},"metadata":{},"sourceType":"module"}