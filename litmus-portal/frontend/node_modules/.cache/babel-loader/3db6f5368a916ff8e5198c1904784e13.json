{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseAnalytics/PopOver/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Paper, Avatar, Typography } from '@material-ui/core';\nimport React from 'react';\nimport moment from 'moment';\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\nimport CancelSharpIcon from '@material-ui/icons/CancelSharp';\nimport TimelineSharpIcon from '@material-ui/icons/TimelineSharp';\nimport useStyles from './styles';\n\nvar PopOver = function PopOver(_ref) {\n  _s();\n\n  var testsPassed = _ref.testsPassed,\n      testsFailed = _ref.testsFailed,\n      resilienceScore = _ref.resilienceScore,\n      testDate = _ref.testDate,\n      xLoc = _ref.xLoc,\n      yLoc = _ref.yLoc;\n  var styleProps = {\n    xLoc,\n    yLoc\n  };\n  var classes = useStyles(styleProps); // Function to convert UNIX time in format of DD MMM YYY\n\n  var formatDate = function formatDate(date) {\n    var updated = new Date(parseInt(date, 10) * 1000).toString();\n    var dateTime = {\n      date: moment(updated).format('DD MMM YYYY'),\n      time: moment(updated).format('HH:mm')\n    };\n    return dateTime;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.date,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.testDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"\".concat(classes.miniIcons, \" \").concat(classes.dateIcon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/calenderAnalytics.svg\",\n    alt: \"Calender\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  })), \"Tests date: \", formatDate(testDate).date, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 53\n    }\n  }), \"Tests time: \", formatDate(testDate).time)), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.resilienceScore,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"\".concat(classes.miniIcons, \" \").concat(classes.resilienceScoreIcon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TimelineSharpIcon, {\n    className: classes.timeLineIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), \"Resilience score - \", resilienceScore, \"%\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.testsPassed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"\".concat(classes.miniIcons, \" \").concat(classes.passedIcon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircleSharpIcon, {\n    className: classes.checkMarkIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })), \"Passed tests - \", testsPassed), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.testsFailed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"\".concat(classes.miniIcons, \" \").concat(classes.failedIcon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CancelSharpIcon, {\n    className: classes.cancelMarkIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), \"Failed tests - \", testsFailed)));\n};\n\n_s(PopOver, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = PopOver;\nexport default PopOver;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopOver\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseAnalytics/PopOver/index.tsx"],"names":["Paper","Avatar","Typography","React","moment","CheckCircleSharpIcon","CancelSharpIcon","TimelineSharpIcon","useStyles","PopOver","testsPassed","testsFailed","resilienceScore","testDate","xLoc","yLoc","styleProps","classes","formatDate","date","updated","Date","parseInt","toString","dateTime","format","time","modalContainer","root","miniIcons","dateIcon","resilienceScoreIcon","timeLineIcon","passedIcon","checkMarkIcon","failedIcon","cancelMarkIcon"],"mappings":"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","sourcesContent":["import { Paper, Avatar, Typography } from '@material-ui/core';\nimport React from 'react';\nimport moment from 'moment';\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\nimport CancelSharpIcon from '@material-ui/icons/CancelSharp';\nimport TimelineSharpIcon from '@material-ui/icons/TimelineSharp';\nimport useStyles from './styles';\n\ninterface PopOverProps {\n  testsPassed: number;\n  testsFailed: number;\n  resilienceScore: number;\n  testDate: string;\n  xLoc: number;\n  yLoc: number;\n}\n\nconst PopOver: React.FC<PopOverProps> = ({\n  testsPassed,\n  testsFailed,\n  resilienceScore,\n  testDate,\n  xLoc,\n  yLoc,\n}) => {\n  const styleProps = { xLoc, yLoc };\n  const classes = useStyles(styleProps);\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const dateTime = {\n      date: moment(updated).format('DD MMM YYYY'),\n      time: moment(updated).format('HH:mm'),\n    };\n    return dateTime;\n  };\n\n  return (\n    <div className={classes.modalContainer}>\n      <Paper elevation={3} className={classes.root}>\n        <div className={classes.date}>\n          <Typography className={classes.testDate}>\n            <Avatar className={`${classes.miniIcons} ${classes.dateIcon}`}>\n              <img src=\"/icons/calenderAnalytics.svg\" alt=\"Calender\" />\n            </Avatar>\n            Tests date: {formatDate(testDate).date} <br />\n            Tests time: {formatDate(testDate).time}\n          </Typography>\n        </div>\n        <Typography className={classes.resilienceScore}>\n          <Avatar\n            className={`${classes.miniIcons} ${classes.resilienceScoreIcon}`}\n          >\n            <TimelineSharpIcon className={classes.timeLineIcon} />\n          </Avatar>\n          Resilience score - {resilienceScore}%\n        </Typography>\n        <Typography className={classes.testsPassed}>\n          <Avatar className={`${classes.miniIcons} ${classes.passedIcon}`}>\n            <CheckCircleSharpIcon className={classes.checkMarkIcon} />\n          </Avatar>\n          Passed tests - {testsPassed}\n        </Typography>\n        <Typography className={classes.testsFailed}>\n          <Avatar className={`${classes.miniIcons} ${classes.failedIcon}`}>\n            <CancelSharpIcon className={classes.cancelMarkIcon} />\n          </Avatar>\n          Failed tests - {testsFailed}\n        </Typography>\n      </Paper>\n    </div>\n  );\n};\n\nexport default PopOver;\n"]},"metadata":{},"sourceType":"module"}