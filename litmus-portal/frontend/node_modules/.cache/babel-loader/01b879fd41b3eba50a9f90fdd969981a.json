{"ast":null,"code":"import _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseAnalytics/WorkflowRunDetailsTable/TableToolbar.tsx\";\n\nimport { Typography, InputBase, InputAdornment, FormControl, InputLabel, MenuItem, Select, Button, IconButton } from '@material-ui/core';\nimport React, { useRef, useState } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport useStyles from './styles';\nimport DateRangeSelector from '../../../../components/DateRangeSelector';\n\nvar TableToolBar = function TableToolBar(_ref) {\n  var handleSearch = _ref.handleSearch,\n      searchToken = _ref.searchToken,\n      tests = _ref.tests,\n      testResults = _ref.testResults,\n      callbackToSetTest = _ref.callbackToSetTest,\n      callbackToSetRange = _ref.callbackToSetRange,\n      callbackToSetResult = _ref.callbackToSetResult;\n  var classes = useStyles();\n\n  var _React$useState = React.useState('All'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      test = _React$useState2[0],\n      setTest = _React$useState2[1];\n\n  var _React$useState3 = React.useState('All'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      testResult = _React$useState4[0],\n      setTestResult = _React$useState4[1];\n\n  var dateRangeSelectorRef = useRef(null);\n\n  var _React$useState5 = React.useState({\n    startDate: ' ',\n    endDate: ' '\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      range = _React$useState6[0],\n      setRange = _React$useState6[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDateRangeSelectorPopoverOpen = _useState2[0],\n      setDateRangeSelectorPopoverOpen = _useState2[1];\n\n  var handleTestChange = function handleTestChange(event) {\n    setTest(event.target.value);\n    callbackToSetTest(event.target.value);\n  };\n\n  var handleTestResultChange = function handleTestResultChange(event) {\n    setTestResult(event.target.value);\n    callbackToSetResult(event.target.value);\n  };\n\n  var CallbackFromRangeSelector = function CallbackFromRangeSelector(selectedStartDate, selectedEndDate) {\n    setRange({\n      startDate: selectedStartDate,\n      endDate: selectedEndDate\n    });\n    callbackToSetRange(\"\".concat(\"\".concat(selectedStartDate.split(' ')[2], \" \").concat(selectedStartDate.split(' ')[1], \" \").concat(selectedStartDate.split(' ')[3])), \"\".concat(\"\".concat(selectedEndDate.split(' ')[2], \" \").concat(selectedEndDate.split(' ')[1], \" \").concat(selectedEndDate.split(' ')[3])));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headerSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    id: \"input-with-icon-adornment\",\n    placeholder: \"Search\",\n    className: classes.search,\n    value: searchToken,\n    onChange: handleSearch,\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.selectDate,\n    onClick: function onClick() {\n      return setDateRangeSelectorPopoverOpen(true);\n    },\n    ref: dateRangeSelectorRef,\n    \"aria-label\": \"time range\",\n    \"aria-haspopup\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.displayDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, range.startDate === ' ' ? 'Select Period' : \"\".concat(range.startDate.split(' ')[2], \" \").concat(range.startDate.split(' ')[1], \" \").concat(range.startDate.split(' ')[3], \" - \").concat(range.endDate.split(' ')[2], \" \").concat(range.endDate.split(' ')[1], \" \").concat(range.endDate.split(' ')[3]), /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.rangeSelectorIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, isDateRangeSelectorPopoverOpen ? /*#__PURE__*/React.createElement(KeyboardArrowDownIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"\".concat(classes.formControl, \" \").concat(classes.testResultForm),\n    color: \"secondary\",\n    focused: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.selectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \" Test Result \"), /*#__PURE__*/React.createElement(Select, {\n    label: \"Test Result\",\n    value: testResult,\n    onChange: handleTestResultChange,\n    className: classes.selectText,\n    color: \"secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"All\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"All\"), testResults.map(function (testResult) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: testResult,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, testResult);\n  }))), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"\".concat(classes.formControl, \" \").concat(classes.testForm),\n    color: \"secondary\",\n    focused: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.selectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, \" Test Name \"), /*#__PURE__*/React.createElement(Select, {\n    label: \"Test Name\",\n    value: test,\n    onChange: handleTestChange,\n    className: classes.selectText,\n    color: \"secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"All\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, \"All\"), tests.map(function (testName) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: testName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, testName);\n  }))), /*#__PURE__*/React.createElement(DateRangeSelector, {\n    anchorEl: dateRangeSelectorRef.current,\n    isOpen: isDateRangeSelectorPopoverOpen,\n    onClose: function onClose() {\n      setDateRangeSelectorPopoverOpen(false);\n    },\n    callbackToSetRange: CallbackFromRangeSelector,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TableToolBar;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseAnalytics/WorkflowRunDetailsTable/TableToolbar.tsx"],"names":["Typography","InputBase","InputAdornment","FormControl","InputLabel","MenuItem","Select","Button","IconButton","React","useRef","useState","SearchIcon","ChevronRightIcon","KeyboardArrowDownIcon","useStyles","DateRangeSelector","TableToolBar","handleSearch","searchToken","tests","testResults","callbackToSetTest","callbackToSetRange","callbackToSetResult","classes","test","setTest","testResult","setTestResult","dateRangeSelectorRef","startDate","endDate","range","setRange","isDateRangeSelectorPopoverOpen","setDateRangeSelectorPopoverOpen","handleTestChange","event","target","value","handleTestResultChange","CallbackFromRangeSelector","selectedStartDate","selectedEndDate","split","headerSection","search","selectDate","displayDate","rangeSelectorIcon","formControl","testResultForm","selectText","map","testForm","testName","current"],"mappings":"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","sourcesContent":["import {\n  Typography,\n  InputBase,\n  InputAdornment,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Button,\n  IconButton,\n} from '@material-ui/core';\nimport React, { ChangeEvent, useRef, useState } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport useStyles from './styles';\nimport DateRangeSelector from '../../../../components/DateRangeSelector';\n\ninterface TestCallBackType {\n  (clusterName: string): void;\n}\n\ninterface TestResultCallBackType {\n  (testResult: string): void;\n}\n\ninterface RangeCallBackType {\n  (selectedStartDate: string, selectedEndDate: string): void;\n}\n\ninterface TableToolBarProps {\n  searchToken: string;\n  handleSearch: (\n    event?: ChangeEvent<{ value: unknown }>,\n    token?: string\n  ) => void;\n  tests: string[];\n  testResults: string[];\n  callbackToSetTest: TestCallBackType;\n  callbackToSetRange: RangeCallBackType;\n  callbackToSetResult: TestResultCallBackType;\n}\n\ninterface RangeType {\n  startDate: string;\n  endDate: string;\n}\n\nconst TableToolBar: React.FC<TableToolBarProps> = ({\n  handleSearch,\n  searchToken,\n  tests,\n  testResults,\n  callbackToSetTest,\n  callbackToSetRange,\n  callbackToSetResult,\n}) => {\n  const classes = useStyles();\n  const [test, setTest] = React.useState<String>('All');\n  const [testResult, setTestResult] = React.useState<String>('All');\n  const dateRangeSelectorRef = useRef<HTMLButtonElement>(null);\n  const [range, setRange] = React.useState<RangeType>({\n    startDate: ' ',\n    endDate: ' ',\n  });\n  const [\n    isDateRangeSelectorPopoverOpen,\n    setDateRangeSelectorPopoverOpen,\n  ] = useState(false);\n\n  const handleTestChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setTest(event.target.value as String);\n    callbackToSetTest(event.target.value as string);\n  };\n\n  const handleTestResultChange = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    setTestResult(event.target.value as String);\n    callbackToSetResult(event.target.value as string);\n  };\n\n  const CallbackFromRangeSelector = (\n    selectedStartDate: string,\n    selectedEndDate: string\n  ) => {\n    setRange({ startDate: selectedStartDate, endDate: selectedEndDate });\n    callbackToSetRange(\n      `${`${selectedStartDate.split(' ')[2]} ${\n        selectedStartDate.split(' ')[1]\n      } ${selectedStartDate.split(' ')[3]}`}`,\n      `${`${selectedEndDate.split(' ')[2]} ${selectedEndDate.split(' ')[1]} ${\n        selectedEndDate.split(' ')[3]\n      }`}`\n    );\n  };\n\n  return (\n    <div className={classes.headerSection}>\n      <InputBase\n        id=\"input-with-icon-adornment\"\n        placeholder=\"Search\"\n        className={classes.search}\n        value={searchToken}\n        onChange={handleSearch}\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <SearchIcon />\n          </InputAdornment>\n        }\n      />\n\n      <Button\n        className={classes.selectDate}\n        onClick={() => setDateRangeSelectorPopoverOpen(true)}\n        ref={dateRangeSelectorRef}\n        aria-label=\"time range\"\n        aria-haspopup=\"true\"\n      >\n        <Typography className={classes.displayDate}>\n          {range.startDate === ' '\n            ? 'Select Period'\n            : `${range.startDate.split(' ')[2]} ${\n                range.startDate.split(' ')[1]\n              } ${range.startDate.split(' ')[3]} - ${\n                range.endDate.split(' ')[2]\n              } ${range.endDate.split(' ')[1]} ${range.endDate.split(' ')[3]}`}\n\n          <IconButton className={classes.rangeSelectorIcon}>\n            {isDateRangeSelectorPopoverOpen ? (\n              <KeyboardArrowDownIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </Typography>\n      </Button>\n\n      <FormControl\n        variant=\"outlined\"\n        className={`${classes.formControl} ${classes.testResultForm}`}\n        color=\"secondary\"\n        focused\n      >\n        <InputLabel className={classes.selectText}> Test Result </InputLabel>\n        <Select\n          label=\"Test Result\"\n          value={testResult}\n          onChange={handleTestResultChange}\n          className={classes.selectText}\n          color=\"secondary\"\n        >\n          <MenuItem value=\"All\">All</MenuItem>\n          {testResults.map((testResult: string) => (\n            <MenuItem value={testResult}>{testResult}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <FormControl\n        variant=\"outlined\"\n        className={`${classes.formControl} ${classes.testForm}`}\n        color=\"secondary\"\n        focused\n      >\n        <InputLabel className={classes.selectText}> Test Name </InputLabel>\n        <Select\n          label=\"Test Name\"\n          value={test}\n          onChange={handleTestChange}\n          className={classes.selectText}\n          color=\"secondary\"\n        >\n          <MenuItem value=\"All\">All</MenuItem>\n          {tests.map((testName: string) => (\n            <MenuItem value={testName}>{testName}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <DateRangeSelector\n        anchorEl={dateRangeSelectorRef.current as HTMLElement}\n        isOpen={isDateRangeSelectorPopoverOpen}\n        onClose={() => {\n          setDateRangeSelectorPopoverOpen(false);\n        }}\n        callbackToSetRange={CallbackFromRangeSelector}\n      />\n    </div>\n  );\n};\n\nexport default TableToolBar;\n"]},"metadata":{},"sourceType":"module"}