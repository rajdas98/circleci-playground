{"ast":null,"code":"import _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/CreateWorkflow/VerifyCommit/index.tsx\";\n\nimport { Divider, IconButton, Typography } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport EditIcon from '@material-ui/icons/Edit';\nimport cronstrue from 'cronstrue';\nimport YAML from 'yaml';\nimport { useTranslation } from 'react-i18next';\nimport AdjustedWeights from '../../../components/AdjustedWeights';\nimport ButtonFilled from '../../../components/Button/ButtonFilled';\nimport ButtonOutline from '../../../components/Button/ButtonOutline/index';\nimport CustomText from '../../../components/CustomText';\nimport YamlEditor from '../../../components/YamlEditor/Editor';\nimport { parseYamlValidations } from '../../../components/YamlEditor/Validations';\nimport Unimodal from '../../../containers/layouts/Unimodal';\nimport useActions from '../../../redux/actions';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport useStyles from './styles';\n\nvar VerifyCommit = function VerifyCommit(_ref) {\n  var gotoStep = _ref.gotoStep;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var workflow = useActions(WorkflowActions);\n  var workflowData = useSelector(function (state) {\n    return state.workflowData;\n  });\n  var name = workflowData.name,\n      link = workflowData.link,\n      yaml = workflowData.yaml,\n      id = workflowData.id,\n      description = workflowData.description,\n      weights = workflowData.weights,\n      cronSyntax = workflowData.cronSyntax,\n      clustername = workflowData.clustername;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState('Your code is fine. You can move on!'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      yamlStatus = _React$useState4[0],\n      setYamlStatus = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      modified = _React$useState6[0],\n      setModified = _React$useState6[1];\n\n  var handleOpen = function handleOpen() {\n    setModified(false);\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setModified(true);\n    setOpen(false);\n  };\n\n  var handleNameChange = function handleNameChange(_ref2) {\n    var changedName = _ref2.changedName;\n    var parsedYaml = YAML.parse(yaml);\n    parsedYaml.metadata.name = changedName;\n    var nameMappedYaml = YAML.stringify(parsedYaml);\n    workflow.setWorkflowDetails({\n      name: changedName,\n      yaml: nameMappedYaml\n    });\n  };\n\n  var handleDescChange = function handleDescChange(_ref3) {\n    var changedDesc = _ref3.changedDesc;\n    workflow.setWorkflowDetails({\n      description: changedDesc\n    });\n  };\n\n  var WorkflowTestData = weights;\n  useEffect(function () {\n    var editorValidations = {\n      markers: [],\n      annotations: []\n    };\n    editorValidations = parseYamlValidations(yaml, classes);\n    var stateObject = {\n      markers: editorValidations.markers,\n      annotations: editorValidations.annotations\n    };\n\n    if (stateObject.annotations.length > 0) {\n      setYamlStatus('Error in CRHeloD Yaml.');\n    } else {\n      setYamlStatus('Your code is fine. You can move on !');\n    }\n  }, [modified]); // const preventDefault = (event: React.SyntheticEvent) =>\n  //  event.preventDefault();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.suHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.suBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \" \", t('createWorkflow.verifyCommit.header'))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, t('createWorkflow.verifyCommit.info'))), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/b-finance.png\",\n    alt: \"bfinance\",\n    className: classes.bfinIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.sumText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, t('createWorkflow.verifyCommit.summary.header'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.outerSum,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summaryDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerSumDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.col1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.verifyCommit.summary.workflowName'), \":\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.col2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomText, {\n    value: name,\n    id: \"name\",\n    onchange: function onchange(changedName) {\n      return handleNameChange({\n        changedName\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summaryDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerSumDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.col1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.verifyCommit.summary.clustername'), \":\")), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.clusterName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, clustername)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summaryDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerSumDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.col1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.verifyCommit.summary.desc'), \":\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.col2,\n    style: {\n      width: 724\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomText, {\n    value: description,\n    id: \"desc\",\n    onchange: function onchange(changedDesc) {\n      return handleDescChange({\n        changedDesc\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summaryDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerSumDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.col1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.verifyCommit.summary.schedule'), \":\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.schCol2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, cronSyntax === '' ? /*#__PURE__*/React.createElement(Typography, {\n    className: classes.schedule,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, t('createWorkflow.verifyCommit.summary.schedulingNow')) : /*#__PURE__*/React.createElement(Typography, {\n    className: classes.schedule,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, cronstrue.toString(cronSyntax)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.editButton1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return gotoStep(4);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    className: classes.editbtn,\n    \"data-cy\": \"edit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summaryDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerSumDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.col1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.verifyCommit.summary.adjustedWeights'), \":\")), weights.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.errorText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.verifyCommit.error')))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.adjWeights,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progress,\n    style: {\n      flexWrap: 'wrap'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, WorkflowTestData.map(function (Test) {\n    return /*#__PURE__*/React.createElement(AdjustedWeights, {\n      key: Test.weight,\n      testName: \"\".concat(Test.experimentName, \" test\"),\n      testValue: Test.weight,\n      spacing: false,\n      icon: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    });\n  })), /*#__PURE__*/React.createElement(ButtonOutline, {\n    isDisabled: false,\n    handleClick: function handleClick() {\n      return gotoStep(3);\n    },\n    \"data-cy\": \"testRunButton\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.buttonOutlineText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.verifyCommit.button.edit'))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.summaryDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerSumDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.col1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, \"YAML:\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yamlFlex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, weights.length === 0 ? /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, ' ', t('createWorkflow.verifyCommit.errYaml'), ' ') : /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, yamlStatus), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yamlButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    handleClick: handleOpen,\n    isPrimary: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.verifyCommit.button.viewYaml'))))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Unimodal, {\n    open: open,\n    handleClose: handleClose,\n    hasCloseBtn: true,\n    isDark: true,\n    textAlign: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(YamlEditor, {\n    content: yaml,\n    filename: name,\n    yamlLink: link,\n    id: id,\n    description: description,\n    readOnly: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default VerifyCommit;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/CreateWorkflow/VerifyCommit/index.tsx"],"names":["Divider","IconButton","Typography","React","useEffect","useSelector","EditIcon","cronstrue","YAML","useTranslation","AdjustedWeights","ButtonFilled","ButtonOutline","CustomText","YamlEditor","parseYamlValidations","Unimodal","useActions","WorkflowActions","useStyles","VerifyCommit","gotoStep","classes","t","workflow","workflowData","state","name","link","yaml","id","description","weights","cronSyntax","clustername","useState","open","setOpen","yamlStatus","setYamlStatus","modified","setModified","handleOpen","handleClose","handleNameChange","changedName","parsedYaml","parse","metadata","nameMappedYaml","stringify","setWorkflowDetails","handleDescChange","changedDesc","WorkflowTestData","editorValidations","markers","annotations","stateObject","length","root","suHeader","suBody","headerText","bfinIcon","sumText","outerSum","summaryDiv","innerSumDiv","col1","col2","clusterName","width","schCol2","schedule","toString","editButton1","editbtn","errorText","adjWeights","progress","flexWrap","map","Test","weight","experimentName","buttonOutlineText","yamlFlex","yamlButton"],"mappings":"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","sourcesContent":["import { Divider, IconButton, Typography } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport EditIcon from '@material-ui/icons/Edit';\nimport cronstrue from 'cronstrue';\nimport YAML from 'yaml';\nimport { useTranslation } from 'react-i18next';\nimport AdjustedWeights from '../../../components/AdjustedWeights';\nimport ButtonFilled from '../../../components/Button/ButtonFilled';\nimport ButtonOutline from '../../../components/Button/ButtonOutline/index';\nimport CustomText from '../../../components/CustomText';\nimport YamlEditor from '../../../components/YamlEditor/Editor';\nimport {\n  AceValidations,\n  parseYamlValidations,\n} from '../../../components/YamlEditor/Validations';\nimport Unimodal from '../../../containers/layouts/Unimodal';\nimport { experimentMap, WorkflowData } from '../../../models/redux/workflow';\nimport useActions from '../../../redux/actions';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport { RootState } from '../../../redux/reducers';\nimport useStyles from './styles';\n\ninterface VerifyCommitProps {\n  gotoStep: (page: number) => void;\n}\n\nconst VerifyCommit: React.FC<VerifyCommitProps> = ({ gotoStep }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const workflow = useActions(WorkflowActions);\n\n  const workflowData: WorkflowData = useSelector(\n    (state: RootState) => state.workflowData\n  );\n\n  const {\n    name,\n    link,\n    yaml,\n    id,\n    description,\n    weights,\n    cronSyntax,\n    clustername,\n  } = workflowData;\n\n  const [open, setOpen] = React.useState(false);\n\n  const [yamlStatus, setYamlStatus] = React.useState(\n    'Your code is fine. You can move on!'\n  );\n\n  const [modified, setModified] = React.useState(false);\n\n  const handleOpen = () => {\n    setModified(false);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setModified(true);\n    setOpen(false);\n  };\n\n  const handleNameChange = ({ changedName }: { changedName: string }) => {\n    const parsedYaml = YAML.parse(yaml);\n    parsedYaml.metadata.name = changedName;\n    const nameMappedYaml = YAML.stringify(parsedYaml);\n    workflow.setWorkflowDetails({\n      name: changedName,\n      yaml: nameMappedYaml,\n    });\n  };\n\n  const handleDescChange = ({ changedDesc }: { changedDesc: string }) => {\n    workflow.setWorkflowDetails({\n      description: changedDesc,\n    });\n  };\n\n  const WorkflowTestData: experimentMap[] = weights as any;\n\n  useEffect(() => {\n    let editorValidations: AceValidations = {\n      markers: [],\n      annotations: [],\n    };\n    editorValidations = parseYamlValidations(yaml, classes);\n    const stateObject = {\n      markers: editorValidations.markers,\n      annotations: editorValidations.annotations,\n    };\n    if (stateObject.annotations.length > 0) {\n      setYamlStatus('Error in CRHeloD Yaml.');\n    } else {\n      setYamlStatus('Your code is fine. You can move on !');\n    }\n  }, [modified]);\n\n  // const preventDefault = (event: React.SyntheticEvent) =>\n  //  event.preventDefault();\n  return (\n    <div>\n      <div className={classes.root}>\n        <div className={classes.suHeader}>\n          <div className={classes.suBody}>\n            <Typography className={classes.headerText}>\n              <strong> {t('createWorkflow.verifyCommit.header')}</strong>\n            </Typography>\n            <Typography className={classes.description}>\n              {t('createWorkflow.verifyCommit.info')}\n            </Typography>\n          </div>\n          <img\n            src=\"./icons/b-finance.png\"\n            alt=\"bfinance\"\n            className={classes.bfinIcon}\n          />\n        </div>\n        <Divider />\n\n        <Typography className={classes.sumText}>\n          <strong>{t('createWorkflow.verifyCommit.summary.header')}</strong>\n        </Typography>\n\n        <div className={classes.outerSum}>\n          <div className={classes.summaryDiv}>\n            <div className={classes.innerSumDiv}>\n              <Typography className={classes.col1}>\n                {t('createWorkflow.verifyCommit.summary.workflowName')}:\n              </Typography>\n            </div>\n            <div className={classes.col2}>\n              <CustomText\n                value={name}\n                id=\"name\"\n                onchange={(changedName: string) =>\n                  handleNameChange({ changedName })\n                }\n              />\n            </div>\n          </div>\n\n          <div className={classes.summaryDiv}>\n            <div className={classes.innerSumDiv}>\n              <Typography className={classes.col1}>\n                {t('createWorkflow.verifyCommit.summary.clustername')}:\n              </Typography>\n            </div>\n            <Typography className={classes.clusterName}>\n              {clustername}\n            </Typography>\n          </div>\n\n          <div className={classes.summaryDiv}>\n            <div className={classes.innerSumDiv}>\n              <Typography className={classes.col1}>\n                {t('createWorkflow.verifyCommit.summary.desc')}:\n              </Typography>\n            </div>\n            <div\n              className={classes.col2}\n              style={{\n                width: 724,\n              }}\n            >\n              <CustomText\n                value={description}\n                id=\"desc\"\n                onchange={(changedDesc: string) =>\n                  handleDescChange({ changedDesc })\n                }\n              />\n            </div>\n          </div>\n          <div className={classes.summaryDiv}>\n            <div className={classes.innerSumDiv}>\n              <Typography className={classes.col1}>\n                {t('createWorkflow.verifyCommit.summary.schedule')}:\n              </Typography>\n            </div>\n            <div className={classes.schCol2}>\n              {/* <CustomDate disabled={edit} />\n              <CustomTime\n                handleDateChange={handleDateChange}\n                value={selectedDate}\n                ampm\n                disabled={edit}\n              /> */}\n              {cronSyntax === '' ? (\n                <Typography className={classes.schedule}>\n                  {t('createWorkflow.verifyCommit.summary.schedulingNow')}\n                </Typography>\n              ) : (\n                <Typography className={classes.schedule}>\n                  {cronstrue.toString(cronSyntax)}\n                </Typography>\n              )}\n\n              <div className={classes.editButton1}>\n                <IconButton onClick={() => gotoStep(4)}>\n                  <EditIcon className={classes.editbtn} data-cy=\"edit\" />\n                </IconButton>\n              </div>\n            </div>\n          </div>\n          <div className={classes.summaryDiv}>\n            <div className={classes.innerSumDiv}>\n              <Typography className={classes.col1}>\n                {t('createWorkflow.verifyCommit.summary.adjustedWeights')}:\n              </Typography>\n            </div>\n            {weights.length === 0 ? (\n              <div>\n                <Typography className={classes.errorText}>\n                  <strong>{t('createWorkflow.verifyCommit.error')}</strong>\n                </Typography>\n              </div>\n            ) : (\n              <div className={classes.adjWeights}>\n                <div className={classes.progress} style={{ flexWrap: 'wrap' }}>\n                  {WorkflowTestData.map((Test) => (\n                    <AdjustedWeights\n                      key={Test.weight}\n                      testName={`${Test.experimentName} test`}\n                      testValue={Test.weight}\n                      spacing={false}\n                      icon={false}\n                    />\n                  ))}\n                </div>\n                {/* <div className={classes.editButton2}> */}\n                <ButtonOutline\n                  isDisabled={false}\n                  handleClick={() => gotoStep(3)}\n                  data-cy=\"testRunButton\"\n                >\n                  <Typography className={classes.buttonOutlineText}>\n                    {t('createWorkflow.verifyCommit.button.edit')}\n                  </Typography>\n                </ButtonOutline>\n                {/* </div> */}\n              </div>\n            )}\n          </div>\n          <div className={classes.summaryDiv}>\n            <div className={classes.innerSumDiv}>\n              <Typography className={classes.col1}>YAML:</Typography>\n            </div>\n            <div className={classes.yamlFlex}>\n              {weights.length === 0 ? (\n                <Typography>\n                  {' '}\n                  {t('createWorkflow.verifyCommit.errYaml')}{' '}\n                </Typography>\n              ) : (\n                <Typography>{yamlStatus}</Typography>\n              )}\n              <div className={classes.yamlButton}>\n                <ButtonFilled handleClick={handleOpen} isPrimary>\n                  <div>{t('createWorkflow.verifyCommit.button.viewYaml')}</div>\n                </ButtonFilled>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Divider />\n      </div>\n\n      <Unimodal\n        open={open}\n        handleClose={handleClose}\n        hasCloseBtn\n        isDark\n        textAlign=\"left\"\n      >\n        <YamlEditor\n          content={yaml}\n          filename={name}\n          yamlLink={link}\n          id={id}\n          description={description}\n          readOnly\n        />\n      </Unimodal>\n    </div>\n  );\n};\n\nexport default VerifyCommit;\n"]},"metadata":{},"sourceType":"module"}