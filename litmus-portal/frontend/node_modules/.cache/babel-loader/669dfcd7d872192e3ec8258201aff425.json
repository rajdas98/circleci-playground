{"ast":null,"code":"import _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseWorkflow/index.tsx\";\n\nimport { useQuery } from '@apollo/client';\nimport { IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography } from '@material-ui/core';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { WORKFLOW_DETAILS, WORKFLOW_EVENTS } from '../../../graphql';\nimport { sortAlphaAsc, sortAlphaDesc, sortNumAsc, sortNumDesc } from '../../../utils/sort';\nimport HeaderSection from './HeaderSection';\nimport useStyles from './styles';\nimport TableData from './TableData';\n\nvar BrowseWorkflow = function BrowseWorkflow() {\n  var _filteredData$length;\n\n  var classes = useStyles();\n  var selectedProjectID = useSelector(function (state) {\n    return state.userData.selectedProjectID;\n  }); // Query to get workflows\n\n  var _useQuery = useQuery(WORKFLOW_DETAILS, {\n    variables: {\n      projectID: selectedProjectID\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      subscribeToMore = _useQuery.subscribeToMore,\n      data = _useQuery.data,\n      error = _useQuery.error; // Using subscription to get realtime data\n\n\n  useEffect(function () {\n    subscribeToMore({\n      document: WORKFLOW_EVENTS,\n      variables: {\n        projectID: selectedProjectID\n      },\n      updateQuery: function updateQuery(prev, _ref) {\n        var subscriptionData = _ref.subscriptionData;\n        if (!subscriptionData.data) return prev;\n        var modifiedWorkflows = prev.getWorkFlowRuns.slice();\n        var newWorkflow = subscriptionData.data.workflowEventListener; // Updating the query data\n\n        var i = 0;\n\n        for (; i < modifiedWorkflows.length; i++) {\n          if (modifiedWorkflows[i].workflow_run_id === newWorkflow.workflow_run_id) {\n            modifiedWorkflows[i] = newWorkflow;\n            break;\n          }\n        }\n\n        if (i === modifiedWorkflows.length) modifiedWorkflows.unshift(newWorkflow);\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          getWorkFlowRuns: modifiedWorkflows\n        });\n      }\n    });\n  }, [data]); // States for filters\n\n  var _useState = useState({\n    search: '',\n    status: 'All',\n    cluster: 'All'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      filters = _useState2[0],\n      setFilters = _useState2[1]; // State for sorting\n\n\n  var _useState3 = useState({\n    lastRun: {\n      sort: true,\n      ascending: true\n    },\n    name: {\n      sort: false,\n      ascending: true\n    },\n    noOfSteps: {\n      sort: false,\n      ascending: false\n    }\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sortData = _useState4[0],\n      setSortData = _useState4[1]; // State for pagination\n\n\n  var _useState5 = useState({\n    pageNo: 0,\n    rowsPerPage: 5\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      paginationData = _useState6[0],\n      setPaginationData = _useState6[1];\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      popAnchorEl = _React$useState2[0],\n      setPopAnchorEl = _React$useState2[1];\n\n  var isOpen = Boolean(popAnchorEl);\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\n  var handlePopOverClose = function handlePopOverClose() {\n    setPopAnchorEl(null);\n    setOpen(false);\n  };\n\n  var handlePopOverClick = function handlePopOverClick(event) {\n    setPopAnchorEl(event.currentTarget);\n    setOpen(true);\n  }; // State for start date and end date\n\n\n  var _React$useState5 = React.useState({\n    dateValue: 'Select a period',\n    fromDate: new Date(0).toString(),\n    toDate: new Date(new Date().setHours(23, 59, 59)).toString()\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      dateRange = _React$useState6[0],\n      setDateRange = _React$useState6[1];\n\n  var getClusters = function getClusters(searchingData) {\n    var uniqueList = [];\n    searchingData.forEach(function (data) {\n      if (!uniqueList.includes(data.cluster_name)) {\n        uniqueList.push(data.cluster_name);\n      }\n    });\n    return uniqueList;\n  };\n\n  var filteredData = data === null || data === void 0 ? void 0 : data.getWorkFlowRuns.filter(function (dataRow) {\n    return dataRow.workflow_name.toLowerCase().includes(filters.search.toLowerCase());\n  }).filter(function (dataRow) {\n    return filters.status === 'All' ? true : JSON.parse(dataRow.execution_data).phase.includes(filters.status);\n  }).filter(function (dataRow) {\n    return filters.cluster === 'All' ? true : dataRow.cluster_name.toLowerCase().includes(filters.cluster.toLowerCase());\n  }).filter(function (dataRow) {\n    return dateRange.fromDate && dateRange.toDate === undefined ? true : parseInt(dataRow.last_updated, 10) * 1000 >= new Date(moment(dateRange.fromDate).format()).getTime() && parseInt(dataRow.last_updated, 10) * 1000 <= new Date(moment(dateRange.toDate).format()).getTime();\n  }).sort(function (a, b) {\n    // Sorting based on unique fields\n    if (sortData.name.sort) {\n      var x = a.workflow_name;\n      var y = b.workflow_name;\n      return sortData.name.ascending ? sortAlphaAsc(x, y) : sortAlphaDesc(x, y);\n    }\n\n    if (sortData.lastRun.sort) {\n      var _x = parseInt(a.last_updated, 10);\n\n      var _y = parseInt(b.last_updated, 10);\n\n      return sortData.lastRun.ascending ? sortNumAsc(_y, _x) : sortNumDesc(_y, _x);\n    }\n\n    return 0;\n  }).sort(function (a, b) {\n    // Sorting based on non-unique fields\n    if (sortData.noOfSteps.sort) {\n      var x = Object.keys(JSON.parse(a.execution_data).nodes).length;\n      var y = Object.keys(JSON.parse(b.execution_data).nodes).length;\n      return sortData.noOfSteps.ascending ? sortNumAsc(x, y) : sortNumDesc(x, y);\n    }\n\n    return 0;\n  }); // Functions passed as props in the headerSeaction\n\n  var changeSearch = function changeSearch(event) {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      search: event.target.value\n    }));\n    setPaginationData(_objectSpread(_objectSpread({}, paginationData), {}, {\n      pageNo: 0\n    }));\n  };\n\n  var changeStatus = function changeStatus(event) {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      status: event.target.value\n    }));\n    setPaginationData(_objectSpread(_objectSpread({}, paginationData), {}, {\n      pageNo: 0\n    }));\n  };\n\n  var changeCluster = function changeCluster(event) {\n    setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n      cluster: event.target.value\n    }));\n    setPaginationData(_objectSpread(_objectSpread({}, paginationData), {}, {\n      pageNo: 0\n    }));\n  }; // Function to set the date range for filtering\n\n\n  var dateChange = function dateChange(selectFromDate, selectToDate) {\n    setDateRange({\n      dateValue: \"\".concat(moment(selectFromDate).format('DD.MM.YYYY').toString(), \"-\").concat(moment(selectToDate).format('DD.MM.YYYY').toString()),\n      fromDate: new Date(new Date(selectFromDate).setHours(0, 0, 0)).toString(),\n      toDate: new Date(new Date(selectToDate).setHours(23, 59, 59)).toString()\n    });\n  }; // Function to validate execution_data JSON\n\n\n  var dataPerRow = function dataPerRow(dataRow) {\n    var exe_data;\n\n    try {\n      exe_data = JSON.parse(dataRow.execution_data);\n    } catch (error) {\n      console.error(error);\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n\n    return /*#__PURE__*/React.createElement(TableRow, {\n      \"data-cy\": \"browseWorkflowData\",\n      key: dataRow.workflow_run_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableData, {\n      data: dataRow,\n      exeData: exe_data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"Heading section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderSection, {\n    searchValue: filters.search,\n    changeSearch: changeSearch,\n    statusValue: filters.status,\n    changeStatus: changeStatus,\n    clusterValue: filters.cluster,\n    changeCluster: changeCluster,\n    popOverClick: handlePopOverClick,\n    popOverClose: handlePopOverClose,\n    isOpen: isOpen,\n    data: data,\n    getClusters: getClusters,\n    popAnchorEl: popAnchorEl,\n    isDateOpen: open,\n    displayDate: dateRange.dateValue,\n    selectDate: dateChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    \"data-cy\": \"browseWorkflowTable\",\n    className: classes.tableMain,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"simple table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    className: classes.tableHead,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.headerStatus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.workflowName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.paddedTypography,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 21\n    }\n  }, \"Workflow Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sortDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"sort name ascending\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setSortData(_objectSpread(_objectSpread({}, sortData), {}, {\n        name: {\n          sort: true,\n          ascending: true\n        },\n        lastRun: {\n          sort: false,\n          ascending: true\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ExpandLessIcon, {\n    fontSize: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"sort name descending\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setSortData(_objectSpread(_objectSpread({}, sortData), {}, {\n        name: {\n          sort: true,\n          ascending: false\n        },\n        lastRun: {\n          sort: false,\n          ascending: false\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n    fontSize: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.targetCluster,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 19\n    }\n  }, \"Target Cluster\")), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.headData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }\n  }, \"Reliability Details\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.headData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.paddedTypography,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 21\n    }\n  }, \"# of Steps\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sortDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"sort no of steps ascending\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setSortData(_objectSpread(_objectSpread({}, sortData), {}, {\n        noOfSteps: {\n          sort: true,\n          ascending: true\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ExpandLessIcon, {\n    fontSize: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"sort no of steps descending\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setSortData(_objectSpread(_objectSpread({}, sortData), {}, {\n        noOfSteps: {\n          sort: true,\n          ascending: false\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n    fontSize: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.headData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.paddedTypography,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 21\n    }\n  }, \"Last Run\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sortDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"sort last run ascending\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setSortData(_objectSpread(_objectSpread({}, sortData), {}, {\n        lastRun: {\n          sort: true,\n          ascending: true\n        },\n        name: {\n          sort: false,\n          ascending: true\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ExpandLessIcon, {\n    fontSize: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"sort last run descending\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setSortData(_objectSpread(_objectSpread({}, sortData), {}, {\n        lastRun: {\n          sort: true,\n          ascending: false\n        },\n        name: {\n          sort: false,\n          ascending: true\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n    fontSize: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 13\n    }\n  }, error ? /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"browseWorkflowError\",\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 21\n    }\n  }, \"Unable to fetch data\"))) : filteredData && filteredData.length ? filteredData.slice(paginationData.pageNo * paginationData.rowsPerPage, paginationData.pageNo * paginationData.rowsPerPage + paginationData.rowsPerPage).map(function (dataRow) {\n    return dataPerRow(dataRow);\n  }) : /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"browseWorkflowNoData\",\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 21\n    }\n  }, \"No records available\")))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: (_filteredData$length = filteredData === null || filteredData === void 0 ? void 0 : filteredData.length) !== null && _filteredData$length !== void 0 ? _filteredData$length : 0,\n    rowsPerPage: paginationData.rowsPerPage,\n    page: paginationData.pageNo,\n    onChangePage: function onChangePage(_, page) {\n      return setPaginationData(_objectSpread(_objectSpread({}, paginationData), {}, {\n        pageNo: page\n      }));\n    },\n    onChangeRowsPerPage: function onChangeRowsPerPage(event) {\n      return setPaginationData(_objectSpread(_objectSpread({}, paginationData), {}, {\n        pageNo: 0,\n        rowsPerPage: parseInt(event.target.value, 10)\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default BrowseWorkflow;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseWorkflow/index.tsx"],"names":["useQuery","IconButton","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Typography","ExpandLessIcon","ExpandMoreIcon","moment","React","useEffect","useState","useSelector","WORKFLOW_DETAILS","WORKFLOW_EVENTS","sortAlphaAsc","sortAlphaDesc","sortNumAsc","sortNumDesc","HeaderSection","useStyles","TableData","BrowseWorkflow","classes","selectedProjectID","state","userData","variables","projectID","fetchPolicy","subscribeToMore","data","error","document","updateQuery","prev","subscriptionData","modifiedWorkflows","getWorkFlowRuns","slice","newWorkflow","workflowEventListener","i","length","workflow_run_id","unshift","search","status","cluster","filters","setFilters","lastRun","sort","ascending","name","noOfSteps","sortData","setSortData","pageNo","rowsPerPage","paginationData","setPaginationData","popAnchorEl","setPopAnchorEl","isOpen","Boolean","open","setOpen","handlePopOverClose","handlePopOverClick","event","currentTarget","dateValue","fromDate","Date","toString","toDate","setHours","dateRange","setDateRange","getClusters","searchingData","uniqueList","forEach","includes","cluster_name","push","filteredData","filter","dataRow","workflow_name","toLowerCase","JSON","parse","execution_data","phase","undefined","parseInt","last_updated","format","getTime","a","b","x","y","Object","keys","nodes","changeSearch","target","value","changeStatus","changeCluster","dateChange","selectFromDate","selectToDate","dataPerRow","exe_data","console","root","tableMain","tableHead","headerStatus","workflowName","display","flexDirection","paddedTypography","sortDiv","targetCluster","headData","map","_","page"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { WORKFLOW_DETAILS, WORKFLOW_EVENTS } from '../../../graphql';\nimport {\n  ExecutionData,\n  Workflow,\n  WorkflowDataVars,\n  WorkflowRun,\n  WorkflowSubscription,\n} from '../../../models/graphql/workflowData';\nimport { RootState } from '../../../redux/reducers';\nimport {\n  sortAlphaAsc,\n  sortAlphaDesc,\n  sortNumAsc,\n  sortNumDesc,\n} from '../../../utils/sort';\nimport HeaderSection from './HeaderSection';\nimport useStyles from './styles';\nimport TableData from './TableData';\n\ninterface FilterOptions {\n  search: string;\n  status: string;\n  cluster: string;\n}\n\ninterface PaginationData {\n  pageNo: number;\n  rowsPerPage: number;\n}\n\ninterface SortData {\n  lastRun: { sort: boolean; ascending: boolean };\n  name: { sort: boolean; ascending: boolean };\n  noOfSteps: { sort: boolean; ascending: boolean };\n}\n\ninterface DateData {\n  dateValue: string;\n  fromDate: string;\n  toDate: string;\n}\n\nconst BrowseWorkflow = () => {\n  const classes = useStyles();\n  const selectedProjectID = useSelector(\n    (state: RootState) => state.userData.selectedProjectID\n  );\n\n  // Query to get workflows\n  const { subscribeToMore, data, error } = useQuery<Workflow, WorkflowDataVars>(\n    WORKFLOW_DETAILS,\n    {\n      variables: { projectID: selectedProjectID },\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  // Using subscription to get realtime data\n  useEffect(() => {\n    subscribeToMore<WorkflowSubscription>({\n      document: WORKFLOW_EVENTS,\n      variables: { projectID: selectedProjectID },\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n        const modifiedWorkflows = prev.getWorkFlowRuns.slice();\n        const newWorkflow = subscriptionData.data.workflowEventListener;\n\n        // Updating the query data\n        let i = 0;\n        for (; i < modifiedWorkflows.length; i++) {\n          if (\n            modifiedWorkflows[i].workflow_run_id === newWorkflow.workflow_run_id\n          ) {\n            modifiedWorkflows[i] = newWorkflow;\n            break;\n          }\n        }\n        if (i === modifiedWorkflows.length)\n          modifiedWorkflows.unshift(newWorkflow);\n\n        return { ...prev, getWorkFlowRuns: modifiedWorkflows };\n      },\n    });\n  }, [data]);\n\n  // States for filters\n  const [filters, setFilters] = useState<FilterOptions>({\n    search: '',\n    status: 'All',\n    cluster: 'All',\n  });\n\n  // State for sorting\n  const [sortData, setSortData] = useState<SortData>({\n    lastRun: { sort: true, ascending: true },\n    name: { sort: false, ascending: true },\n    noOfSteps: { sort: false, ascending: false },\n  });\n\n  // State for pagination\n  const [paginationData, setPaginationData] = useState<PaginationData>({\n    pageNo: 0,\n    rowsPerPage: 5,\n  });\n\n  const [popAnchorEl, setPopAnchorEl] = React.useState<null | HTMLElement>(\n    null\n  );\n  const isOpen = Boolean(popAnchorEl);\n\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const handlePopOverClose = () => {\n    setPopAnchorEl(null);\n    setOpen(false);\n  };\n  const handlePopOverClick = (event: React.MouseEvent<HTMLElement>) => {\n    setPopAnchorEl(event.currentTarget);\n    setOpen(true);\n  };\n\n  // State for start date and end date\n  const [dateRange, setDateRange] = React.useState<DateData>({\n    dateValue: 'Select a period',\n    fromDate: new Date(0).toString(),\n    toDate: new Date(new Date().setHours(23, 59, 59)).toString(),\n  });\n\n  const getClusters = (searchingData: WorkflowRun[]) => {\n    const uniqueList: string[] = [];\n    searchingData.forEach((data) => {\n      if (!uniqueList.includes(data.cluster_name)) {\n        uniqueList.push(data.cluster_name);\n      }\n    });\n    return uniqueList;\n  };\n\n  const filteredData = data?.getWorkFlowRuns\n    .filter((dataRow) =>\n      dataRow.workflow_name.toLowerCase().includes(filters.search.toLowerCase())\n    )\n    .filter((dataRow) =>\n      filters.status === 'All'\n        ? true\n        : (JSON.parse(dataRow.execution_data) as ExecutionData).phase.includes(\n            filters.status\n          )\n    )\n    .filter((dataRow) =>\n      filters.cluster === 'All'\n        ? true\n        : dataRow.cluster_name\n            .toLowerCase()\n            .includes(filters.cluster.toLowerCase())\n    )\n    .filter((dataRow) => {\n      return dateRange.fromDate && dateRange.toDate === undefined\n        ? true\n        : parseInt(dataRow.last_updated, 10) * 1000 >=\n            new Date(moment(dateRange.fromDate).format()).getTime() &&\n            parseInt(dataRow.last_updated, 10) * 1000 <=\n              new Date(moment(dateRange.toDate).format()).getTime();\n    })\n    .sort((a: WorkflowRun, b: WorkflowRun) => {\n      // Sorting based on unique fields\n      if (sortData.name.sort) {\n        const x = a.workflow_name;\n        const y = b.workflow_name;\n\n        return sortData.name.ascending\n          ? sortAlphaAsc(x, y)\n          : sortAlphaDesc(x, y);\n      }\n\n      if (sortData.lastRun.sort) {\n        const x = parseInt(a.last_updated, 10);\n        const y = parseInt(b.last_updated, 10);\n\n        return sortData.lastRun.ascending\n          ? sortNumAsc(y, x)\n          : sortNumDesc(y, x);\n      }\n\n      return 0;\n    })\n    .sort((a: WorkflowRun, b: WorkflowRun) => {\n      // Sorting based on non-unique fields\n      if (sortData.noOfSteps.sort) {\n        const x = Object.keys(\n          (JSON.parse(a.execution_data) as ExecutionData).nodes\n        ).length;\n\n        const y = Object.keys(\n          (JSON.parse(b.execution_data) as ExecutionData).nodes\n        ).length;\n\n        return sortData.noOfSteps.ascending\n          ? sortNumAsc(x, y)\n          : sortNumDesc(x, y);\n      }\n\n      return 0;\n    });\n\n  // Functions passed as props in the headerSeaction\n  const changeSearch = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setFilters({ ...filters, search: event.target.value as string });\n    setPaginationData({ ...paginationData, pageNo: 0 });\n  };\n\n  const changeStatus = (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setFilters({ ...filters, status: event.target.value as string });\n    setPaginationData({ ...paginationData, pageNo: 0 });\n  };\n\n  const changeCluster = (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>\n  ) => {\n    setFilters({ ...filters, cluster: event.target.value as string });\n    setPaginationData({ ...paginationData, pageNo: 0 });\n  };\n\n  // Function to set the date range for filtering\n  const dateChange = (selectFromDate: string, selectToDate: string) => {\n    setDateRange({\n      dateValue: `${moment(selectFromDate)\n        .format('DD.MM.YYYY')\n        .toString()}-${moment(selectToDate).format('DD.MM.YYYY').toString()}`,\n      fromDate: new Date(new Date(selectFromDate).setHours(0, 0, 0)).toString(),\n      toDate: new Date(new Date(selectToDate).setHours(23, 59, 59)).toString(),\n    });\n  };\n  // Function to validate execution_data JSON\n  const dataPerRow = (dataRow: WorkflowRun) => {\n    let exe_data;\n    try {\n      exe_data = JSON.parse(dataRow.execution_data);\n    } catch (error) {\n      console.error(error);\n      return <></>;\n    }\n    return (\n      <TableRow data-cy=\"browseWorkflowData\" key={dataRow.workflow_run_id}>\n        <TableData data={dataRow} exeData={exe_data} />\n      </TableRow>\n    );\n  };\n\n  return (\n    <div>\n      <section className=\"Heading section\">\n        {/* Header Section */}\n        <HeaderSection\n          searchValue={filters.search}\n          changeSearch={changeSearch}\n          statusValue={filters.status}\n          changeStatus={changeStatus}\n          clusterValue={filters.cluster}\n          changeCluster={changeCluster}\n          popOverClick={handlePopOverClick}\n          popOverClose={handlePopOverClose}\n          isOpen={isOpen}\n          data={data}\n          getClusters={getClusters}\n          popAnchorEl={popAnchorEl}\n          isDateOpen={open}\n          displayDate={dateRange.dateValue}\n          selectDate={dateChange}\n        />\n      </section>\n      <Paper className={classes.root}>\n        <TableContainer\n          data-cy=\"browseWorkflowTable\"\n          className={classes.tableMain}\n        >\n          <Table stickyHeader aria-label=\"simple table\">\n            <TableHead className={classes.tableHead}>\n              <TableRow>\n                {/* Status */}\n                <TableCell className={classes.headerStatus}>Status</TableCell>\n\n                {/* Workflow Name */}\n                <TableCell className={classes.workflowName}>\n                  <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    <Typography className={classes.paddedTypography}>\n                      Workflow Name\n                    </Typography>\n                    <div className={classes.sortDiv}>\n                      <IconButton\n                        aria-label=\"sort name ascending\"\n                        size=\"small\"\n                        onClick={() =>\n                          setSortData({\n                            ...sortData,\n                            name: { sort: true, ascending: true },\n                            lastRun: { sort: false, ascending: true },\n                          })\n                        }\n                      >\n                        <ExpandLessIcon fontSize=\"inherit\" />\n                      </IconButton>\n                      <IconButton\n                        aria-label=\"sort name descending\"\n                        size=\"small\"\n                        onClick={() =>\n                          setSortData({\n                            ...sortData,\n                            name: { sort: true, ascending: false },\n                            lastRun: { sort: false, ascending: false },\n                          })\n                        }\n                      >\n                        <ExpandMoreIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    </div>\n                  </div>\n                </TableCell>\n\n                {/* Target Cluster */}\n                <TableCell>\n                  <Typography className={classes.targetCluster}>\n                    Target Cluster\n                  </Typography>\n                </TableCell>\n\n                {/* Reliability */}\n                <TableCell className={classes.headData}>\n                  Reliability Details\n                </TableCell>\n\n                {/* No of Experiments */}\n                <TableCell className={classes.headData}>\n                  <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    <Typography className={classes.paddedTypography}>\n                      # of Steps\n                    </Typography>\n                    <div className={classes.sortDiv}>\n                      <IconButton\n                        aria-label=\"sort no of steps ascending\"\n                        size=\"small\"\n                        onClick={() =>\n                          setSortData({\n                            ...sortData,\n                            noOfSteps: { sort: true, ascending: true },\n                          })\n                        }\n                      >\n                        <ExpandLessIcon fontSize=\"inherit\" />\n                      </IconButton>\n                      <IconButton\n                        aria-label=\"sort no of steps descending\"\n                        size=\"small\"\n                        onClick={() =>\n                          setSortData({\n                            ...sortData,\n                            noOfSteps: { sort: true, ascending: false },\n                          })\n                        }\n                      >\n                        <ExpandMoreIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    </div>\n                  </div>\n                </TableCell>\n\n                {/* Last Run */}\n                <TableCell className={classes.headData}>\n                  <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    <Typography className={classes.paddedTypography}>\n                      Last Run\n                    </Typography>\n                    <div className={classes.sortDiv}>\n                      <IconButton\n                        aria-label=\"sort last run ascending\"\n                        size=\"small\"\n                        onClick={() =>\n                          setSortData({\n                            ...sortData,\n                            lastRun: { sort: true, ascending: true },\n                            name: { sort: false, ascending: true },\n                          })\n                        }\n                      >\n                        <ExpandLessIcon fontSize=\"inherit\" />\n                      </IconButton>\n                      <IconButton\n                        aria-label=\"sort last run descending\"\n                        size=\"small\"\n                        onClick={() =>\n                          setSortData({\n                            ...sortData,\n                            lastRun: { sort: true, ascending: false },\n                            name: { sort: false, ascending: true },\n                          })\n                        }\n                      >\n                        <ExpandMoreIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    </div>\n                  </div>\n                </TableCell>\n\n                {/* Menu Cell */}\n                <TableCell />\n              </TableRow>\n            </TableHead>\n\n            {/* Body */}\n            <TableBody>\n              {error ? (\n                <TableRow>\n                  <TableCell colSpan={7}>\n                    <Typography data-cy=\"browseWorkflowError\" align=\"center\">\n                      Unable to fetch data\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ) : filteredData && filteredData.length ? (\n                filteredData\n                  .slice(\n                    paginationData.pageNo * paginationData.rowsPerPage,\n                    paginationData.pageNo * paginationData.rowsPerPage +\n                      paginationData.rowsPerPage\n                  )\n                  .map((dataRow) => dataPerRow(dataRow))\n              ) : (\n                <TableRow>\n                  <TableCell colSpan={7}>\n                    <Typography data-cy=\"browseWorkflowNoData\" align=\"center\">\n                      No records available\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        {/* Pagination */}\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={filteredData?.length ?? 0}\n          rowsPerPage={paginationData.rowsPerPage}\n          page={paginationData.pageNo}\n          onChangePage={(_, page) =>\n            setPaginationData({ ...paginationData, pageNo: page })\n          }\n          onChangeRowsPerPage={(event) =>\n            setPaginationData({\n              ...paginationData,\n              pageNo: 0,\n              rowsPerPage: parseInt(event.target.value, 10),\n            })\n          }\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default BrowseWorkflow;\n"]},"metadata":{},"sourceType":"module"}