{"ast":null,"code":"/* eslint-disable import/prefer-default-export */\nimport config from '../../config';\nimport { AnalyticsActions } from '../../models/redux/analytics';\nexport var loadCommunityAnalytics = function loadCommunityAnalytics() {\n  return function (dispatch) {\n    dispatch({\n      type: AnalyticsActions.COMMUNITY_ANALYTICS_LOADING,\n      payload: true\n    });\n    fetch(\"\".concat(config.analytics.url)).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      dispatch({\n        type: AnalyticsActions.COMMUNITY_ANALYTICS_SUCCESS,\n        payload: data\n      });\n    }).catch(function () {\n      dispatch({\n        type: AnalyticsActions.COMMUNITY_ANALYTICS_ERROR,\n        payload: true\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/redux/actions/analytics.ts"],"names":["config","AnalyticsActions","loadCommunityAnalytics","dispatch","type","COMMUNITY_ANALYTICS_LOADING","payload","fetch","analytics","url","then","response","json","data","COMMUNITY_ANALYTICS_SUCCESS","catch","COMMUNITY_ANALYTICS_ERROR"],"mappings":"AAAA;AACA,OAAOA,MAAP,MAAmB,cAAnB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,SAAM,UAACC,QAAD,EAAwB;AAClEA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,gBAAgB,CAACI,2BADhB;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAIAC,IAAAA,KAAK,WAAIP,MAAM,CAACQ,SAAP,CAAiBC,GAArB,EAAL,CACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAIQ,UAACG,IAAD,EAAU;AACdV,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEH,gBAAgB,CAACa,2BADhB;AAEPR,QAAAA,OAAO,EAAEO;AAFF,OAAD,CAAR;AAID,KATH,EAUGE,KAVH,CAUS,YAAM;AACXZ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEH,gBAAgB,CAACe,yBADhB;AAEPV,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID,KAfH;AAgBD,GArBqC;AAAA,CAA/B","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport config from '../../config';\nimport { AnalyticsActions } from '../../models/redux/analytics';\n\nexport const loadCommunityAnalytics = () => (dispatch: Function) => {\n  dispatch({\n    type: AnalyticsActions.COMMUNITY_ANALYTICS_LOADING,\n    payload: true,\n  });\n  fetch(`${config.analytics.url}`)\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      dispatch({\n        type: AnalyticsActions.COMMUNITY_ANALYTICS_SUCCESS,\n        payload: data,\n      });\n    })\n    .catch(() => {\n      dispatch({\n        type: AnalyticsActions.COMMUNITY_ANALYTICS_ERROR,\n        payload: true,\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}