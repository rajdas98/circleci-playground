{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar Color = require('../../components/color');\n\nvar handleOHLC = require('../ohlc/ohlc_defaults');\n\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  var len = handleOHLC(traceIn, traceOut, coerce, layout);\n\n  if (!len) {\n    traceOut.visible = false;\n    return;\n  }\n\n  coerce('line.width');\n  handleDirection(traceIn, traceOut, coerce, 'increasing');\n  handleDirection(traceIn, traceOut, coerce, 'decreasing');\n  coerce('text');\n  coerce('hovertext');\n  coerce('whiskerwidth');\n  layout._requestRangeslider[traceOut.xaxis] = true;\n};\n\nfunction handleDirection(traceIn, traceOut, coerce, direction) {\n  var lineColor = coerce(direction + '.line.color');\n  coerce(direction + '.line.width', traceOut.line.width);\n  coerce(direction + '.fillcolor', Color.addOpacity(lineColor, 0.5));\n}","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/plotly.js/src/traces/candlestick/defaults.js"],"names":["Lib","require","Color","handleOHLC","attributes","module","exports","supplyDefaults","traceIn","traceOut","defaultColor","layout","coerce","attr","dflt","len","visible","handleDirection","_requestRangeslider","xaxis","direction","lineColor","line","width","addOpacity"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,wBAAD,CAAnB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,uBAAD,CAAxB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,cAAD,CAAxB;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,YAA3C,EAAyDC,MAAzD,EAAiE;AAC9E,WAASC,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AACxB,WAAOd,GAAG,CAACY,MAAJ,CAAWJ,OAAX,EAAoBC,QAApB,EAA8BL,UAA9B,EAA0CS,IAA1C,EAAgDC,IAAhD,CAAP;AACH;;AAED,MAAIC,GAAG,GAAGZ,UAAU,CAACK,OAAD,EAAUC,QAAV,EAAoBG,MAApB,EAA4BD,MAA5B,CAApB;;AACA,MAAG,CAACI,GAAJ,EAAS;AACLN,IAAAA,QAAQ,CAACO,OAAT,GAAmB,KAAnB;AACA;AACH;;AAEDJ,EAAAA,MAAM,CAAC,YAAD,CAAN;AAEAK,EAAAA,eAAe,CAACT,OAAD,EAAUC,QAAV,EAAoBG,MAApB,EAA4B,YAA5B,CAAf;AACAK,EAAAA,eAAe,CAACT,OAAD,EAAUC,QAAV,EAAoBG,MAApB,EAA4B,YAA5B,CAAf;AAEAA,EAAAA,MAAM,CAAC,MAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,WAAD,CAAN;AACAA,EAAAA,MAAM,CAAC,cAAD,CAAN;AAEAD,EAAAA,MAAM,CAACO,mBAAP,CAA2BT,QAAQ,CAACU,KAApC,IAA6C,IAA7C;AACH,CArBD;;AAuBA,SAASF,eAAT,CAAyBT,OAAzB,EAAkCC,QAAlC,EAA4CG,MAA5C,EAAoDQ,SAApD,EAA+D;AAC3D,MAAIC,SAAS,GAAGT,MAAM,CAACQ,SAAS,GAAG,aAAb,CAAtB;AACAR,EAAAA,MAAM,CAACQ,SAAS,GAAG,aAAb,EAA4BX,QAAQ,CAACa,IAAT,CAAcC,KAA1C,CAAN;AACAX,EAAAA,MAAM,CAACQ,SAAS,GAAG,YAAb,EAA2BlB,KAAK,CAACsB,UAAN,CAAiBH,SAAjB,EAA4B,GAA5B,CAA3B,CAAN;AACH","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\nvar handleOHLC = require('../ohlc/ohlc_defaults');\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    var len = handleOHLC(traceIn, traceOut, coerce, layout);\n    if(!len) {\n        traceOut.visible = false;\n        return;\n    }\n\n    coerce('line.width');\n\n    handleDirection(traceIn, traceOut, coerce, 'increasing');\n    handleDirection(traceIn, traceOut, coerce, 'decreasing');\n\n    coerce('text');\n    coerce('hovertext');\n    coerce('whiskerwidth');\n\n    layout._requestRangeslider[traceOut.xaxis] = true;\n};\n\nfunction handleDirection(traceIn, traceOut, coerce, direction) {\n    var lineColor = coerce(direction + '.line.color');\n    coerce(direction + '.line.width', traceOut.line.width);\n    coerce(direction + '.fillcolor', Color.addOpacity(lineColor, 0.5));\n}\n"]},"metadata":{},"sourceType":"script"}