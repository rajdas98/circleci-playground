{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/PredifinedWorkflows/index.tsx\";\n\nimport React from 'react';\nimport * as WorkflowActions from '../../redux/actions/workflow';\nimport useActions from '../../redux/actions';\nimport { history } from '../../redux/configureStore';\nimport CustomCard from '../WorkflowCard';\nimport CustomWorkflowCard from '../WorkflowCard/CustomWorkflow';\nimport useStyles from './styles';\n\nvar PredifinedWorkflows = function PredifinedWorkflows(_ref) {\n  var workflows = _ref.workflows,\n      callbackOnSelectWorkflow = _ref.callbackOnSelectWorkflow,\n      isCustomWorkflowVisible = _ref.isCustomWorkflowVisible;\n  var workflowAction = useActions(WorkflowActions);\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, workflows && workflows.map(function (w, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: w.workflowID,\n      \"data-cy\": \"templatesCard\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CustomCard, {\n      key: w.workflowID,\n      title: w.title,\n      urlToIcon: w.urlToIcon,\n      provider: w.provider,\n      chaosWkfCRDLink: w.chaosWkfCRDLink,\n      selectedID: w.workflowID,\n      handleClick: function handleClick() {\n        return callbackOnSelectWorkflow(index);\n      },\n      description: w.description,\n      totalRuns: w.totalRuns,\n      gitLink: w.gitLink,\n      workflowID: w.workflowID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }));\n  }), isCustomWorkflowVisible ? /*#__PURE__*/React.createElement(CustomWorkflowCard, {\n    handleClick: function handleClick() {\n      workflowAction.setWorkflowDetails({\n        name: \"custom-chaos-workflow-\".concat(Math.round(new Date().getTime() / 1000)),\n        description: 'Custom Chaos Workflow',\n        isCustomWorkflow: true,\n        namespace: 'litmus',\n        customWorkflows: []\n      });\n      history.push('/create-workflow/custom');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nexport default PredifinedWorkflows;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/PredifinedWorkflows/index.tsx"],"names":["React","WorkflowActions","useActions","history","CustomCard","CustomWorkflowCard","useStyles","PredifinedWorkflows","workflows","callbackOnSelectWorkflow","isCustomWorkflowVisible","workflowAction","classes","root","map","w","index","workflowID","title","urlToIcon","provider","chaosWkfCRDLink","description","totalRuns","gitLink","setWorkflowDetails","name","Math","round","Date","getTime","isCustomWorkflow","namespace","customWorkflows","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,eAAZ,MAAiC,8BAAjC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAQA,IAAMC,mBAAuD,GAAG,SAA1DA,mBAA0D,OAI1D;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,wBAEI,QAFJA,wBAEI;AAAA,MADJC,uBACI,QADJA,uBACI;AACJ,MAAMC,cAAc,GAAGT,UAAU,CAACD,eAAD,CAAjC;AACA,MAAMW,OAAO,GAAGN,SAAS,EAAzB;AACA,sBACE;AAAK,IAAA,SAAS,EAAEM,OAAO,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,SAAS,IACRA,SAAS,CAACM,GAAV,CAAc,UAACC,CAAD,EAA4BC,KAA5B;AAAA,wBACZ;AAAK,MAAA,GAAG,EAAED,CAAC,CAACE,UAAZ;AAAwB,iBAAQ,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEF,CAAC,CAACE,UADT;AAEE,MAAA,KAAK,EAAEF,CAAC,CAACG,KAFX;AAGE,MAAA,SAAS,EAAEH,CAAC,CAACI,SAHf;AAIE,MAAA,QAAQ,EAAEJ,CAAC,CAACK,QAJd;AAKE,MAAA,eAAe,EAAEL,CAAC,CAACM,eALrB;AAME,MAAA,UAAU,EAAEN,CAAC,CAACE,UANhB;AAOE,MAAA,WAAW,EAAE;AAAA,eAAMR,wBAAwB,CAACO,KAAD,CAA9B;AAAA,OAPf;AAQE,MAAA,WAAW,EAAED,CAAC,CAACO,WARjB;AASE,MAAA,SAAS,EAAEP,CAAC,CAACQ,SATf;AAUE,MAAA,OAAO,EAAER,CAAC,CAACS,OAVb;AAWE,MAAA,UAAU,EAAET,CAAC,CAACE,UAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADY;AAAA,GAAd,CAFJ,EAmBGP,uBAAuB,gBACtB,oBAAC,kBAAD;AACE,IAAA,WAAW,EAAE,uBAAM;AACjBC,MAAAA,cAAc,CAACc,kBAAf,CAAkC;AAChCC,QAAAA,IAAI,kCAA2BC,IAAI,CAACC,KAAL,CAC7B,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IADM,CAA3B,CAD4B;AAIhCR,QAAAA,WAAW,EAAE,uBAJmB;AAKhCS,QAAAA,gBAAgB,EAAE,IALc;AAMhCC,QAAAA,SAAS,EAAE,QANqB;AAOhCC,QAAAA,eAAe,EAAE;AAPe,OAAlC;AASA9B,MAAAA,OAAO,CAAC+B,IAAR,CAAa,yBAAb;AACD,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADsB,GAepB,IAlCN,CADF;AAsCD,CA7CD;;AA+CA,eAAe3B,mBAAf","sourcesContent":["import React from 'react';\nimport { preDefinedWorkflowData } from '../../models/predefinedWorkflow';\nimport * as WorkflowActions from '../../redux/actions/workflow';\nimport useActions from '../../redux/actions';\nimport { history } from '../../redux/configureStore';\nimport CustomCard from '../WorkflowCard';\nimport CustomWorkflowCard from '../WorkflowCard/CustomWorkflow';\nimport useStyles from './styles';\n\ninterface PredifinedWorkflowsProps {\n  workflows: preDefinedWorkflowData[];\n  callbackOnSelectWorkflow: (index: number) => void;\n  isCustomWorkflowVisible: boolean;\n}\n\nconst PredifinedWorkflows: React.FC<PredifinedWorkflowsProps> = ({\n  workflows,\n  callbackOnSelectWorkflow,\n  isCustomWorkflowVisible,\n}) => {\n  const workflowAction = useActions(WorkflowActions);\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {workflows &&\n        workflows.map((w: preDefinedWorkflowData, index: number) => (\n          <div key={w.workflowID} data-cy=\"templatesCard\">\n            <CustomCard\n              key={w.workflowID}\n              title={w.title}\n              urlToIcon={w.urlToIcon}\n              provider={w.provider}\n              chaosWkfCRDLink={w.chaosWkfCRDLink}\n              selectedID={w.workflowID}\n              handleClick={() => callbackOnSelectWorkflow(index)}\n              description={w.description}\n              totalRuns={w.totalRuns}\n              gitLink={w.gitLink}\n              workflowID={w.workflowID}\n            />\n          </div>\n        ))}\n      {isCustomWorkflowVisible ? (\n        <CustomWorkflowCard\n          handleClick={() => {\n            workflowAction.setWorkflowDetails({\n              name: `custom-chaos-workflow-${Math.round(\n                new Date().getTime() / 1000\n              )}`,\n              description: 'Custom Chaos Workflow',\n              isCustomWorkflow: true,\n              namespace: 'litmus',\n              customWorkflows: [],\n            });\n            history.push('/create-workflow/custom');\n          }}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default PredifinedWorkflows;\n"]},"metadata":{},"sourceType":"module"}