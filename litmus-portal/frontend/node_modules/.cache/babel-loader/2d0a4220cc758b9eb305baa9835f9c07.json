{"ast":null,"code":"import _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/pages/CreateCustomWorkflow/index.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport CreateWorkflow from '../../views/CreateWorkflow/CustomWorkflow/CreateWorkflow';\nimport ScheduleCustomWorkflow from '../../views/CreateWorkflow/CustomWorkflow/ScheduleWorkflow';\nimport TuneCustomWorkflow from '../../views/CreateWorkflow/CustomWorkflow/TuneWorkflow';\nimport ExperimentEditor from '../../views/CreateWorkflow/CustomWorkflow/YamlEditor';\nimport useStyles from './styles';\n\nfunction getStepContent(stepIndex, gotoStep) {\n  switch (stepIndex) {\n    case 0:\n      return /*#__PURE__*/React.createElement(CreateWorkflow, {\n        gotoStep: gotoStep,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }\n      });\n\n    case 1:\n      return /*#__PURE__*/React.createElement(TuneCustomWorkflow, {\n        gotoStep: gotoStep,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }\n      });\n\n    case 2:\n      return /*#__PURE__*/React.createElement(ScheduleCustomWorkflow, {\n        gotoStep: gotoStep,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 14\n        }\n      });\n\n    case 3:\n      return /*#__PURE__*/React.createElement(ExperimentEditor, {\n        gotoStep: gotoStep,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 14\n        }\n      });\n\n    default:\n      return /*#__PURE__*/React.createElement(CreateWorkflow, {\n        gotoStep: gotoStep,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 14\n        }\n      });\n  }\n}\n\nvar CreateCustomWorkflow = function CreateCustomWorkflow() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeStep = _React$useState2[0],\n      setActiveStep = _React$useState2[1];\n\n  var gotoStep = function gotoStep(page) {\n    setActiveStep(page);\n  };\n\n  return /*#__PURE__*/React.createElement(Scaffold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, getStepContent(activeStep, gotoStep)));\n};\n\nexport default CreateCustomWorkflow;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/pages/CreateCustomWorkflow/index.tsx"],"names":["React","Scaffold","CreateWorkflow","ScheduleCustomWorkflow","TuneCustomWorkflow","ExperimentEditor","useStyles","getStepContent","stepIndex","gotoStep","CreateCustomWorkflow","classes","useState","activeStep","setActiveStep","page","root"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,cAAP,MAA2B,0DAA3B;AACA,OAAOC,sBAAP,MAAmC,4DAAnC;AACA,OAAOC,kBAAP,MAA+B,wDAA/B;AACA,OAAOC,gBAAP,MAA6B,sDAA7B;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,SAASC,cAAT,CACEC,SADF,EAEEC,QAFF,EAGmB;AACjB,UAAQD,SAAR;AACE,SAAK,CAAL;AACE,0BAAO,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACF,SAAK,CAAL;AACE,0BAAO,oBAAC,kBAAD;AAAoB,QAAA,QAAQ,EAAEA,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACF,SAAK,CAAL;AACE,0BAAO,oBAAC,sBAAD;AAAwB,QAAA,QAAQ,EAAEA,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACF,SAAK,CAAL;AACE,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEA,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACF;AACE,0BAAO,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEA,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAVJ;AAYD;;AACD,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjC,MAAMC,OAAO,GAAGL,SAAS,EAAzB;;AADiC,wBAEGN,KAAK,CAACY,QAAN,CAAe,CAAf,CAFH;AAAA;AAAA,MAE1BC,UAF0B;AAAA,MAEdC,aAFc;;AAGjC,MAAML,QAAQ,GAAG,SAAXA,QAAW,CAACM,IAAD,EAAkB;AACjCD,IAAAA,aAAa,CAACC,IAAD,CAAb;AACD,GAFD;;AAGA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACK,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BT,cAAc,CAACM,UAAD,EAAaJ,QAAb,CAA7C,CADF,CADF;AAKD,CAXD;;AAYA,eAAeC,oBAAf","sourcesContent":["import React from 'react';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport CreateWorkflow from '../../views/CreateWorkflow/CustomWorkflow/CreateWorkflow';\nimport ScheduleCustomWorkflow from '../../views/CreateWorkflow/CustomWorkflow/ScheduleWorkflow';\nimport TuneCustomWorkflow from '../../views/CreateWorkflow/CustomWorkflow/TuneWorkflow';\nimport ExperimentEditor from '../../views/CreateWorkflow/CustomWorkflow/YamlEditor';\nimport useStyles from './styles';\n\nfunction getStepContent(\n  stepIndex: number,\n  gotoStep: (page: number) => void\n): React.ReactNode {\n  switch (stepIndex) {\n    case 0:\n      return <CreateWorkflow gotoStep={gotoStep} />;\n    case 1:\n      return <TuneCustomWorkflow gotoStep={gotoStep} />;\n    case 2:\n      return <ScheduleCustomWorkflow gotoStep={gotoStep} />;\n    case 3:\n      return <ExperimentEditor gotoStep={gotoStep} />;\n    default:\n      return <CreateWorkflow gotoStep={gotoStep} />;\n  }\n}\nconst CreateCustomWorkflow = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const gotoStep = (page: number) => {\n    setActiveStep(page);\n  };\n  return (\n    <Scaffold>\n      <div className={classes.root}>{getStepContent(activeStep, gotoStep)}</div>\n    </Scaffold>\n  );\n};\nexport default CreateCustomWorkflow;\n"]},"metadata":{},"sourceType":"module"}