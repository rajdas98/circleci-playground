{"ast":null,"code":"import _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/CustomStatus/Status.tsx\";\n\nimport { Typography } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport useStyles from './styles';\n\nvar CustomStatus = function CustomStatus(_ref) {\n  var status = _ref.status;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(' '),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      label = _React$useState2[0],\n      setLabel = _React$useState2[1];\n\n  useEffect(function () {\n    if (status === 'Succeeded') {\n      return setLabel(classes.completed);\n    }\n\n    if (status === 'Running' || status === 'Pending') {\n      return setLabel(classes.running);\n    }\n\n    return setLabel(classes.failed);\n  }, [status]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.statusFont,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, status)));\n};\n\nexport default CustomStatus;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/CustomStatus/Status.tsx"],"names":["Typography","React","useEffect","useStyles","CustomStatus","status","classes","useState","label","setLabel","completed","running","failed","statusFont"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAMA,IAAMC,YAAmC,GAAG,SAAtCA,YAAsC,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC1D,MAAMC,OAAO,GAAGH,SAAS,EAAzB;;AAD0D,wBAEhCF,KAAK,CAACM,QAAN,CAAe,GAAf,CAFgC;AAAA;AAAA,MAEnDC,KAFmD;AAAA,MAE5CC,QAF4C;;AAG1DP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIG,MAAM,KAAK,WAAf,EAA4B;AAC1B,aAAOI,QAAQ,CAACH,OAAO,CAACI,SAAT,CAAf;AACD;;AACD,QAAIL,MAAM,KAAK,SAAX,IAAwBA,MAAM,KAAK,SAAvC,EAAkD;AAChD,aAAOI,QAAQ,CAACH,OAAO,CAACK,OAAT,CAAf;AACD;;AACD,WAAOF,QAAQ,CAACH,OAAO,CAACM,MAAT,CAAf;AACD,GARQ,EAQN,CAACP,MAAD,CARM,CAAT;AAUA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAEG,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,OAAO,CAACO,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4CR,MAA5C,CADF,CADF,CADF;AAOD,CApBD;;AAqBA,eAAeD,YAAf","sourcesContent":["import { Typography } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport useStyles from './styles';\n\ninterface StatusProps {\n  status: string;\n}\n\nconst CustomStatus: React.FC<StatusProps> = ({ status }) => {\n  const classes = useStyles();\n  const [label, setLabel] = React.useState(' ');\n  useEffect(() => {\n    if (status === 'Succeeded') {\n      return setLabel(classes.completed);\n    }\n    if (status === 'Running' || status === 'Pending') {\n      return setLabel(classes.running);\n    }\n    return setLabel(classes.failed);\n  }, [status]);\n\n  return (\n    <>\n      <div className={label}>\n        <Typography className={classes.statusFont}>{status}</Typography>\n      </div>\n    </>\n  );\n};\nexport default CustomStatus;\n"]},"metadata":{},"sourceType":"module"}