{"ast":null,"code":"import _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/pages/SchedulePage/index.tsx\";\n\nimport { Divider, FormControl, FormControlLabel, Radio, RadioGroup, Select, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ButtonFilled from '../../components/Button/ButtonFilled';\nimport ButtonOutline from '../../components/Button/ButtonOutline';\nimport CustomDate from '../../components/DateTime/CustomDate/index';\nimport CustomTime from '../../components/DateTime/CustomTime/index';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport SetTime from './SetTime/index';\nimport useStyles from './styles';\n\nvar SchedulePage = function SchedulePage() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var start = 0;\n  var end = 10;\n  var interval = 2;\n  var classes = useStyles(); // controls radio buttons\n\n  var _React$useState = React.useState('now'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n  }; // controls inner radio buttons of recurring schedule\n\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      valueDef = _React$useState4[0],\n      setValueDef = _React$useState4[1];\n\n  var handleChangeInstance = function handleChangeInstance(event) {\n    setValueDef(event.target.value);\n  }; // sets weekdays\n\n\n  var _React$useState5 = React.useState('Monday'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      days = _React$useState6[0],\n      setDays = _React$useState6[1]; // sets dates\n\n\n  var _React$useState7 = React.useState(1),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      dates = _React$useState8[0],\n      setDates = _React$useState8[1]; // stores dates in an array\n\n\n  var names = [1];\n\n  for (var i = 1; i <= 30; i += 1) {\n    names[i] = i + 1;\n  }\n\n  var weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\n  var _React$useState9 = React.useState(new Date(Date.now())),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      selectedDate = _React$useState10[0],\n      setSelectedDate = _React$useState10[1];\n\n  var handleDateChange = function handleDateChange(date) {\n    setSelectedDate(date);\n  };\n\n  return /*#__PURE__*/React.createElement(Scaffold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rootContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.mainHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, t('schedule.heading')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headerDesc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, t('schedule.headingDesc')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scSegments,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, t('schedule.headingText'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.schBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"left\",\n    className: classes.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, t('schedule.description')))), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/calendar.svg\",\n    alt: \"calendar\",\n    className: classes.calIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scFormControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"schedule\",\n    name: \"schedule\",\n    value: value,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"now\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 30\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      className: classes.radioText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 23\n      }\n    }, t('schedule.scheduleNow')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"afterSometime\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 30\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      className: classes.radioText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 23\n      }\n    }, t('schedule.scheduleAfter')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }), value === 'afterSometime' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.schLater,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.captionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 23\n    }\n  }, t('schedule.scheduleAfterSometime')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.wtDateTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    className: classes.captionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, t('schedule.after')), /*#__PURE__*/React.createElement(SetTime, {\n    start: start,\n    end: end,\n    interval: interval,\n    label: \"Days\",\n    type: \"days\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CustomTime, {\n    handleDateChange: handleDateChange,\n    value: selectedDate,\n    ampm: true,\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"specificTime\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 30\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      className: classes.radioText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 23\n      }\n    }, t('schedule.scheduleSpecificTime')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }), value === 'specificTime' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.schLater,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.captionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 23\n    }\n  }, t('schedule.scheduleFuture')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerSpecific,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CustomDate, {\n    selectedDate: selectedDate,\n    handleDateChange: handleDateChange,\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CustomTime, {\n    handleDateChange: handleDateChange,\n    value: selectedDate,\n    ampm: true,\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"recurringScedule\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 30\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      className: classes.radioText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 23\n      }\n    }, t('schedule.scheduleRecurring')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }), value === 'recurringScedule' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.schLater,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.captionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 23\n    }\n  }, t('schedule.scheduleRecurringTime')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerRecurring,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"instanceDef\",\n    name: \"instanceDef\",\n    value: valueDef,\n    onChange: handleChangeInstance,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"everyHr\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 40\n      }\n    }),\n    label: \"Every Hour\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }), valueDef === 'everyHr' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scRandom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scRandsub1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 35\n    }\n  }, t('schedule.At')), /*#__PURE__*/React.createElement(SetTime, {\n    start: start,\n    end: end,\n    interval: interval,\n    label: \"th\",\n    type: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 35\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"everyDay\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 40\n      }\n    }),\n    label: \"Every Day \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  }), valueDef === 'everyDay' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scRandom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scRandsub1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 35\n    }\n  }, t('schedule.At')), /*#__PURE__*/React.createElement(CustomTime, {\n    handleDateChange: handleDateChange,\n    value: selectedDate,\n    ampm: true,\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 35\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"everyWeek\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 40\n      }\n    }),\n    label: \"Every Week \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 29\n    }\n  }), valueDef === 'everyWeek' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scRandom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scRandsub1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 35\n    }\n  }, t('schedule.scheduleOn')), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControlDT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: classes.select,\n    disableUnderline: true,\n    value: days,\n    onChange: function onChange(e) {\n      setDays(e.target.value);\n    },\n    label: \"days\",\n    inputProps: {\n      name: 'days',\n      id: 'outlined-age-native-simple',\n      style: {\n        fontSize: '0.75rem',\n        height: 7\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 37\n    }\n  }, weekdays.map(function (day) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      className: classes.opt,\n      value: day,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 41\n      }\n    }, day);\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scRandsub1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 35\n    }\n  }, t('schedule.at')), /*#__PURE__*/React.createElement(CustomTime, {\n    handleDateChange: handleDateChange,\n    value: selectedDate,\n    ampm: true,\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 35\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"everyMonth\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 40\n      }\n    }),\n    label: \"Every Month\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 29\n    }\n  }), valueDef === 'everyMonth' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scRandom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scRandsub1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 35\n    }\n  }, t('schedule.scheduleOn')), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControlMonth,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: classes.select,\n    disableUnderline: true,\n    value: dates,\n    onChange: function onChange(e) {\n      setDates(e.target.value);\n    },\n    label: \"dates\",\n    inputProps: {\n      name: 'dates',\n      id: 'outlined-age-native-simple',\n      style: {\n        fontSize: '0.75rem',\n        height: 7\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 37\n    }\n  }, names.map(function (date) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      className: classes.opt,\n      value: date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 41\n      }\n    }, date);\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scRandsub1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 35\n    }\n  }, t('schedule.at')), /*#__PURE__*/React.createElement(CustomTime, {\n    handleDateChange: handleDateChange,\n    value: selectedDate,\n    ampm: true,\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 35\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null))))) : /*#__PURE__*/React.createElement(React.Fragment, null)))), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.submitDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutline, {\n    isDisabled: false,\n    handleClick: function handleClick() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 17\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    isPrimary: true,\n    handleClick: function handleClick() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 19\n    }\n  }, t('schedule.save')))))))));\n};\n\nexport default SchedulePage;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/pages/SchedulePage/index.tsx"],"names":["Divider","FormControl","FormControlLabel","Radio","RadioGroup","Select","Typography","React","useTranslation","ButtonFilled","ButtonOutline","CustomDate","CustomTime","Scaffold","SetTime","useStyles","SchedulePage","t","start","end","interval","classes","useState","value","setValue","handleChange","event","target","valueDef","setValueDef","handleChangeInstance","days","setDays","dates","setDates","names","i","weekdays","Date","now","selectedDate","setSelectedDate","handleDateChange","date","rootContainer","mainHeader","headerDesc","root","scHeader","scSegments","headerText","schBody","description","calIcon","scFormControl","formControl","radioText","schLater","captionText","wtDateTime","innerSpecific","innerRecurring","scRandom","scRandsub1","formControlDT","select","e","name","id","style","fontSize","height","map","day","opt","formControlMonth","submitDiv","marginLeft"],"mappings":"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","sourcesContent":["import {\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ButtonFilled from '../../components/Button/ButtonFilled';\nimport ButtonOutline from '../../components/Button/ButtonOutline';\nimport CustomDate from '../../components/DateTime/CustomDate/index';\nimport CustomTime from '../../components/DateTime/CustomTime/index';\nimport Scaffold from '../../containers/layouts/Scaffold';\nimport SetTime from './SetTime/index';\nimport useStyles from './styles';\n\nconst SchedulePage: React.FC = () => {\n  const { t } = useTranslation();\n  const start = 0;\n  const end = 10;\n  const interval = 2;\n\n  const classes = useStyles();\n  // controls radio buttons\n  const [value, setValue] = React.useState('now');\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  // controls inner radio buttons of recurring schedule\n  const [valueDef, setValueDef] = React.useState('');\n  const handleChangeInstance = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValueDef(event.target.value);\n  };\n\n  // sets weekdays\n  const [days, setDays] = React.useState('Monday');\n\n  // sets dates\n  const [dates, setDates] = React.useState(1);\n\n  // stores dates in an array\n  const names: number[] = [1];\n  for (let i = 1; i <= 30; i += 1) {\n    names[i] = i + 1;\n  }\n\n  const weekdays: string[] = [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n    'Sunday',\n  ];\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\n    new Date(Date.now())\n  );\n\n  const handleDateChange = (date: Date | null) => {\n    setSelectedDate(date);\n  };\n  return (\n    <Scaffold>\n      <div className={classes.rootContainer}>\n        <Typography className={classes.mainHeader}>\n          {t('schedule.heading')}\n        </Typography>\n        <Typography className={classes.headerDesc}>\n          {t('schedule.headingDesc')}\n        </Typography>\n        <div className={classes.root}>\n          <div className={classes.scHeader}>\n            {/* Upper segment */}\n            <div className={classes.scSegments}>\n              <div>\n                <Typography className={classes.headerText}>\n                  <strong>{t('schedule.headingText')}</strong>\n                </Typography>\n\n                <div className={classes.schBody}>\n                  <Typography align=\"left\" className={classes.description}>\n                    {t('schedule.description')}\n                  </Typography>\n                </div>\n              </div>\n              <img\n                src=\"./icons/calendar.svg\"\n                alt=\"calendar\"\n                className={classes.calIcon}\n              />\n            </div>\n            <Divider />\n\n            {/* Lower segment */}\n            <div className={classes.scFormControl}>\n              <FormControl component=\"fieldset\" className={classes.formControl}>\n                <RadioGroup\n                  aria-label=\"schedule\"\n                  name=\"schedule\"\n                  value={value}\n                  onChange={handleChange}\n                >\n                  {/* options to choose schedule */}\n                  <FormControlLabel\n                    value=\"now\"\n                    control={<Radio />}\n                    label={\n                      <Typography className={classes.radioText}>\n                        {t('schedule.scheduleNow')}\n                      </Typography>\n                    }\n                  />\n\n                  <FormControlLabel\n                    value=\"afterSometime\"\n                    control={<Radio />}\n                    label={\n                      <Typography className={classes.radioText}>\n                        {t('schedule.scheduleAfter')}\n                      </Typography>\n                    }\n                  />\n                  {value === 'afterSometime' ? (\n                    <div className={classes.schLater}>\n                      <Typography className={classes.captionText}>\n                        {t('schedule.scheduleAfterSometime')}\n                      </Typography>\n                      <div className={classes.wtDateTime}>\n                        <Typography\n                          variant=\"body2\"\n                          className={classes.captionText}\n                        >\n                          {t('schedule.after')}\n                        </Typography>\n\n                        <SetTime\n                          start={start}\n                          end={end}\n                          interval={interval}\n                          label=\"Days\"\n                          type=\"days\"\n                        />\n                        <CustomTime\n                          handleDateChange={handleDateChange}\n                          value={selectedDate}\n                          ampm\n                          disabled={false}\n                        />\n                      </div>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                  <FormControlLabel\n                    value=\"specificTime\"\n                    control={<Radio />}\n                    label={\n                      <Typography className={classes.radioText}>\n                        {t('schedule.scheduleSpecificTime')}\n                      </Typography>\n                    }\n                  />\n\n                  {value === 'specificTime' ? (\n                    <div className={classes.schLater}>\n                      <Typography className={classes.captionText}>\n                        {t('schedule.scheduleFuture')}\n                      </Typography>\n                      <div className={classes.innerSpecific}>\n                        <CustomDate\n                          selectedDate={selectedDate}\n                          handleDateChange={handleDateChange}\n                          disabled={false}\n                        />\n                        <CustomTime\n                          handleDateChange={handleDateChange}\n                          value={selectedDate}\n                          ampm\n                          disabled={false}\n                        />\n                      </div>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                  <FormControlLabel\n                    value=\"recurringScedule\"\n                    control={<Radio />}\n                    label={\n                      <Typography className={classes.radioText}>\n                        {t('schedule.scheduleRecurring')}\n                      </Typography>\n                    }\n                  />\n                  {value === 'recurringScedule' ? (\n                    <div className={classes.schLater}>\n                      <Typography className={classes.captionText}>\n                        {t('schedule.scheduleRecurringTime')}\n                      </Typography>\n\n                      {/* options to select time of recurring schedule */}\n                      <div className={classes.innerRecurring}>\n                        <FormControl component=\"fieldset\">\n                          <RadioGroup\n                            aria-label=\"instanceDef\"\n                            name=\"instanceDef\"\n                            value={valueDef}\n                            onChange={handleChangeInstance}\n                          >\n                            <FormControlLabel\n                              value=\"everyHr\"\n                              control={<Radio />}\n                              label=\"Every Hour\"\n                            />\n                            {valueDef === 'everyHr' ? (\n                              <div>\n                                <div className={classes.scRandom}>\n                                  <Typography className={classes.scRandsub1}>\n                                    {t('schedule.At')}\n                                  </Typography>\n                                  <SetTime\n                                    start={start}\n                                    end={end}\n                                    interval={interval}\n                                    label=\"th\"\n                                    type=\"\"\n                                  />\n                                </div>\n                              </div>\n                            ) : (\n                              <></>\n                            )}\n                            <FormControlLabel\n                              value=\"everyDay\"\n                              control={<Radio />}\n                              label=\"Every Day \"\n                            />\n                            {valueDef === 'everyDay' ? (\n                              <div>\n                                <div className={classes.scRandom}>\n                                  <Typography className={classes.scRandsub1}>\n                                    {t('schedule.At')}\n                                  </Typography>\n                                  <CustomTime\n                                    handleDateChange={handleDateChange}\n                                    value={selectedDate}\n                                    ampm\n                                    disabled={false}\n                                  />\n                                </div>\n                              </div>\n                            ) : (\n                              <></>\n                            )}\n                            <FormControlLabel\n                              value=\"everyWeek\"\n                              control={<Radio />}\n                              label=\"Every Week \"\n                            />\n                            {valueDef === 'everyWeek' ? (\n                              <div>\n                                <div className={classes.scRandom}>\n                                  <Typography className={classes.scRandsub1}>\n                                    {t('schedule.scheduleOn')}\n                                  </Typography>\n                                  <FormControl\n                                    className={classes.formControlDT}\n                                  >\n                                    <Select\n                                      className={classes.select}\n                                      disableUnderline\n                                      value={days}\n                                      onChange={(e) => {\n                                        setDays(\n                                          (e.target.value as unknown) as string\n                                        );\n                                      }}\n                                      label=\"days\"\n                                      inputProps={{\n                                        name: 'days',\n\n                                        id: 'outlined-age-native-simple',\n                                        style: {\n                                          fontSize: '0.75rem',\n                                          height: 7,\n                                        },\n                                      }}\n                                    >\n                                      {weekdays.map((day) => (\n                                        <option\n                                          className={classes.opt}\n                                          value={day}\n                                        >\n                                          {day}\n                                        </option>\n                                      ))}\n                                    </Select>\n                                  </FormControl>\n                                  <Typography className={classes.scRandsub1}>\n                                    {t('schedule.at')}\n                                  </Typography>\n                                  <CustomTime\n                                    handleDateChange={handleDateChange}\n                                    value={selectedDate}\n                                    ampm\n                                    disabled={false}\n                                  />\n                                </div>\n                              </div>\n                            ) : (\n                              <></>\n                            )}\n                            <FormControlLabel\n                              value=\"everyMonth\"\n                              control={<Radio />}\n                              label=\"Every Month\"\n                            />\n                            {valueDef === 'everyMonth' ? (\n                              <div>\n                                <div className={classes.scRandom}>\n                                  <Typography className={classes.scRandsub1}>\n                                    {t('schedule.scheduleOn')}\n                                  </Typography>\n                                  <FormControl\n                                    className={classes.formControlMonth}\n                                  >\n                                    <Select\n                                      className={classes.select}\n                                      disableUnderline\n                                      value={dates}\n                                      onChange={(e) => {\n                                        setDates(\n                                          (e.target.value as unknown) as number\n                                        );\n                                      }}\n                                      label=\"dates\"\n                                      inputProps={{\n                                        name: 'dates',\n                                        id: 'outlined-age-native-simple',\n                                        style: {\n                                          fontSize: '0.75rem',\n                                          height: 7,\n                                        },\n                                      }}\n                                    >\n                                      {names.map((date) => (\n                                        <option\n                                          className={classes.opt}\n                                          value={date}\n                                        >\n                                          {date}\n                                        </option>\n                                      ))}\n                                    </Select>\n                                  </FormControl>\n                                  <Typography className={classes.scRandsub1}>\n                                    {t('schedule.at')}\n                                  </Typography>\n                                  <CustomTime\n                                    handleDateChange={handleDateChange}\n                                    value={selectedDate}\n                                    ampm\n                                    disabled={false}\n                                  />\n                                </div>\n                              </div>\n                            ) : (\n                              <></>\n                            )}\n                          </RadioGroup>\n                        </FormControl>\n                      </div>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                </RadioGroup>\n              </FormControl>\n            </div>\n            <Divider />\n            <div className={classes.submitDiv}>\n              <ButtonOutline isDisabled={false} handleClick={() => {}}>\n                <Typography>Cancel</Typography>\n              </ButtonOutline>\n              <div style={{ marginLeft: 'auto' }}>\n                <ButtonFilled isPrimary handleClick={() => {}}>\n                  <Typography>{t('schedule.save')}</Typography>\n                </ButtonFilled>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Scaffold>\n  );\n};\n\nexport default SchedulePage;\n"]},"metadata":{},"sourceType":"module"}