{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar constants = require('./constants');\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar maxRowLength = require('../../lib').maxRowLength;\n\nmodule.exports = function calc(gd, trace) {\n  var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n  var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n  var x0 = xa.d2c(trace.x0) - trace.dx / 2;\n  var y0 = ya.d2c(trace.y0) - trace.dy / 2;\n  var h = trace.z.length;\n  var w = maxRowLength(trace.z); // Set axis range\n\n  var i;\n  var xrange = [x0, x0 + w * trace.dx];\n  var yrange = [y0, y0 + h * trace.dy];\n  if (xa && xa.type === 'log') for (i = 0; i < w; i++) {\n    xrange.push(x0 + i * trace.dx);\n  }\n  if (ya && ya.type === 'log') for (i = 0; i < h; i++) {\n    yrange.push(y0 + i * trace.dy);\n  }\n  trace._extremes[xa._id] = Axes.findExtremes(xa, xrange);\n  trace._extremes[ya._id] = Axes.findExtremes(ya, yrange);\n  trace._scaler = makeScaler(trace);\n  var cd0 = {\n    x0: x0,\n    y0: y0,\n    z: trace.z,\n    w: w,\n    h: h\n  };\n  return [cd0];\n};\n\nfunction scale(zero, ratio, min, max) {\n  return function (c) {\n    return Lib.constrain((c - zero) * ratio, min, max);\n  };\n}\n\nfunction constrain(min, max) {\n  return function (c) {\n    return Lib.constrain(c, min, max);\n  };\n} // Generate a function to scale color components according to zmin/zmax and the colormodel\n\n\nfunction makeScaler(trace) {\n  var colormodel = trace.colormodel;\n  var n = colormodel.length;\n  var cr = constants.colormodel[colormodel];\n  trace._sArray = []; // Loop over all color components\n\n  for (var k = 0; k < n; k++) {\n    if (cr.min[k] !== trace.zmin[k] || cr.max[k] !== trace.zmax[k]) {\n      trace._sArray.push(scale(trace.zmin[k], (cr.max[k] - cr.min[k]) / (trace.zmax[k] - trace.zmin[k]), cr.min[k], cr.max[k]));\n    } else {\n      trace._sArray.push(constrain(cr.min[k], cr.max[k]));\n    }\n  }\n\n  return function (pixel) {\n    var c = pixel.slice(0, n);\n\n    for (var k = 0; k < n; k++) {\n      var ck = c[k];\n      if (!isNumeric(ck)) return false;\n      c[k] = trace._sArray[k](ck);\n    }\n\n    return c;\n  };\n}","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/plotly.js/src/traces/image/calc.js"],"names":["Lib","require","constants","isNumeric","Axes","maxRowLength","module","exports","calc","gd","trace","xa","getFromId","xaxis","ya","yaxis","x0","d2c","dx","y0","dy","h","z","length","w","i","xrange","yrange","type","push","_extremes","_id","findExtremes","_scaler","makeScaler","cd0","scale","zero","ratio","min","max","c","constrain","colormodel","n","cr","_sArray","k","zmin","zmax","pixel","slice","ck"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar constants = require('./constants');\nvar isNumeric = require('fast-isnumeric');\nvar Axes = require('../../plots/cartesian/axes');\nvar maxRowLength = require('../../lib').maxRowLength;\n\nmodule.exports = function calc(gd, trace) {\n    var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n    var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n\n    var x0 = xa.d2c(trace.x0) - trace.dx / 2;\n    var y0 = ya.d2c(trace.y0) - trace.dy / 2;\n    var h = trace.z.length;\n    var w = maxRowLength(trace.z);\n\n    // Set axis range\n    var i;\n    var xrange = [x0, x0 + w * trace.dx];\n    var yrange = [y0, y0 + h * trace.dy];\n    if(xa && xa.type === 'log') for(i = 0; i < w; i++) xrange.push(x0 + i * trace.dx);\n    if(ya && ya.type === 'log') for(i = 0; i < h; i++) yrange.push(y0 + i * trace.dy);\n    trace._extremes[xa._id] = Axes.findExtremes(xa, xrange);\n    trace._extremes[ya._id] = Axes.findExtremes(ya, yrange);\n    trace._scaler = makeScaler(trace);\n\n    var cd0 = {\n        x0: x0,\n        y0: y0,\n        z: trace.z,\n        w: w,\n        h: h\n    };\n    return [cd0];\n};\n\nfunction scale(zero, ratio, min, max) {\n    return function(c) {\n        return Lib.constrain((c - zero) * ratio, min, max);\n    };\n}\n\nfunction constrain(min, max) {\n    return function(c) { return Lib.constrain(c, min, max);};\n}\n\n// Generate a function to scale color components according to zmin/zmax and the colormodel\nfunction makeScaler(trace) {\n    var colormodel = trace.colormodel;\n    var n = colormodel.length;\n    var cr = constants.colormodel[colormodel];\n\n    trace._sArray = [];\n    // Loop over all color components\n    for(var k = 0; k < n; k++) {\n        if(cr.min[k] !== trace.zmin[k] || cr.max[k] !== trace.zmax[k]) {\n            trace._sArray.push(scale(\n                trace.zmin[k],\n                (cr.max[k] - cr.min[k]) / (trace.zmax[k] - trace.zmin[k]),\n                cr.min[k],\n                cr.max[k]\n            ));\n        } else {\n            trace._sArray.push(constrain(cr.min[k], cr.max[k]));\n        }\n    }\n\n    return function(pixel) {\n        var c = pixel.slice(0, n);\n        for(var k = 0; k < n; k++) {\n            var ck = c[k];\n            if(!isNumeric(ck)) return false;\n            c[k] = trace._sArray[k](ck);\n        }\n        return c;\n    };\n}\n"]},"metadata":{},"sourceType":"script"}