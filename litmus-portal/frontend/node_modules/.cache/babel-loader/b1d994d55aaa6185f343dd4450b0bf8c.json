{"ast":null,"code":"import _objectSpread from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/CreateWorkflow/CustomWorkflow/TuneWorkflow/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport YAML from 'yaml';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyQuery } from '@apollo/client';\nimport BackButton from '../BackButton';\nimport ButtonFilled from '../../../../components/Button/ButtonFilled';\nimport InputField from '../../../../components/InputField';\nimport useStyles from './styles';\nimport useActions from '../../../../redux/actions';\nimport * as WorkflowActions from '../../../../redux/actions/workflow';\nimport Loader from '../../../../components/Loader';\nimport { GET_ENGINE_YAML } from '../../../../graphql/quries';\n\nvar TuneCustomWorkflow = function TuneCustomWorkflow(_ref) {\n  _s();\n\n  var gotoStep = _ref.gotoStep;\n  var classes = useStyles();\n\n  var _useState = useState([{\n    name: '',\n    value: ''\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      overrideEnvs = _useState2[0],\n      setOverrideEnvs = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.workflowData;\n  }),\n      customWorkflow = _useSelector.customWorkflow,\n      customWorkflows = _useSelector.customWorkflows;\n\n  var _useState3 = useState({\n    appns: 'kube-system',\n    applabel: 'k8s-app=kube-proxy',\n    appkind: 'daemonset'\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      appInfo = _useState4[0],\n      setAppInfo = _useState4[1];\n\n  var _useState5 = useState('true'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      annotation = _useState6[0],\n      setAnnotation = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      env = _useState8[0],\n      setEnv = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      yaml = _useState10[0],\n      setYaml = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loadingEnv = _useState12[0],\n      setLoadingEnv = _useState12[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var userData = useSelector(function (state) {\n    return state.userData;\n  });\n\n  var _useLazyQuery = useLazyQuery(GET_ENGINE_YAML, {\n    onCompleted: function onCompleted(data) {\n      var parsedYaml = YAML.parse(data.getYAMLData);\n      setEnv(_toConsumableArray(parsedYaml.spec.experiments[0].spec.components.env));\n      setAppInfo({\n        appns: parsedYaml.spec.appinfo.appns,\n        applabel: parsedYaml.spec.appinfo.applabel,\n        appkind: parsedYaml.spec.appinfo.appkind\n      });\n      setYaml(YAML.stringify(parsedYaml));\n      setLoadingEnv(false);\n    }\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 1),\n      getEngineYaml = _useLazyQuery2[0];\n\n  var workflowAction = useActions(WorkflowActions);\n\n  var changeKey = function changeKey(index, event) {\n    overrideEnvs[index].name = event.target.value;\n    setOverrideEnvs(_toConsumableArray(overrideEnvs));\n  };\n\n  var changeValue = function changeValue(index, event) {\n    overrideEnvs[index].value = event.target.value;\n    setOverrideEnvs(_toConsumableArray(overrideEnvs));\n  };\n\n  var AddEnvPair = function AddEnvPair() {\n    setOverrideEnvs([].concat(_toConsumableArray(overrideEnvs), [{\n      name: '',\n      value: ''\n    }]));\n  };\n\n  var changeOriginalEnvValue = function changeOriginalEnvValue(index, event) {\n    env[index].value = event.target.value;\n    setEnv(_toConsumableArray(env));\n  }; // UseEffect to fetch the env variables\n\n\n  useEffect(function () {\n    if (customWorkflow.yaml === '') {\n      getEngineYaml({\n        variables: {\n          experimentInput: {\n            ProjectID: userData.selectedProjectID,\n            HubName: customWorkflow.hubName,\n            ChartName: customWorkflow.experiment_name.split('/')[0],\n            ExperimentName: customWorkflow.experiment_name.split('/')[1],\n            FileType: 'engine'\n          }\n        }\n      });\n    } else {\n      var parsedYaml = YAML.parse(customWorkflow.yaml);\n      setAppInfo({\n        appns: parsedYaml.spec.appinfo.appns,\n        applabel: parsedYaml.spec.appinfo.applabel,\n        appkind: parsedYaml.spec.appinfo.appkind\n      });\n      setAnnotation(parsedYaml.spec.annotationCheck);\n      setEnv(_toConsumableArray(parsedYaml.spec.experiments[0].spec.components.env));\n      setYaml(customWorkflow.yaml);\n      setLoadingEnv(false);\n    }\n  }, []); // Function to generate sequence of experiemnt\n\n  var experimentSequence = function experimentSequence() {\n    var elemPos = customWorkflows.map(function (exp) {\n      return exp.experiment_name;\n    }).indexOf(customWorkflow.experiment_name);\n\n    if (customWorkflow.index === -1 && customWorkflows.length === 0 || elemPos === 0) {\n      return t('customWorkflow.tuneExperiment.sequenceFirstExp');\n    }\n\n    if (customWorkflow.index === -1) {\n      return \"\".concat(t('customWorkflow.tuneExperiment.sequenceNotFirstExp'), \" \").concat(customWorkflows[customWorkflows.length - 1].experiment_name);\n    }\n\n    return \"\".concat(t('customWorkflow.tuneExperiment.sequenceNotFirstExp'), \" \").concat(customWorkflows[elemPos - 1].experiment_name);\n  }; // Function to handle the change in env variables\n\n\n  var handleEnvModification = function handleEnvModification() {\n    var _customWorkflow$exper;\n\n    var newEnvs = [];\n    var hashEnv = new Map();\n    env.forEach(function (envPair) {\n      hashEnv.set(envPair.name, envPair.value);\n    });\n    overrideEnvs.forEach(function (envPair) {\n      if (hashEnv.has(envPair.name)) {\n        hashEnv.delete(envPair.name);\n        hashEnv.set(envPair.name, envPair.value);\n      } else {\n        hashEnv.set(envPair.name, envPair.value);\n      }\n    });\n    hashEnv.forEach(function (value, key) {\n      if (key !== '') {\n        newEnvs.push({\n          name: key,\n          value\n        });\n      }\n    });\n    var parsedYaml = YAML.parse(yaml);\n    parsedYaml.spec.experiments[0].spec.components.env = newEnvs;\n    parsedYaml.spec.appinfo.appns = appInfo.appns;\n    parsedYaml.spec.appinfo.applabel = appInfo.applabel;\n    parsedYaml.spec.appinfo.appkind = appInfo.appkind;\n    parsedYaml.spec.annotationCheck = annotation;\n    parsedYaml.metadata.name = (_customWorkflow$exper = customWorkflow.experiment_name) === null || _customWorkflow$exper === void 0 ? void 0 : _customWorkflow$exper.split('/')[1];\n    parsedYaml.metadata.namespace = '{{workflow.parameters.adminModeNamespace}}';\n    parsedYaml.spec.chaosServiceAccount = 'litmus-admin';\n    var YamlString = YAML.stringify(parsedYaml);\n    var experimentArray = customWorkflows;\n\n    if (customWorkflow.index === -1) {\n      workflowAction.setWorkflowDetails({\n        customWorkflows: [].concat(_toConsumableArray(customWorkflows), [{\n          experiment_name: customWorkflow.experiment_name,\n          hubName: customWorkflow.hubName,\n          repoUrl: customWorkflow.repoUrl,\n          repoBranch: customWorkflow.repoBranch,\n          yamlLink: customWorkflow.yamlLink,\n          yaml: YamlString,\n          description: customWorkflow.description\n        }])\n      });\n    } else {\n      experimentArray[customWorkflow.index].yaml = YamlString;\n      workflowAction.setWorkflowDetails({\n        customWorkflows: _toConsumableArray(experimentArray)\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headerDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, customWorkflow.index === -1 ? /*#__PURE__*/React.createElement(BackButton, {\n    isDisabled: false,\n    onClick: function onClick() {\n      return gotoStep(0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }) : null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    className: classes.headerText,\n    gutterBottom: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, t('customWorkflow.tuneExperiment.headerText')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headerDesc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, t('customWorkflow.tuneExperiment.addKey'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.workflowDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, \" \", t('customWorkflow.tuneExperiment.experimentInfo'))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.mainText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, t('customWorkflow.tuneExperiment.expName'), \":\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.mainDetail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, customWorkflow.experiment_name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.mainText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, t('customWorkflow.tuneExperiment.description'), \":\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.mainDetail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, customWorkflow.description)), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.horizontalLineHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.mainText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, t('customWorkflow.tuneExperiment.sequence'), \":\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.mainDetail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, experimentSequence()))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.horizontalLineHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }), loadingEnv ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appInfoMainDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.appInfoHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, t('customWorkflow.tuneExperiment.appInfo')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appInfoDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.appInfoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, \"appns:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: \"appns\",\n    styles: {\n      width: '100%'\n    },\n    \"data-cy\": \"inputWorkflow\",\n    validationError: false,\n    handleChange: function handleChange(event) {\n      return setAppInfo(_objectSpread(_objectSpread({}, appInfo), {}, {\n        appns: event.target.value.toLowerCase()\n      }));\n    },\n    value: appInfo.appns,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appInfoDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.appInfoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }, \"applabel:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: \"applabel\",\n    styles: {\n      width: '100%'\n    },\n    \"data-cy\": \"inputWorkflow\",\n    validationError: false,\n    handleChange: function handleChange(event) {\n      return setAppInfo(_objectSpread(_objectSpread({}, appInfo), {}, {\n        applabel: event.target.value.toLowerCase()\n      }));\n    },\n    value: appInfo.applabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appKind,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.appInfoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, \"appkind:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: \"appkind\",\n    styles: {\n      width: '100%'\n    },\n    \"data-cy\": \"inputWorkflow\",\n    validationError: false,\n    handleChange: function handleChange(event) {\n      return setAppInfo(_objectSpread(_objectSpread({}, appInfo), {}, {\n        appkind: event.target.value.toLowerCase()\n      }));\n    },\n    value: appInfo.appkind,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.appKind,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.appInfoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  }, \"annotationCheck:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: \"annotationCheck\",\n    styles: {\n      width: '100%'\n    },\n    \"data-cy\": \"inputWorkflow\",\n    validationError: false,\n    handleChange: function handleChange(event) {\n      return setAnnotation(event.target.value);\n    },\n    value: annotation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.horizontalLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.envHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }, t('customWorkflow.tuneExperiment.envText')), env.map(function (data, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inputDiv,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.envName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }, data.name), /*#__PURE__*/React.createElement(InputField, {\n      label: \"Value\",\n      styles: {\n        width: '40%'\n      },\n      \"data-cy\": \"inputWorkflow\",\n      validationError: false,\n      handleChange: function handleChange(event) {\n        return changeOriginalEnvValue(index, event);\n      },\n      value: data.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.horizontalLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.customEnvDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.envHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  }, t('customWorkflow.tuneExperiment.customEnvText')), overrideEnvs.map(function (data, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.inputDivEnv,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputField, {\n      label: \"Key\",\n      styles: {\n        width: '40%'\n      },\n      \"data-cy\": \"inputWorkflow\",\n      validationError: false,\n      handleChange: function handleChange(event) {\n        return changeKey(index, event);\n      },\n      value: data.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(InputField, {\n      label: \"Value\",\n      styles: {\n        width: '40%'\n      },\n      \"data-cy\": \"inputWorkflow\",\n      validationError: false,\n      handleChange: function handleChange(event) {\n        return changeValue(index, event);\n      },\n      value: data.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 15\n      }\n    }), overrideEnvs[index + 1] ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.addEnvBtn,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ButtonFilled, {\n      handleClick: function handleClick() {\n        AddEnvPair();\n      },\n      isPrimary: false,\n      isDisabled: !!(overrideEnvs[index].name === '' || overrideEnvs[index].value === ''),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 19\n      }\n    }, t('customWorkflow.tuneExperiment.addEnv'))));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.nextBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    handleClick: function handleClick() {\n      handleEnvModification();\n      gotoStep(2);\n    },\n    isPrimary: true,\n    isDisabled: loadingEnv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"next\",\n    src: \"/icons/tick.svg\",\n    className: classes.nextArrow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }\n  }), t('customWorkflow.tuneExperiment.addExp')))));\n};\n\n_s(TuneCustomWorkflow, \"N7XPbq+FoFoMeFMCFqmexVz5UKg=\", false, function () {\n  return [useStyles, useSelector, useTranslation, useSelector, useLazyQuery, useActions];\n});\n\n_c = TuneCustomWorkflow;\nexport default TuneCustomWorkflow;\n\nvar _c;\n\n$RefreshReg$(_c, \"TuneCustomWorkflow\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/CreateWorkflow/CustomWorkflow/TuneWorkflow/index.tsx"],"names":["Typography","React","useEffect","useState","YAML","useSelector","useTranslation","useLazyQuery","BackButton","ButtonFilled","InputField","useStyles","useActions","WorkflowActions","Loader","GET_ENGINE_YAML","TuneCustomWorkflow","gotoStep","classes","name","value","overrideEnvs","setOverrideEnvs","state","workflowData","customWorkflow","customWorkflows","appns","applabel","appkind","appInfo","setAppInfo","annotation","setAnnotation","env","setEnv","yaml","setYaml","loadingEnv","setLoadingEnv","t","userData","onCompleted","data","parsedYaml","parse","getYAMLData","spec","experiments","components","appinfo","stringify","getEngineYaml","workflowAction","changeKey","index","event","target","changeValue","AddEnvPair","changeOriginalEnvValue","variables","experimentInput","ProjectID","selectedProjectID","HubName","hubName","ChartName","experiment_name","split","ExperimentName","FileType","annotationCheck","experimentSequence","elemPos","map","exp","indexOf","length","handleEnvModification","newEnvs","hashEnv","Map","forEach","envPair","set","has","delete","key","push","metadata","namespace","chaosServiceAccount","YamlString","experimentArray","setWorkflowDetails","repoUrl","repoBranch","yamlLink","description","root","headerDiv","headerText","headerDesc","workflowDiv","inputDiv","mainText","mainDetail","horizontalLineHeader","appInfoMainDiv","appInfoHeader","appInfoDiv","appInfoText","inputField","width","toLowerCase","appKind","horizontalLine","envHeader","envName","customEnvDiv","inputDivEnv","addEnvBtn","nextBtn","nextArrow"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport YAML from 'yaml';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { useLazyQuery } from '@apollo/client';\nimport BackButton from '../BackButton';\nimport ButtonFilled from '../../../../components/Button/ButtonFilled';\nimport InputField from '../../../../components/InputField';\nimport useStyles from './styles';\nimport { RootState } from '../../../../redux/reducers';\nimport useActions from '../../../../redux/actions';\nimport * as WorkflowActions from '../../../../redux/actions/workflow';\nimport Loader from '../../../../components/Loader';\nimport { GET_ENGINE_YAML } from '../../../../graphql/quries';\n\ninterface EnvValues {\n  name: string;\n  value: string;\n}\n\ninterface VerifyCommitProps {\n  gotoStep: (page: number) => void;\n}\n\ninterface AppInfo {\n  appns: string;\n  applabel: string;\n  appkind: string;\n}\n\nconst TuneCustomWorkflow: React.FC<VerifyCommitProps> = ({ gotoStep }) => {\n  const classes = useStyles();\n  const [overrideEnvs, setOverrideEnvs] = useState<EnvValues[]>([\n    { name: '', value: '' },\n  ]);\n  const { customWorkflow, customWorkflows } = useSelector(\n    (state: RootState) => state.workflowData\n  );\n  const [appInfo, setAppInfo] = useState<AppInfo>({\n    appns: 'kube-system',\n    applabel: 'k8s-app=kube-proxy',\n    appkind: 'daemonset',\n  });\n  const [annotation, setAnnotation] = useState('true');\n  const [env, setEnv] = useState<EnvValues[]>([]);\n  const [yaml, setYaml] = useState<string>('');\n  const [loadingEnv, setLoadingEnv] = useState(true);\n\n  const { t } = useTranslation();\n  const userData = useSelector((state: RootState) => state.userData);\n  const [getEngineYaml] = useLazyQuery(GET_ENGINE_YAML, {\n    onCompleted: (data) => {\n      const parsedYaml = YAML.parse(data.getYAMLData);\n      setEnv([...parsedYaml.spec.experiments[0].spec.components.env]);\n      setAppInfo({\n        appns: parsedYaml.spec.appinfo.appns,\n        applabel: parsedYaml.spec.appinfo.applabel,\n        appkind: parsedYaml.spec.appinfo.appkind,\n      });\n      setYaml(YAML.stringify(parsedYaml));\n      setLoadingEnv(false);\n    },\n  });\n\n  const workflowAction = useActions(WorkflowActions);\n\n  const changeKey = (\n    index: number,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    overrideEnvs[index].name = event.target.value;\n    setOverrideEnvs([...overrideEnvs]);\n  };\n  const changeValue = (\n    index: number,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    overrideEnvs[index].value = event.target.value;\n    setOverrideEnvs([...overrideEnvs]);\n  };\n  const AddEnvPair = () => {\n    setOverrideEnvs([...overrideEnvs, { name: '', value: '' }]);\n  };\n\n  const changeOriginalEnvValue = (\n    index: number,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    env[index].value = event.target.value;\n    setEnv([...env]);\n  };\n\n  // UseEffect to fetch the env variables\n  useEffect(() => {\n    if (customWorkflow.yaml === '') {\n      getEngineYaml({\n        variables: {\n          experimentInput: {\n            ProjectID: userData.selectedProjectID,\n            HubName: customWorkflow.hubName,\n            ChartName: customWorkflow.experiment_name.split('/')[0],\n            ExperimentName: customWorkflow.experiment_name.split('/')[1],\n            FileType: 'engine',\n          },\n        },\n      });\n    } else {\n      const parsedYaml = YAML.parse(customWorkflow.yaml as string);\n      setAppInfo({\n        appns: parsedYaml.spec.appinfo.appns,\n        applabel: parsedYaml.spec.appinfo.applabel,\n        appkind: parsedYaml.spec.appinfo.appkind,\n      });\n      setAnnotation(parsedYaml.spec.annotationCheck);\n      setEnv([...parsedYaml.spec.experiments[0].spec.components.env]);\n      setYaml(customWorkflow.yaml as string);\n      setLoadingEnv(false);\n    }\n  }, []);\n  // Function to generate sequence of experiemnt\n  const experimentSequence = () => {\n    const elemPos = customWorkflows\n      .map((exp) => {\n        return exp.experiment_name;\n      })\n      .indexOf(customWorkflow.experiment_name);\n    if (\n      (customWorkflow.index === -1 && customWorkflows.length === 0) ||\n      elemPos === 0\n    ) {\n      return t('customWorkflow.tuneExperiment.sequenceFirstExp');\n    }\n    if (customWorkflow.index === -1) {\n      return `${t('customWorkflow.tuneExperiment.sequenceNotFirstExp')} ${\n        customWorkflows[customWorkflows.length - 1].experiment_name\n      }`;\n    }\n    return `${t('customWorkflow.tuneExperiment.sequenceNotFirstExp')} ${\n      customWorkflows[elemPos - 1].experiment_name\n    }`;\n  };\n  // Function to handle the change in env variables\n  const handleEnvModification = () => {\n    const newEnvs: EnvValues[] = [];\n    const hashEnv = new Map();\n    env.forEach((envPair) => {\n      hashEnv.set(envPair.name, envPair.value);\n    });\n    overrideEnvs.forEach((envPair) => {\n      if (hashEnv.has(envPair.name)) {\n        hashEnv.delete(envPair.name);\n        hashEnv.set(envPair.name, envPair.value);\n      } else {\n        hashEnv.set(envPair.name, envPair.value);\n      }\n    });\n    hashEnv.forEach((value, key) => {\n      if (key !== '') {\n        newEnvs.push({ name: key, value });\n      }\n    });\n    const parsedYaml = YAML.parse(yaml);\n    parsedYaml.spec.experiments[0].spec.components.env = newEnvs;\n    parsedYaml.spec.appinfo.appns = appInfo.appns;\n    parsedYaml.spec.appinfo.applabel = appInfo.applabel;\n    parsedYaml.spec.appinfo.appkind = appInfo.appkind;\n    parsedYaml.spec.annotationCheck = annotation;\n    parsedYaml.metadata.name = customWorkflow.experiment_name?.split('/')[1];\n    parsedYaml.metadata.namespace =\n      '{{workflow.parameters.adminModeNamespace}}';\n    parsedYaml.spec.chaosServiceAccount = 'litmus-admin';\n    const YamlString = YAML.stringify(parsedYaml);\n    const experimentArray = customWorkflows;\n\n    if (customWorkflow.index === -1) {\n      workflowAction.setWorkflowDetails({\n        customWorkflows: [\n          ...customWorkflows,\n          {\n            experiment_name: customWorkflow.experiment_name,\n            hubName: customWorkflow.hubName,\n            repoUrl: customWorkflow.repoUrl,\n            repoBranch: customWorkflow.repoBranch,\n            yamlLink: customWorkflow.yamlLink,\n            yaml: YamlString,\n            description: customWorkflow.description,\n          },\n        ],\n      });\n    } else {\n      experimentArray[customWorkflow.index as number].yaml = YamlString;\n      workflowAction.setWorkflowDetails({\n        customWorkflows: [...experimentArray],\n      });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.headerDiv}>\n        {customWorkflow.index === -1 ? (\n          <BackButton isDisabled={false} onClick={() => gotoStep(0)} />\n        ) : null}\n        <Typography variant=\"h3\" className={classes.headerText} gutterBottom>\n          {t('customWorkflow.tuneExperiment.headerText')}\n        </Typography>\n        <Typography className={classes.headerDesc}>\n          {t('customWorkflow.tuneExperiment.addKey')}\n        </Typography>\n      </div>\n      <div className={classes.workflowDiv}>\n        <Typography variant=\"h4\">\n          <strong> {t('customWorkflow.tuneExperiment.experimentInfo')}</strong>\n        </Typography>\n        <div>\n          <div className={classes.inputDiv}>\n            <Typography variant=\"h6\" className={classes.mainText}>\n              {t('customWorkflow.tuneExperiment.expName')}:\n            </Typography>\n            <Typography className={classes.mainDetail}>\n              {customWorkflow.experiment_name}\n            </Typography>\n          </div>\n          <div className={classes.inputDiv}>\n            <Typography variant=\"h6\" className={classes.mainText}>\n              {t('customWorkflow.tuneExperiment.description')}:\n            </Typography>\n            <Typography className={classes.mainDetail}>\n              {customWorkflow.description}\n            </Typography>\n          </div>\n          <hr className={classes.horizontalLineHeader} />\n          <div className={classes.inputDiv}>\n            <Typography variant=\"h6\" className={classes.mainText}>\n              {t('customWorkflow.tuneExperiment.sequence')}:\n            </Typography>\n            <Typography className={classes.mainDetail}>\n              {experimentSequence()}\n            </Typography>\n          </div>\n        </div>\n        <hr className={classes.horizontalLineHeader} />\n        {loadingEnv ? (\n          <Loader />\n        ) : (\n          <div className={classes.appInfoMainDiv}>\n            <Typography className={classes.appInfoHeader}>\n              {t('customWorkflow.tuneExperiment.appInfo')}\n            </Typography>\n            <div className={classes.appInfoDiv}>\n              <Typography className={classes.appInfoText}>appns:</Typography>\n              <div className={classes.inputField}>\n                <InputField\n                  label=\"appns\"\n                  styles={{\n                    width: '100%',\n                  }}\n                  data-cy=\"inputWorkflow\"\n                  validationError={false}\n                  handleChange={(event) =>\n                    setAppInfo({\n                      ...appInfo,\n                      appns: event.target.value.toLowerCase(),\n                    })\n                  }\n                  value={appInfo.appns}\n                />\n              </div>\n            </div>\n            <div className={classes.appInfoDiv}>\n              <Typography className={classes.appInfoText}>applabel:</Typography>\n              <div className={classes.inputField}>\n                <InputField\n                  label=\"applabel\"\n                  styles={{\n                    width: '100%',\n                  }}\n                  data-cy=\"inputWorkflow\"\n                  validationError={false}\n                  handleChange={(event) =>\n                    setAppInfo({\n                      ...appInfo,\n                      applabel: event.target.value.toLowerCase(),\n                    })\n                  }\n                  value={appInfo.applabel}\n                />\n              </div>\n            </div>\n            <div className={classes.appKind}>\n              <Typography className={classes.appInfoText}>appkind:</Typography>\n              <div className={classes.inputField}>\n                <InputField\n                  label=\"appkind\"\n                  styles={{\n                    width: '100%',\n                  }}\n                  data-cy=\"inputWorkflow\"\n                  validationError={false}\n                  handleChange={(event) =>\n                    setAppInfo({\n                      ...appInfo,\n                      appkind: event.target.value.toLowerCase(),\n                    })\n                  }\n                  value={appInfo.appkind}\n                />\n              </div>\n            </div>\n            <div className={classes.appKind}>\n              <Typography className={classes.appInfoText}>\n                annotationCheck:\n              </Typography>\n              <div className={classes.inputField}>\n                <InputField\n                  label=\"annotationCheck\"\n                  styles={{\n                    width: '100%',\n                  }}\n                  data-cy=\"inputWorkflow\"\n                  validationError={false}\n                  handleChange={(event) => setAnnotation(event.target.value)}\n                  value={annotation}\n                />\n              </div>\n            </div>\n            <hr className={classes.horizontalLine} />\n            <Typography className={classes.envHeader}>\n              {t('customWorkflow.tuneExperiment.envText')}\n            </Typography>\n            {env.map((data, index) => (\n              <div className={classes.inputDiv}>\n                <Typography className={classes.envName}>{data.name}</Typography>\n                <InputField\n                  label=\"Value\"\n                  styles={{\n                    width: '40%',\n                  }}\n                  data-cy=\"inputWorkflow\"\n                  validationError={false}\n                  handleChange={(event) => changeOriginalEnvValue(index, event)}\n                  value={data.value}\n                />\n              </div>\n            ))}\n            <hr className={classes.horizontalLine} />\n          </div>\n        )}\n        <div className={classes.customEnvDiv}>\n          <Typography className={classes.envHeader}>\n            {t('customWorkflow.tuneExperiment.customEnvText')}\n          </Typography>\n          {overrideEnvs.map((data, index) => (\n            <div className={classes.inputDivEnv}>\n              <InputField\n                label=\"Key\"\n                styles={{\n                  width: '40%',\n                }}\n                data-cy=\"inputWorkflow\"\n                validationError={false}\n                handleChange={(event) => changeKey(index, event)}\n                value={data.name}\n              />\n              <InputField\n                label=\"Value\"\n                styles={{\n                  width: '40%',\n                }}\n                data-cy=\"inputWorkflow\"\n                validationError={false}\n                handleChange={(event) => changeValue(index, event)}\n                value={data.value}\n              />\n              {overrideEnvs[index + 1] ? null : (\n                <div className={classes.addEnvBtn}>\n                  <ButtonFilled\n                    handleClick={() => {\n                      AddEnvPair();\n                    }}\n                    isPrimary={false}\n                    isDisabled={\n                      !!(\n                        overrideEnvs[index].name === '' ||\n                        overrideEnvs[index].value === ''\n                      )\n                    }\n                  >\n                    {t('customWorkflow.tuneExperiment.addEnv')}\n                  </ButtonFilled>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className={classes.nextBtn}>\n        <ButtonFilled\n          handleClick={() => {\n            handleEnvModification();\n            gotoStep(2);\n          }}\n          isPrimary\n          isDisabled={loadingEnv}\n        >\n          <div>\n            <img\n              alt=\"next\"\n              src=\"/icons/tick.svg\"\n              className={classes.nextArrow}\n            />\n            {t('customWorkflow.tuneExperiment.addExp')}\n          </div>\n        </ButtonFilled>\n      </div>\n    </div>\n  );\n};\nexport default TuneCustomWorkflow;\n"]},"metadata":{},"sourceType":"module"}