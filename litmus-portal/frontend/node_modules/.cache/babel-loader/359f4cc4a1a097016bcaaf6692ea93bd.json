{"ast":null,"code":"import _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseCluster/TableData.tsx\";\n\nimport { TableCell, Typography, IconButton } from '@material-ui/core';\nimport React from 'react';\nimport moment from 'moment';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport { history } from '../../../redux/configureStore';\nimport timeDifferenceForDate from '../../../utils/datesModifier';\nimport Unimodal from '../../../containers/layouts/Unimodal';\nimport ButtonFilled from '../../../components/Button/ButtonFilled';\nimport ButtonOutline from '../../../components/Button/ButtonOutline';\n\nvar TableData = function TableData(_ref) {\n  var data = _ref.data,\n      deleteRow = _ref.deleteRow;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // Function to convert UNIX time in format of DD MMM YYY\n\n\n  var formatDate = function formatDate(date) {\n    var updated = new Date(parseInt(date, 10) * 1000).toString();\n    var resDate = moment(updated).format('DD MMM YYYY');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleClick = function handleClick() {\n    setOpen(true);\n  };\n\n  var userRole = useSelector(function (state) {\n    return state.userData.userRole;\n  });\n\n  var handleClose = function handleClose() {\n    deleteRow(data.cluster_id);\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.tableDataStatus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, data.is_cluster_confirmed === false ? /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.check, \" \").concat(classes.pending),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, t('workflowCluster.header.formControl.menu6')) : data.is_cluster_confirmed === true && data.is_active ? /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.check, \" \").concat(classes.active),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, t('workflowCluster.header.formControl.menu1')) : /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.check, \" \").concat(classes.notactive),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, t('workflowCluster.header.formControl.menu2'))), /*#__PURE__*/React.createElement(TableCell, {\n    key: data.cluster_id,\n    onClick: function onClick() {\n      history.push({\n        pathname: '/targets/cluster',\n        state: {\n          data\n        }\n      });\n    },\n    className: classes.workflowNameData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, data.cluster_name))), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.stepsDataTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, formatDate(data.updated_at)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.stepsData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, data.no_of_schedules)), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.stepsDataschedule,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, data.no_of_workflows)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, timeDifferenceForDate(data.updated_at)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.deleteCluster,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"delete\",\n    src: \"./icons/bin-red.svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, t('targets.modalDelete.delete')))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, open ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Unimodal, {\n    open: open,\n    handleClose: function handleClose() {\n      setOpen(false);\n    },\n    hasCloseBtn: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/bin-red-delete.svg\",\n    alt: \"Delete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typo,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, t('targets.modalDelete.head1'), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 56\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }\n  }, \" \", t('targets.modalDelete.head2')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.textSecond,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typoSub,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, t('targets.modalDelete.head3'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutline, {\n    isDisabled: false,\n    handleClick: function handleClick() {\n      setOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, \" \", t('targets.modalDelete.no'))), /*#__PURE__*/React.createElement(ButtonFilled, {\n    isDisabled: userRole === 'Viewer',\n    isPrimary: true,\n    handleClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, t('targets.modalDelete.yes'))))))) : null)));\n};\n\nexport default TableData;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseCluster/TableData.tsx"],"names":["TableCell","Typography","IconButton","React","moment","useTranslation","useSelector","useStyles","history","timeDifferenceForDate","Unimodal","ButtonFilled","ButtonOutline","TableData","data","deleteRow","classes","t","formatDate","date","updated","Date","parseInt","toString","resDate","format","useState","open","setOpen","handleClick","userRole","state","userData","handleClose","cluster_id","tableDataStatus","is_cluster_confirmed","check","pending","is_active","active","notactive","push","pathname","workflowNameData","cluster_name","stepsDataTime","updated_at","stepsData","no_of_schedules","stepsDataschedule","no_of_workflows","deleteCluster","body","text","typo","textSecond","typoSub","buttonGroup"],"mappings":"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","sourcesContent":["import { TableCell, Typography, IconButton } from '@material-ui/core';\nimport React from 'react';\nimport moment from 'moment';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport { Cluster } from '../../../models/graphql/clusterData';\nimport { history } from '../../../redux/configureStore';\nimport timeDifferenceForDate from '../../../utils/datesModifier';\nimport Unimodal from '../../../containers/layouts/Unimodal';\nimport ButtonFilled from '../../../components/Button/ButtonFilled';\nimport ButtonOutline from '../../../components/Button/ButtonOutline';\nimport { RootState } from '../../../redux/reducers';\n\ninterface TableDataProps {\n  data: Cluster;\n  deleteRow: (clid: string) => void;\n}\n\nconst TableData: React.FC<TableDataProps> = ({ data, deleteRow }) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('DD MMM YYYY');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n  const userRole = useSelector((state: RootState) => state.userData.userRole);\n\n  const handleClose = () => {\n    deleteRow(data.cluster_id);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <TableCell className={classes.tableDataStatus}>\n        {data.is_cluster_confirmed === false ? (\n          <Typography className={`${classes.check} ${classes.pending}`}>\n            {t('workflowCluster.header.formControl.menu6')}\n          </Typography>\n        ) : data.is_cluster_confirmed === true && data.is_active ? (\n          <Typography className={`${classes.check} ${classes.active}`}>\n            {t('workflowCluster.header.formControl.menu1')}\n          </Typography>\n        ) : (\n          <Typography className={`${classes.check} ${classes.notactive}`}>\n            {t('workflowCluster.header.formControl.menu2')}\n          </Typography>\n        )}\n      </TableCell>\n      <TableCell\n        key={data.cluster_id}\n        onClick={() => {\n          history.push({ pathname: '/targets/cluster', state: { data } });\n        }}\n        className={classes.workflowNameData}\n      >\n        <IconButton size=\"small\">\n          <Typography>{data.cluster_name}</Typography>\n        </IconButton>\n      </TableCell>\n      <TableCell className={classes.stepsDataTime}>\n        {formatDate(data.updated_at)}\n      </TableCell>\n      <TableCell>\n        <Typography className={classes.stepsData}>\n          {data.no_of_schedules}\n        </Typography>\n      </TableCell>\n      <TableCell className={classes.stepsDataschedule}>\n        <Typography>{data.no_of_workflows}</Typography>\n      </TableCell>\n      <TableCell>{timeDifferenceForDate(data.updated_at)}</TableCell>\n      <TableCell>\n        <div className={classes.deleteCluster}>\n          <div>\n            <IconButton onClick={handleClick}>\n              <img alt=\"delete\" src=\"./icons/bin-red.svg\" />\n            </IconButton>\n          </div>\n          <div>\n            <Typography>{t('targets.modalDelete.delete')}</Typography>\n          </div>\n        </div>\n        <div>\n          {open ? (\n            <div>\n              <Unimodal\n                open={open}\n                handleClose={() => {\n                  setOpen(false);\n                }}\n                hasCloseBtn\n              >\n                <div className={classes.body}>\n                  <img src=\"/icons/bin-red-delete.svg\" alt=\"Delete\" />\n                  <div className={classes.text}>\n                    <Typography className={classes.typo} align=\"center\">\n                      {t('targets.modalDelete.head1')} <br />\n                      <strong> {t('targets.modalDelete.head2')}</strong>\n                    </Typography>\n                  </div>\n                  <div className={classes.textSecond}>\n                    <Typography className={classes.typoSub} align=\"center\">\n                      {t('targets.modalDelete.head3')}\n                    </Typography>\n                  </div>\n                  <div className={classes.buttonGroup}>\n                    <ButtonOutline\n                      isDisabled={false}\n                      handleClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <> {t('targets.modalDelete.no')}</>\n                    </ButtonOutline>\n\n                    <ButtonFilled\n                      isDisabled={userRole === 'Viewer'}\n                      isPrimary\n                      handleClick={handleClose}\n                    >\n                      <>{t('targets.modalDelete.yes')}</>\n                    </ButtonFilled>\n                  </div>\n                </div>\n              </Unimodal>\n            </div>\n          ) : null}\n        </div>\n      </TableCell>\n    </>\n  );\n};\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}