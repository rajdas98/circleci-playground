{"ast":null,"code":"import _objectSpread from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseSchedule/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport { FormControl, IconButton, InputAdornment, InputBase, InputLabel, MenuItem, Paper, Select, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography } from '@material-ui/core';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Loader from '../../../components/Loader';\nimport { SCHEDULE_DETAILS, DELETE_SCHEDULE } from '../../../graphql';\nimport { sortAlphaAsc, sortAlphaDesc, sortNumAsc, sortNumDesc } from '../../../utils/sort';\nimport useStyles from './styles';\nimport TableData from './TableData';\n\nvar BrowseSchedule = function BrowseSchedule() {\n  _s();\n\n  var _filteredData$length;\n\n  var classes = useStyles();\n  var selectedProjectID = useSelector(function (state) {\n    return state.userData.selectedProjectID;\n  }); // Apollo query to get the scheduled data\n\n  var _useQuery = useQuery(SCHEDULE_DETAILS, {\n    variables: {\n      projectID: selectedProjectID\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // Apollo mutation to delete the selected schedule\n\n\n  var _useMutation = useMutation(DELETE_SCHEDULE, {\n    refetchQueries: [{\n      query: SCHEDULE_DETAILS,\n      variables: {\n        projectID: selectedProjectID\n      }\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      deleteSchedule = _useMutation2[0]; // State for search and filtering\n\n\n  var _React$useState = React.useState({\n    search: '',\n    cluster: 'All'\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      filter = _React$useState2[0],\n      setFilter = _React$useState2[1]; // State for pagination\n\n\n  var _useState = useState({\n    pageNo: 0,\n    rowsPerPage: 5\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      paginationData = _useState2[0],\n      setPaginationData = _useState2[1]; // State for sorting\n\n\n  var _useState3 = useState({\n    name: {\n      sort: false,\n      ascending: true\n    },\n    startDate: {\n      sort: true,\n      ascending: true\n    }\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sortData = _useState4[0],\n      setSortData = _useState4[1];\n\n  var getClusters = function getClusters(searchingData) {\n    var uniqueList = [];\n    searchingData.forEach(function (data) {\n      if (!uniqueList.includes(data.cluster_name)) {\n        uniqueList.push(data.cluster_name);\n      }\n    });\n    return uniqueList;\n  };\n\n  var filteredData = data === null || data === void 0 ? void 0 : data.getScheduledWorkflows.filter(function (dataRow) {\n    return dataRow.workflow_name.toLowerCase().includes(filter.search.toLowerCase());\n  }).filter(function (dataRow) {\n    return filter.cluster === 'All' ? true : dataRow.cluster_name.toLowerCase().includes(filter.cluster.toLowerCase());\n  }).sort(function (a, b) {\n    // Sorting based on unique fields\n    if (sortData.name.sort) {\n      var x = a.workflow_name;\n      var y = b.workflow_name;\n      return sortData.name.ascending ? sortAlphaAsc(x, y) : sortAlphaDesc(x, y);\n    }\n\n    if (sortData.startDate.sort) {\n      var _x = parseInt(a.updated_at, 10);\n\n      var _y = parseInt(b.updated_at, 10);\n\n      return sortData.startDate.ascending ? sortNumAsc(_y, _x) : sortNumDesc(_y, _x);\n    }\n\n    return 0;\n  });\n\n  var deleteRow = function deleteRow(wfid) {\n    deleteSchedule({\n      variables: {\n        workflow_id: wfid\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"Heading section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headerSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    id: \"input-with-icon-adornment\",\n    placeholder: \"Search\",\n    className: classes.search,\n    value: filter.search,\n    onChange: function onChange(event) {\n      return setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        search: event.target.value\n      }));\n    },\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    color: \"secondary\",\n    focused: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.selectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"Target Cluster\"), /*#__PURE__*/React.createElement(Select, {\n    value: filter.cluster,\n    onChange: function onChange(event) {\n      return setFilter(_objectSpread(_objectSpread({}, filter), {}, {\n        cluster: event.target.value\n      }));\n    },\n    label: \"Target Cluster\",\n    className: classes.selectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"All\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, \"All\"), (data ? getClusters(data === null || data === void 0 ? void 0 : data.getScheduledWorkflows) : []).map(function (cluster) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: cluster,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, cluster);\n  }))))), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    \"data-cy\": \"browseScheduleTable\",\n    className: classes.tableMain,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"simple table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    className: classes.tableHead,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.workflowName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      paddingLeft: 30,\n      paddingTop: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, \"Schedule Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sortDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"sort name ascending\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setSortData(_objectSpread(_objectSpread({}, sortData), {}, {\n        name: {\n          sort: false,\n          ascending: false\n        },\n        startDate: {\n          sort: false,\n          ascending: false\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ExpandLessIcon, {\n    fontSize: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"sort name descending\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setSortData(_objectSpread(_objectSpread({}, sortData), {}, {\n        name: {\n          sort: false,\n          ascending: true\n        },\n        startDate: {\n          sort: true,\n          ascending: true\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n    fontSize: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.headerStatus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      paddingTop: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, \"Starting Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sortDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"sort last run ascending\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setSortData(_objectSpread(_objectSpread({}, sortData), {}, {\n        startDate: {\n          sort: true,\n          ascending: true\n        },\n        name: {\n          sort: false,\n          ascending: true\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ExpandLessIcon, {\n    fontSize: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"sort last run descending\",\n    size: \"small\",\n    onClick: function onClick() {\n      return setSortData(_objectSpread(_objectSpread({}, sortData), {}, {\n        startDate: {\n          sort: true,\n          ascending: false\n        },\n        name: {\n          sort: false,\n          ascending: true\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n    fontSize: \"inherit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.regularity,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 19\n    }\n  }, \"Regularity\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.targetCluster,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 19\n    }\n  }, \"Cluster\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.showExp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 19\n    }\n  }, \"Show Experiments\")), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, loading ? /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }))) : error ? /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    \"data-cy\": \"browseScheduleError\",\n    colSpan: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 21\n    }\n  }, \"Unable to fetch data\"))) : filteredData && filteredData.length ? filteredData.slice(paginationData.pageNo * paginationData.rowsPerPage, paginationData.pageNo * paginationData.rowsPerPage + paginationData.rowsPerPage).map(function (data) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      \"data-cy\": \"browseScheduleData\",\n      key: data.workflow_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableData, {\n      data: data,\n      deleteRow: deleteRow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 23\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    \"data-cy\": \"browseScheduleNoData\",\n    colSpan: 7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }\n  }, \"No records available\")))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: (_filteredData$length = filteredData === null || filteredData === void 0 ? void 0 : filteredData.length) !== null && _filteredData$length !== void 0 ? _filteredData$length : 0,\n    rowsPerPage: paginationData.rowsPerPage,\n    page: paginationData.pageNo,\n    onChangePage: function onChangePage(_, page) {\n      return setPaginationData(_objectSpread(_objectSpread({}, paginationData), {}, {\n        pageNo: page\n      }));\n    },\n    onChangeRowsPerPage: function onChangeRowsPerPage(event) {\n      setPaginationData(_objectSpread(_objectSpread({}, paginationData), {}, {\n        pageNo: 0,\n        rowsPerPage: parseInt(event.target.value, 10)\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(BrowseSchedule, \"pHePIqc0sUgFs0bZuaWkvOi5wck=\", false, function () {\n  return [useStyles, useSelector, useQuery, useMutation];\n});\n\n_c = BrowseSchedule;\nexport default BrowseSchedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseSchedule\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseSchedule/index.tsx"],"names":["useMutation","useQuery","FormControl","IconButton","InputAdornment","InputBase","InputLabel","MenuItem","Paper","Select","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Typography","ExpandLessIcon","ExpandMoreIcon","SearchIcon","React","useState","useSelector","Loader","SCHEDULE_DETAILS","DELETE_SCHEDULE","sortAlphaAsc","sortAlphaDesc","sortNumAsc","sortNumDesc","useStyles","TableData","BrowseSchedule","classes","selectedProjectID","state","userData","variables","projectID","fetchPolicy","data","loading","error","refetchQueries","query","deleteSchedule","search","cluster","filter","setFilter","pageNo","rowsPerPage","paginationData","setPaginationData","name","sort","ascending","startDate","sortData","setSortData","getClusters","searchingData","uniqueList","forEach","includes","cluster_name","push","filteredData","getScheduledWorkflows","dataRow","workflow_name","toLowerCase","a","b","x","y","parseInt","updated_at","deleteRow","wfid","workflow_id","headerSection","event","target","value","formControl","selectText","map","root","tableMain","tableHead","workflowName","display","flexDirection","paddingLeft","paddingTop","sortDiv","headerStatus","regularity","targetCluster","showExp","length","slice","_","page"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client';\nimport {\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Loader from '../../../components/Loader';\nimport { SCHEDULE_DETAILS, DELETE_SCHEDULE } from '../../../graphql';\nimport {\n  DeleteSchedule,\n  ScheduleDataVars,\n  Schedules,\n  ScheduleWorkflow,\n} from '../../../models/graphql/scheduleData';\nimport { RootState } from '../../../redux/reducers';\nimport {\n  sortAlphaAsc,\n  sortAlphaDesc,\n  sortNumAsc,\n  sortNumDesc,\n} from '../../../utils/sort';\nimport useStyles from './styles';\nimport TableData from './TableData';\n\ninterface FilterOption {\n  search: string;\n  cluster: string;\n}\ninterface PaginationData {\n  pageNo: number;\n  rowsPerPage: number;\n}\ninterface SortData {\n  startDate: { sort: boolean; ascending: boolean };\n  name: { sort: boolean; ascending: boolean };\n}\n\nconst BrowseSchedule = () => {\n  const classes = useStyles();\n  const selectedProjectID = useSelector(\n    (state: RootState) => state.userData.selectedProjectID\n  );\n\n  // Apollo query to get the scheduled data\n  const { data, loading, error } = useQuery<Schedules, ScheduleDataVars>(\n    SCHEDULE_DETAILS,\n    {\n      variables: { projectID: selectedProjectID },\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  // Apollo mutation to delete the selected schedule\n  const [deleteSchedule] = useMutation<DeleteSchedule>(DELETE_SCHEDULE, {\n    refetchQueries: [\n      { query: SCHEDULE_DETAILS, variables: { projectID: selectedProjectID } },\n    ],\n  });\n\n  // State for search and filtering\n  const [filter, setFilter] = React.useState<FilterOption>({\n    search: '',\n    cluster: 'All',\n  });\n\n  // State for pagination\n  const [paginationData, setPaginationData] = useState<PaginationData>({\n    pageNo: 0,\n    rowsPerPage: 5,\n  });\n\n  // State for sorting\n  const [sortData, setSortData] = useState<SortData>({\n    name: { sort: false, ascending: true },\n    startDate: { sort: true, ascending: true },\n  });\n\n  const getClusters = (searchingData: ScheduleWorkflow[]) => {\n    const uniqueList: string[] = [];\n    searchingData.forEach((data) => {\n      if (!uniqueList.includes(data.cluster_name)) {\n        uniqueList.push(data.cluster_name);\n      }\n    });\n    return uniqueList;\n  };\n\n  const filteredData = data?.getScheduledWorkflows\n    .filter((dataRow) =>\n      dataRow.workflow_name.toLowerCase().includes(filter.search.toLowerCase())\n    )\n    .filter((dataRow) =>\n      filter.cluster === 'All'\n        ? true\n        : dataRow.cluster_name\n            .toLowerCase()\n            .includes(filter.cluster.toLowerCase())\n    )\n    .sort((a: ScheduleWorkflow, b: ScheduleWorkflow) => {\n      // Sorting based on unique fields\n      if (sortData.name.sort) {\n        const x = a.workflow_name;\n        const y = b.workflow_name;\n        return sortData.name.ascending\n          ? sortAlphaAsc(x, y)\n          : sortAlphaDesc(x, y);\n      }\n      if (sortData.startDate.sort) {\n        const x = parseInt(a.updated_at, 10);\n        const y = parseInt(b.updated_at, 10);\n        return sortData.startDate.ascending\n          ? sortNumAsc(y, x)\n          : sortNumDesc(y, x);\n      }\n      return 0;\n    });\n\n  const deleteRow = (wfid: string) => {\n    deleteSchedule({\n      variables: { workflow_id: wfid },\n    });\n  };\n  return (\n    <div>\n      <section className=\"Heading section\">\n        <div className={classes.headerSection}>\n          {/* Search Field */}\n          <InputBase\n            id=\"input-with-icon-adornment\"\n            placeholder=\"Search\"\n            className={classes.search}\n            value={filter.search}\n            onChange={(event) =>\n              setFilter({ ...filter, search: event.target.value as string })\n            }\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            }\n          />\n          {/* Select Cluster */}\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            color=\"secondary\"\n            focused\n          >\n            <InputLabel className={classes.selectText}>\n              Target Cluster\n            </InputLabel>\n            <Select\n              value={filter.cluster}\n              onChange={(event) =>\n                setFilter({ ...filter, cluster: event.target.value as string })\n              }\n              label=\"Target Cluster\"\n              className={classes.selectText}\n            >\n              <MenuItem value=\"All\">All</MenuItem>\n              {(data ? getClusters(data?.getScheduledWorkflows) : []).map(\n                (cluster: any) => (\n                  <MenuItem value={cluster}>{cluster}</MenuItem>\n                )\n              )}\n            </Select>\n          </FormControl>\n        </div>\n      </section>\n      <Paper className={classes.root}>\n        {/* Table Header */}\n        <TableContainer\n          data-cy=\"browseScheduleTable\"\n          className={classes.tableMain}\n        >\n          <Table stickyHeader aria-label=\"simple table\">\n            <TableHead>\n              <TableRow className={classes.tableHead}>\n                {/* WorkFlow Name */}\n                <TableCell className={classes.workflowName}>\n                  <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    <Typography style={{ paddingLeft: 30, paddingTop: 12 }}>\n                      Schedule Name\n                    </Typography>\n                    <div className={classes.sortDiv}>\n                      <IconButton\n                        aria-label=\"sort name ascending\"\n                        size=\"small\"\n                        onClick={() =>\n                          setSortData({\n                            ...sortData,\n                            name: { sort: false, ascending: false },\n                            startDate: { sort: false, ascending: false },\n                          })\n                        }\n                      >\n                        <ExpandLessIcon fontSize=\"inherit\" />\n                      </IconButton>\n                      <IconButton\n                        aria-label=\"sort name descending\"\n                        size=\"small\"\n                        onClick={() =>\n                          setSortData({\n                            ...sortData,\n                            name: { sort: false, ascending: true },\n                            startDate: { sort: true, ascending: true },\n                          })\n                        }\n                      >\n                        <ExpandMoreIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    </div>\n                  </div>\n                </TableCell>\n\n                {/* Starting Date */}\n                <TableCell className={classes.headerStatus}>\n                  <div style={{ display: 'flex', flexDirection: 'row' }}>\n                    <Typography style={{ paddingTop: 12 }}>\n                      Starting Date\n                    </Typography>\n                    <div className={classes.sortDiv}>\n                      <IconButton\n                        aria-label=\"sort last run ascending\"\n                        size=\"small\"\n                        onClick={() =>\n                          setSortData({\n                            ...sortData,\n                            startDate: { sort: true, ascending: true },\n                            name: { sort: false, ascending: true },\n                          })\n                        }\n                      >\n                        <ExpandLessIcon fontSize=\"inherit\" />\n                      </IconButton>\n                      <IconButton\n                        aria-label=\"sort last run descending\"\n                        size=\"small\"\n                        onClick={() =>\n                          setSortData({\n                            ...sortData,\n                            startDate: { sort: true, ascending: false },\n                            name: { sort: false, ascending: true },\n                          })\n                        }\n                      >\n                        <ExpandMoreIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    </div>\n                  </div>\n                </TableCell>\n\n                {/* Regularity */}\n                <TableCell>\n                  <Typography className={classes.regularity}>\n                    Regularity\n                  </Typography>\n                </TableCell>\n\n                {/* Cluster */}\n                <TableCell>\n                  <Typography className={classes.targetCluster}>\n                    Cluster\n                  </Typography>\n                </TableCell>\n\n                {/* Show Experiments */}\n                <TableCell>\n                  <Typography className={classes.showExp}>\n                    Show Experiments\n                  </Typography>\n                </TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {loading ? (\n                <TableRow>\n                  <TableCell colSpan={7}>\n                    <Loader />\n                  </TableCell>\n                </TableRow>\n              ) : error ? (\n                <TableRow>\n                  <TableCell data-cy=\"browseScheduleError\" colSpan={7}>\n                    <Typography align=\"center\">Unable to fetch data</Typography>\n                  </TableCell>\n                </TableRow>\n              ) : filteredData && filteredData.length ? (\n                filteredData\n                  .slice(\n                    paginationData.pageNo * paginationData.rowsPerPage,\n                    paginationData.pageNo * paginationData.rowsPerPage +\n                      paginationData.rowsPerPage\n                  )\n                  .map((data: ScheduleWorkflow) => (\n                    <TableRow\n                      data-cy=\"browseScheduleData\"\n                      key={data.workflow_id}\n                    >\n                      <TableData data={data} deleteRow={deleteRow} />\n                    </TableRow>\n                  ))\n              ) : (\n                <TableRow>\n                  <TableCell data-cy=\"browseScheduleNoData\" colSpan={7}>\n                    <Typography align=\"center\">No records available</Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        {/* Pagination Section */}\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={filteredData?.length ?? 0}\n          rowsPerPage={paginationData.rowsPerPage}\n          page={paginationData.pageNo}\n          onChangePage={(_, page) =>\n            setPaginationData({ ...paginationData, pageNo: page })\n          }\n          onChangeRowsPerPage={(event) => {\n            setPaginationData({\n              ...paginationData,\n              pageNo: 0,\n              rowsPerPage: parseInt(event.target.value, 10),\n            });\n          }}\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default BrowseSchedule;\n"]},"metadata":{},"sourceType":"module"}