{"ast":null,"code":"import _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/InputField/index.tsx\";\n\nimport { TextField } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport React, { useState } from 'react';\nimport { useStyles, useStylesLitmus } from './styles';\n\nvar InputField = function InputField(_ref) {\n  var type = _ref.type,\n      label = _ref.label,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      helperText = _ref.helperText,\n      validationError = _ref.validationError,\n      styles = _ref.styles,\n      success = _ref.success,\n      required = _ref.required,\n      iconType = _ref.iconType,\n      handleChange = _ref.handleChange,\n      onKeyPress = _ref.onKeyPress;\n  var LitmusTextFieldStylesExternal = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPassword = _useState2[0],\n      setShowPassword = _useState2[1];\n\n  var classes = useStylesLitmus(success);\n\n  var handleClickShowPassword = function handleClickShowPassword() {\n    setShowPassword(true);\n  };\n\n  var handleMouseDownPassword = function handleMouseDownPassword(event) {\n    event.preventDefault();\n    setShowPassword(false);\n  };\n\n  if (type === 'password' && validationError === false) {\n    return /*#__PURE__*/React.createElement(TextField, {\n      className: LitmusTextFieldStylesExternal.inputArea,\n      label: label,\n      helperText: helperText,\n      value: value,\n      type: showPassword ? 'text' : 'password',\n      required: required,\n      onChange: handleChange,\n      variant: \"filled\",\n      style: styles,\n      onKeyPress: onKeyPress,\n      InputProps: {\n        classes,\n        disableUnderline: true,\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleClickShowPassword,\n          onMouseDown: handleMouseDownPassword,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }\n        }, showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 35\n          }\n        }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 52\n          }\n        })))\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (type === 'password' && validationError === true) {\n    return /*#__PURE__*/React.createElement(TextField, {\n      onKeyPress: onKeyPress,\n      className: LitmusTextFieldStylesExternal.inputArea,\n      error: true,\n      label: label,\n      helperText: helperText,\n      value: value,\n      type: showPassword ? 'text' : 'password',\n      required: required,\n      onChange: handleChange,\n      style: styles,\n      variant: \"filled\",\n      InputProps: {\n        classes,\n        disableUnderline: true,\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleClickShowPassword,\n          onMouseDown: handleMouseDownPassword,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }\n        }, showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 35\n          }\n        }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 52\n          }\n        })))\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (iconType) {\n    if (iconType === 'iconLeft' && validationError === false) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPress,\n        className: LitmusTextFieldStylesExternal.inputArea,\n        label: label,\n        helperText: helperText,\n        value: value,\n        type: type,\n        required: required,\n        style: styles,\n        onChange: handleChange,\n        variant: \"filled\",\n        InputProps: {\n          classes,\n          disableUnderline: true,\n          startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"start\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(AccountCircle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (iconType === 'iconLeft' && validationError === true) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPress,\n        className: LitmusTextFieldStylesExternal.inputArea,\n        error: true,\n        label: label,\n        helperText: helperText,\n        value: value,\n        type: type,\n        style: styles,\n        required: required,\n        onChange: handleChange,\n        variant: \"filled\",\n        InputProps: {\n          classes,\n          disableUnderline: true,\n          startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"start\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(AccountCircle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (iconType === 'iconRight' && validationError === false) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPress,\n        className: LitmusTextFieldStylesExternal.inputArea,\n        label: label,\n        helperText: helperText,\n        value: value,\n        type: type,\n        style: styles,\n        required: required,\n        onChange: handleChange,\n        variant: \"filled\",\n        InputProps: {\n          classes,\n          disableUnderline: true,\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(AccountCircle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (iconType === 'iconRight' && validationError === false && success === true) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPress,\n        className: LitmusTextFieldStylesExternal.inputArea,\n        label: label,\n        helperText: helperText,\n        value: value,\n        type: type,\n        required: required,\n        style: styles,\n        onChange: handleChange,\n        variant: \"filled\",\n        InputProps: {\n          classes,\n          disableUnderline: true,\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(AccountCircle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (iconType === 'iconRight' && validationError === true) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPress,\n        className: LitmusTextFieldStylesExternal.inputArea,\n        error: true,\n        label: label,\n        helperText: helperText,\n        value: value,\n        type: type,\n        style: styles,\n        required: required,\n        onChange: handleChange,\n        variant: \"filled\",\n        InputProps: {\n          classes,\n          disableUnderline: true,\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: \"/icons/closeFilled.svg\",\n            alt: \"Error\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (iconType === 'iconLeftRight' && validationError === false) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPress,\n        className: LitmusTextFieldStylesExternal.inputArea,\n        label: label,\n        helperText: helperText,\n        value: value,\n        type: type,\n        style: styles,\n        required: required,\n        onChange: handleChange,\n        variant: \"filled\",\n        InputProps: {\n          classes,\n          disableUnderline: true,\n          startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"start\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(AccountCircle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }\n          })),\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(AccountCircle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (iconType === 'iconLeftRight' && validationError === true) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        onKeyPress: onKeyPress,\n        className: LitmusTextFieldStylesExternal.inputArea,\n        error: true,\n        label: label,\n        helperText: helperText,\n        value: value,\n        type: type,\n        style: styles,\n        required: required,\n        onChange: handleChange,\n        variant: \"filled\",\n        InputProps: {\n          classes,\n          disableUnderline: true,\n          startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"start\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(AccountCircle, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }\n          })),\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: \"/icons/closeFilled.svg\",\n            alt: \"Error\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }\n          }))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(TextField, {\n    onKeyPress: onKeyPress,\n    className: LitmusTextFieldStylesExternal.inputArea,\n    error: validationError,\n    disabled: disabled,\n    label: label,\n    helperText: helperText,\n    value: value,\n    type: type,\n    style: styles,\n    required: required,\n    onChange: handleChange,\n    variant: \"filled\",\n    InputProps: {\n      classes,\n      disableUnderline: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default InputField;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/InputField/index.tsx"],"names":["TextField","IconButton","InputAdornment","AccountCircle","Visibility","VisibilityOff","React","useState","useStyles","useStylesLitmus","InputField","type","label","value","disabled","helperText","validationError","styles","success","required","iconType","handleChange","onKeyPress","LitmusTextFieldStylesExternal","showPassword","setShowPassword","classes","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","inputArea","disableUnderline","endAdornment","startAdornment"],"mappings":"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","sourcesContent":["import { OutlinedInputProps, TextField } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport React, { useState } from 'react';\nimport { useStyles, useStylesLitmus } from './styles';\n\ninterface InputFieldProps {\n  label: string;\n  type?: string;\n  helperText?: string;\n  validationError: boolean;\n  success?: boolean;\n  disabled?: boolean;\n  value: string;\n  required?: boolean;\n  iconType?: string | undefined;\n  styles?: Object;\n  handleChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (event: React.KeyboardEvent) => void;\n}\n\nconst InputField: React.FC<InputFieldProps> = ({\n  type,\n  label,\n  value,\n  disabled,\n  helperText,\n  validationError,\n  styles,\n  success,\n  required,\n  iconType,\n  handleChange,\n  onKeyPress,\n}) => {\n  const LitmusTextFieldStylesExternal = useStyles();\n\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n\n  const classes = useStylesLitmus(success);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(true);\n  };\n\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault();\n    setShowPassword(false);\n  };\n\n  if (type === 'password' && validationError === false) {\n    return (\n      <TextField\n        className={LitmusTextFieldStylesExternal.inputArea}\n        label={label}\n        helperText={helperText}\n        value={value}\n        type={showPassword ? 'text' : 'password'}\n        required={required}\n        onChange={handleChange}\n        variant=\"filled\"\n        style={styles}\n        onKeyPress={onKeyPress}\n        InputProps={\n          {\n            classes,\n            disableUnderline: true,\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          } as Partial<OutlinedInputProps>\n        }\n      />\n    );\n  }\n  if (type === 'password' && validationError === true) {\n    return (\n      <TextField\n        onKeyPress={onKeyPress}\n        className={LitmusTextFieldStylesExternal.inputArea}\n        error\n        label={label}\n        helperText={helperText}\n        value={value}\n        type={showPassword ? 'text' : 'password'}\n        required={required}\n        onChange={handleChange}\n        style={styles}\n        variant=\"filled\"\n        InputProps={\n          {\n            classes,\n            disableUnderline: true,\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          } as Partial<OutlinedInputProps>\n        }\n      />\n    );\n  }\n\n  if (iconType) {\n    if (iconType === 'iconLeft' && validationError === false) {\n      return (\n        <TextField\n          onKeyPress={onKeyPress}\n          className={LitmusTextFieldStylesExternal.inputArea}\n          label={label}\n          helperText={helperText}\n          value={value}\n          type={type}\n          required={required}\n          style={styles}\n          onChange={handleChange}\n          variant=\"filled\"\n          InputProps={\n            {\n              classes,\n              disableUnderline: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            } as Partial<OutlinedInputProps>\n          }\n        />\n      );\n    }\n    if (iconType === 'iconLeft' && validationError === true) {\n      return (\n        <TextField\n          onKeyPress={onKeyPress}\n          className={LitmusTextFieldStylesExternal.inputArea}\n          error\n          label={label}\n          helperText={helperText}\n          value={value}\n          type={type}\n          style={styles}\n          required={required}\n          onChange={handleChange}\n          variant=\"filled\"\n          InputProps={\n            {\n              classes,\n              disableUnderline: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            } as Partial<OutlinedInputProps>\n          }\n        />\n      );\n    }\n    if (iconType === 'iconRight' && validationError === false) {\n      return (\n        <TextField\n          onKeyPress={onKeyPress}\n          className={LitmusTextFieldStylesExternal.inputArea}\n          label={label}\n          helperText={helperText}\n          value={value}\n          type={type}\n          style={styles}\n          required={required}\n          onChange={handleChange}\n          variant=\"filled\"\n          InputProps={\n            {\n              classes,\n              disableUnderline: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            } as Partial<OutlinedInputProps>\n          }\n        />\n      );\n    }\n    if (\n      iconType === 'iconRight' &&\n      validationError === false &&\n      success === true\n    ) {\n      return (\n        <TextField\n          onKeyPress={onKeyPress}\n          className={LitmusTextFieldStylesExternal.inputArea}\n          label={label}\n          helperText={helperText}\n          value={value}\n          type={type}\n          required={required}\n          style={styles}\n          onChange={handleChange}\n          variant=\"filled\"\n          InputProps={\n            {\n              classes,\n              disableUnderline: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            } as Partial<OutlinedInputProps>\n          }\n        />\n      );\n    }\n    if (iconType === 'iconRight' && validationError === true) {\n      return (\n        <TextField\n          onKeyPress={onKeyPress}\n          className={LitmusTextFieldStylesExternal.inputArea}\n          error\n          label={label}\n          helperText={helperText}\n          value={value}\n          type={type}\n          style={styles}\n          required={required}\n          onChange={handleChange}\n          variant=\"filled\"\n          InputProps={\n            {\n              classes,\n              disableUnderline: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <img src=\"/icons/closeFilled.svg\" alt=\"Error\" />\n                </InputAdornment>\n              ),\n            } as Partial<OutlinedInputProps>\n          }\n        />\n      );\n    }\n    if (iconType === 'iconLeftRight' && validationError === false) {\n      return (\n        <TextField\n          onKeyPress={onKeyPress}\n          className={LitmusTextFieldStylesExternal.inputArea}\n          label={label}\n          helperText={helperText}\n          value={value}\n          type={type}\n          style={styles}\n          required={required}\n          onChange={handleChange}\n          variant=\"filled\"\n          InputProps={\n            {\n              classes,\n              disableUnderline: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            } as Partial<OutlinedInputProps>\n          }\n        />\n      );\n    }\n    if (iconType === 'iconLeftRight' && validationError === true) {\n      return (\n        <TextField\n          onKeyPress={onKeyPress}\n          className={LitmusTextFieldStylesExternal.inputArea}\n          error\n          label={label}\n          helperText={helperText}\n          value={value}\n          type={type}\n          style={styles}\n          required={required}\n          onChange={handleChange}\n          variant=\"filled\"\n          InputProps={\n            {\n              classes,\n              disableUnderline: true,\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <img src=\"/icons/closeFilled.svg\" alt=\"Error\" />\n                </InputAdornment>\n              ),\n            } as Partial<OutlinedInputProps>\n          }\n        />\n      );\n    }\n  }\n\n  return (\n    <TextField\n      onKeyPress={onKeyPress}\n      className={LitmusTextFieldStylesExternal.inputArea}\n      error={validationError}\n      disabled={disabled}\n      label={label}\n      helperText={helperText}\n      value={value}\n      type={type}\n      style={styles}\n      required={required}\n      onChange={handleChange}\n      variant=\"filled\"\n      InputProps={\n        {\n          classes,\n          disableUnderline: true,\n        } as Partial<OutlinedInputProps>\n      }\n    />\n  );\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}