{"ast":null,"code":"var formatCount = function formatCount(count) {\n  if (count) if (count >= 1000000)\n    /*\n    If count provided is greater than or equal to\n    1000000 then round it to the floor value and append\n    an 'M' to the end\n    */\n    return \"\".concat((Math.floor(count / 100000) / 10).toFixed(1), \"M\");\n    /*\n      If count provided is greater than or equal to\n      1000 then round it to the floor value and append\n      a 'k' to the end\n    */\n  else if (count >= 1000) return \"\".concat((Math.floor(count / 100) / 10).toFixed(1), \"k\");else return \"\".concat(count);\n  return '0';\n};\n\nexport default formatCount;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/utils/formatCount.ts"],"names":["formatCount","count","Math","floor","toFixed"],"mappings":"AAAA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAuC;AACzD,MAAIA,KAAJ,EACE,IAAIA,KAAK,IAAI,OAAb;AACE;;;;;AAKA,qBAAU,CAACC,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAG,MAAnB,IAA6B,EAA9B,EAAkCG,OAAlC,CAA0C,CAA1C,CAAV;AACF;;;;;AAPA,OAWQ,IACNH,KAAK,IAAI,IADH,EAGN,iBAAU,CAACC,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAG,GAAnB,IAA0B,EAA3B,EAA+BG,OAA/B,CAAuC,CAAvC,CAAV,OAHM,KAIH,iBAAUH,KAAV;AACP,SAAO,GAAP;AACD,CAnBD;;AAqBA,eAAeD,WAAf","sourcesContent":["const formatCount = (count: number | undefined): string => {\n  if (count)\n    if (count >= 1000000)\n      /*\n      If count provided is greater than or equal to\n      1000000 then round it to the floor value and append\n      an 'M' to the end\n    */\n      return `${(Math.floor(count / 100000) / 10).toFixed(1)}M`;\n    /*\n      If count provided is greater than or equal to\n      1000 then round it to the floor value and append\n      a 'k' to the end\n    */ else if (\n      count >= 1000\n    )\n      return `${(Math.floor(count / 100) / 10).toFixed(1)}k`;\n    else return `${count}`;\n  return '0';\n};\n\nexport default formatCount;\n"]},"metadata":{},"sourceType":"module"}