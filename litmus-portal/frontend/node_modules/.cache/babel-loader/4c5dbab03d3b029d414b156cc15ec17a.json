{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/BreadCrumbs/index.tsx\";\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport capitalize from '../../utils/capitalize';\nimport useStyles from './styles';\n\nvar CustomBreadcrumbs = function CustomBreadcrumbs(_ref) {\n  var location = _ref.location;\n  var pathname = location.split('/');\n  var intermediateRoutes = '/';\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(Breadcrumbs, {\n    \"aria-label\": \"breadcrumb\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, pathname.map(function (path) {\n    if (path) {\n      intermediateRoutes += path; // If Template/Workflow Name is clicked [Workflow / Workflow-name / Template]\n      // it would redirect to /workflows\n\n      if (pathname[2] === 'template' && path === pathname[3]) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 20\n          }\n        }, path);\n      }\n\n      var link = /*#__PURE__*/React.createElement(Link, {\n        key: path,\n        to: intermediateRoutes,\n        className: classes.breadCrumb,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, capitalize(path));\n      intermediateRoutes += '/';\n      return link;\n    }\n\n    return '';\n  }));\n};\n\nexport default CustomBreadcrumbs;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/BreadCrumbs/index.tsx"],"names":["Breadcrumbs","React","Link","capitalize","useStyles","CustomBreadcrumbs","location","pathname","split","intermediateRoutes","classes","map","path","link","breadCrumb"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,+BAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAMA,IAAMC,iBAAmD,GAAG,SAAtDA,iBAAsD,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC5E,MAAMC,QAAkB,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAA3B;AACA,MAAIC,kBAAkB,GAAG,GAAzB;AACA,MAAMC,OAAO,GAAGN,SAAS,EAAzB;AAEA,sBACE,oBAAC,WAAD;AAAa,kBAAW,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QAAQ,CAACI,GAAT,CAAa,UAACC,IAAD,EAAU;AACtB,QAAIA,IAAJ,EAAU;AACRH,MAAAA,kBAAkB,IAAIG,IAAtB,CADQ,CAER;AACA;;AACA,UAAIL,QAAQ,CAAC,CAAD,CAAR,KAAgB,UAAhB,IAA8BK,IAAI,KAAKL,QAAQ,CAAC,CAAD,CAAnD,EAAwD;AACtD,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOK,IAAP,CAAP;AACD;;AACD,UAAMC,IAAI,gBACR,oBAAC,IAAD;AACE,QAAA,GAAG,EAAED,IADP;AAEE,QAAA,EAAE,EAAEH,kBAFN;AAGE,QAAA,SAAS,EAAEC,OAAO,CAACI,UAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGX,UAAU,CAACS,IAAD,CALb,CADF;AASAH,MAAAA,kBAAkB,IAAI,GAAtB;AACA,aAAOI,IAAP;AACD;;AACD,WAAO,EAAP;AACD,GArBA,CADH,CADF;AA0BD,CA/BD;;AAiCA,eAAeR,iBAAf","sourcesContent":["import Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport capitalize from '../../utils/capitalize';\nimport useStyles from './styles';\n\ninterface CustomBreadcrumbsProps {\n  location: string;\n}\n\nconst CustomBreadcrumbs: React.FC<CustomBreadcrumbsProps> = ({ location }) => {\n  const pathname: string[] = location.split('/');\n  let intermediateRoutes = '/';\n  const classes = useStyles();\n\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      {pathname.map((path) => {\n        if (path) {\n          intermediateRoutes += path;\n          // If Template/Workflow Name is clicked [Workflow / Workflow-name / Template]\n          // it would redirect to /workflows\n          if (pathname[2] === 'template' && path === pathname[3]) {\n            return <span>{path}</span>;\n          }\n          const link = (\n            <Link\n              key={path}\n              to={intermediateRoutes}\n              className={classes.breadCrumb}\n            >\n              {capitalize(path)}\n            </Link>\n          );\n          intermediateRoutes += '/';\n          return link;\n        }\n        return '';\n      })}\n    </Breadcrumbs>\n  );\n};\n\nexport default CustomBreadcrumbs;\n"]},"metadata":{},"sourceType":"module"}