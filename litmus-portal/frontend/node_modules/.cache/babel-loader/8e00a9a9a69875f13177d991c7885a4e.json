{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/MyHub/MyHubConnect/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport BackButton from '../../../components/Button/BackButton';\nimport ButtonFilled from '../../../components/Button/ButtonFilled';\nimport InputField from '../../../components/InputField';\nimport QuickActionCard from '../../../components/QuickActionCard';\nimport VideoCarousel from '../../../components/VideoCarousel';\nimport Scaffold from '../../../containers/layouts/Scaffold';\nimport Unimodal from '../../../containers/layouts/Unimodal';\nimport { isValidWebUrl, validateStartEmptySpacing } from '../../../utils/validate';\nimport useStyles from './styles';\nimport { history } from '../../../redux/configureStore';\nimport { ADD_MY_HUB } from '../../../graphql/mutations';\nimport Loader from '../../../components/Loader';\n\nvar MyHub = function MyHub() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var userData = useSelector(function (state) {\n    return state.userData;\n  });\n\n  var _useState = useState({\n    HubName: '',\n    GitURL: '',\n    GitBranch: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      gitHub = _useState2[0],\n      setGitHub = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isOpen = _useState6[0],\n      setIsOpen = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cloningRepo = _useState8[0],\n      setCloningRepo = _useState8[1];\n\n  var _useMutation = useMutation(ADD_MY_HUB, {\n    onCompleted: function onCompleted() {\n      setCloningRepo(false);\n    },\n    onError: function onError(error) {\n      setCloningRepo(false);\n      setError(error.message);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addMyHub = _useMutation2[0];\n\n  var handleClose = function handleClose() {\n    setIsOpen(false);\n    history.push({\n      pathname: '/myhub'\n    });\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    addMyHub({\n      variables: {\n        MyHubDetails: {\n          HubName: gitHub.HubName,\n          RepoURL: gitHub.GitURL,\n          RepoBranch: gitHub.GitBranch\n        },\n        projectID: userData.selectedProjectID\n      }\n    });\n    setCloningRepo(true);\n    setIsOpen(true);\n  };\n\n  return /*#__PURE__*/React.createElement(Scaffold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.backBtnDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    isDisabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    gutterBottom: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, t('myhub.connectHubPage.connectHub'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.detailsDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.enterInfoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, t('myhub.connectHubPage.enterInfo'))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.connectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, t('myhub.connectHubPage.connectBtn')), /*#__PURE__*/React.createElement(\"form\", {\n    id: \"login-form\",\n    autoComplete: \"on\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: \"Hub Name\",\n    value: gitHub.HubName,\n    helperText: validateStartEmptySpacing(gitHub.HubName) ? 'Should not start with an empty space' : '',\n    validationError: validateStartEmptySpacing(gitHub.HubName),\n    required: true,\n    handleChange: function handleChange(e) {\n      return setGitHub({\n        HubName: e.target.value,\n        GitURL: gitHub.GitURL,\n        GitBranch: gitHub.GitBranch\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: \"Git URL\",\n    value: gitHub.GitURL,\n    helperText: !isValidWebUrl(gitHub.GitURL) ? 'Enter a valid URL' : '',\n    validationError: !isValidWebUrl(gitHub.GitURL),\n    required: true,\n    handleChange: function handleChange(e) {\n      return setGitHub({\n        HubName: gitHub.HubName,\n        GitURL: e.target.value,\n        GitBranch: gitHub.GitBranch\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputField, {\n    label: \"Branch\",\n    value: gitHub.GitBranch,\n    helperText: validateStartEmptySpacing(gitHub.GitBranch) ? 'Should not start with an empty space' : '',\n    validationError: validateStartEmptySpacing(gitHub.GitBranch),\n    required: true,\n    handleChange: function handleChange(e) {\n      return setGitHub({\n        HubName: gitHub.HubName,\n        GitURL: gitHub.GitURL,\n        GitBranch: e.target.value\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.submitBtnDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    isPrimary: false,\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, t('myhub.connectHubPage.submitBtn'))), /*#__PURE__*/React.createElement(Unimodal, {\n    open: isOpen,\n    handleClose: handleClose,\n    hasCloseBtn: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.modalDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, cloningRepo ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.modalDesc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 23\n    }\n  }, t('myhub.connectHubPage.cloningText'))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, error.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    className: classes.modalHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  }, t('myhub.connectHubPage.errorText')), ' ', t('myhub.connectHubPage.creatingHub')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.modalDesc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 27\n    }\n  }, \"Error: \", error)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/checkmark.svg\",\n    alt: \"checkmark\",\n    className: classes.checkImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    className: classes.modalHeading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 27\n    }\n  }, t('myhub.connectHubPage.newHub'), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 64\n    }\n  }), ' ', t('myhub.connectHubPage.success')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.modalDesc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 27\n    }\n  }, t('myhub.connectHubPage.newHubCreated')), /*#__PURE__*/React.createElement(ButtonFilled, {\n    isPrimary: false,\n    handleClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 27\n    }\n  }, t('myhub.connectHubPage.myHub'))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VideoCarousel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.videoDescription,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, t('myhub.connectHubPage.videoDesc')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.quickActionDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(QuickActionCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(MyHub, \"qdQmtU0+MVgflg2ZnZe/ozhPINg=\", false, function () {\n  return [useStyles, useTranslation, useSelector, useMutation];\n});\n\n_c = MyHub;\nexport default MyHub;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyHub\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/MyHub/MyHubConnect/index.tsx"],"names":["Typography","React","useState","useMutation","useSelector","useTranslation","BackButton","ButtonFilled","InputField","QuickActionCard","VideoCarousel","Scaffold","Unimodal","isValidWebUrl","validateStartEmptySpacing","useStyles","history","ADD_MY_HUB","Loader","MyHub","classes","t","userData","state","HubName","GitURL","GitBranch","gitHub","setGitHub","error","setError","isOpen","setIsOpen","cloningRepo","setCloningRepo","onCompleted","onError","message","addMyHub","handleClose","push","pathname","handleSubmit","event","preventDefault","variables","MyHubDetails","RepoURL","RepoBranch","projectID","selectedProjectID","header","backBtnDiv","mainDiv","detailsDiv","enterInfoText","connectText","inputDiv","inputField","e","target","value","submitBtnDiv","modalDiv","modalDesc","length","modalHeading","checkImg","root","videoDescription","quickActionDiv"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport BackButton from '../../../components/Button/BackButton';\nimport ButtonFilled from '../../../components/Button/ButtonFilled';\nimport InputField from '../../../components/InputField';\nimport QuickActionCard from '../../../components/QuickActionCard';\nimport VideoCarousel from '../../../components/VideoCarousel';\nimport Scaffold from '../../../containers/layouts/Scaffold';\nimport Unimodal from '../../../containers/layouts/Unimodal';\nimport {\n  isValidWebUrl,\n  validateStartEmptySpacing,\n} from '../../../utils/validate';\nimport useStyles from './styles';\nimport { history } from '../../../redux/configureStore';\nimport { ADD_MY_HUB } from '../../../graphql/mutations';\nimport { RootState } from '../../../redux/reducers';\nimport Loader from '../../../components/Loader';\n\ninterface GitHub {\n  HubName: string;\n  GitURL: string;\n  GitBranch: string;\n}\n\nconst MyHub = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const userData = useSelector((state: RootState) => state.userData);\n  const [gitHub, setGitHub] = useState<GitHub>({\n    HubName: '',\n    GitURL: '',\n    GitBranch: '',\n  });\n  const [error, setError] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [cloningRepo, setCloningRepo] = useState(false);\n  const [addMyHub] = useMutation(ADD_MY_HUB, {\n    onCompleted: () => {\n      setCloningRepo(false);\n    },\n    onError: (error) => {\n      setCloningRepo(false);\n      setError(error.message);\n    },\n  });\n  const handleClose = () => {\n    setIsOpen(false);\n    history.push({ pathname: '/myhub' });\n  };\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addMyHub({\n      variables: {\n        MyHubDetails: {\n          HubName: gitHub.HubName,\n          RepoURL: gitHub.GitURL,\n          RepoBranch: gitHub.GitBranch,\n        },\n        projectID: userData.selectedProjectID,\n      },\n    });\n    setCloningRepo(true);\n    setIsOpen(true);\n  };\n  return (\n    <Scaffold>\n      <div className={classes.header}>\n        <div className={classes.backBtnDiv}>\n          <BackButton isDisabled={false} />\n        </div>\n        <Typography variant=\"h3\" gutterBottom>\n          {t('myhub.connectHubPage.connectHub')}\n        </Typography>\n      </div>\n      <div className={classes.mainDiv}>\n        <div className={classes.detailsDiv}>\n          <Typography variant=\"h4\" gutterBottom />\n          <Typography className={classes.enterInfoText}>\n            <strong>{t('myhub.connectHubPage.enterInfo')}</strong>\n          </Typography>\n\n          <Typography className={classes.connectText}>\n            {t('myhub.connectHubPage.connectBtn')}\n          </Typography>\n          <form id=\"login-form\" autoComplete=\"on\" onSubmit={handleSubmit}>\n            <div className={classes.inputDiv}>\n              <div className={classes.inputField}>\n                <InputField\n                  label=\"Hub Name\"\n                  value={gitHub.HubName}\n                  helperText={\n                    validateStartEmptySpacing(gitHub.HubName)\n                      ? 'Should not start with an empty space'\n                      : ''\n                  }\n                  validationError={validateStartEmptySpacing(gitHub.HubName)}\n                  required\n                  handleChange={(e) =>\n                    setGitHub({\n                      HubName: e.target.value,\n                      GitURL: gitHub.GitURL,\n                      GitBranch: gitHub.GitBranch,\n                    })\n                  }\n                />\n              </div>\n              <div className={classes.inputField}>\n                <InputField\n                  label=\"Git URL\"\n                  value={gitHub.GitURL}\n                  helperText={\n                    !isValidWebUrl(gitHub.GitURL) ? 'Enter a valid URL' : ''\n                  }\n                  validationError={!isValidWebUrl(gitHub.GitURL)}\n                  required\n                  handleChange={(e) =>\n                    setGitHub({\n                      HubName: gitHub.HubName,\n                      GitURL: e.target.value,\n                      GitBranch: gitHub.GitBranch,\n                    })\n                  }\n                />\n              </div>\n              <div className={classes.inputField}>\n                <InputField\n                  label=\"Branch\"\n                  value={gitHub.GitBranch}\n                  helperText={\n                    validateStartEmptySpacing(gitHub.GitBranch)\n                      ? 'Should not start with an empty space'\n                      : ''\n                  }\n                  validationError={validateStartEmptySpacing(gitHub.GitBranch)}\n                  required\n                  handleChange={(e) =>\n                    setGitHub({\n                      HubName: gitHub.HubName,\n                      GitURL: gitHub.GitURL,\n                      GitBranch: e.target.value,\n                    })\n                  }\n                />\n              </div>\n              <div className={classes.submitBtnDiv}>\n                <ButtonFilled isPrimary={false} type=\"submit\">\n                  {t('myhub.connectHubPage.submitBtn')}\n                </ButtonFilled>\n              </div>\n              <Unimodal open={isOpen} handleClose={handleClose} hasCloseBtn>\n                <div className={classes.modalDiv}>\n                  {cloningRepo ? (\n                    <div>\n                      <Loader />\n                      <Typography className={classes.modalDesc}>\n                        {t('myhub.connectHubPage.cloningText')}\n                      </Typography>\n                    </div>\n                  ) : (\n                    <div>\n                      {error.length ? (\n                        <div>\n                          <Typography\n                            gutterBottom\n                            className={classes.modalHeading}\n                          >\n                            <strong>\n                              {t('myhub.connectHubPage.errorText')}\n                            </strong>{' '}\n                            {t('myhub.connectHubPage.creatingHub')}\n                          </Typography>\n                          <Typography className={classes.modalDesc}>\n                            Error: {error}\n                          </Typography>\n                        </div>\n                      ) : (\n                        <>\n                          <img\n                            src=\"/icons/checkmark.svg\"\n                            alt=\"checkmark\"\n                            className={classes.checkImg}\n                          />\n                          <Typography\n                            gutterBottom\n                            className={classes.modalHeading}\n                          >\n                            {t('myhub.connectHubPage.newHub')} <br />{' '}\n                            {t('myhub.connectHubPage.success')}\n                          </Typography>\n                          <Typography className={classes.modalDesc}>\n                            {t('myhub.connectHubPage.newHubCreated')}\n                          </Typography>\n                          <ButtonFilled\n                            isPrimary={false}\n                            handleClick={handleClose}\n                          >\n                            {t('myhub.connectHubPage.myHub')}\n                          </ButtonFilled>\n                        </>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </Unimodal>\n            </div>\n          </form>\n        </div>\n        <div className={classes.root}>\n          <VideoCarousel />\n          <Typography className={classes.videoDescription}>\n            {t('myhub.connectHubPage.videoDesc')}\n          </Typography>\n          <div className={classes.quickActionDiv}>\n            <QuickActionCard />\n          </div>\n        </div>\n      </div>\n    </Scaffold>\n  );\n};\n\nexport default MyHub;\n"]},"metadata":{},"sourceType":"module"}