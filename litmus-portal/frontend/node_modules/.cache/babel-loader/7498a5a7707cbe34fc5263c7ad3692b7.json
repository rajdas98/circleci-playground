{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/Settings/TeammingTab/Invitation/SentInvitations/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client/react/hooks';\nimport { Table, TableCell, TableContainer, TableRow, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { GET_USER } from '../../../../../graphql';\nimport useStyles from './styles';\nimport TableData from './TableData';\n\nvar SentInvitations = function SentInvitations() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // for response data\n\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      rows = _useState2[0],\n      setRows = _useState2[1];\n\n  var userData = useSelector(function (state) {\n    return state.userData;\n  }); // query for getting all the data for the logged in user\n\n  var _useQuery = useQuery(GET_USER, {\n    variables: {\n      username: userData.username\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      data = _useQuery.data;\n\n  var memberList;\n  var users = [];\n  useEffect(function () {\n    if ((data === null || data === void 0 ? void 0 : data.getUser.username) === userData.username) {\n      var projectList = data === null || data === void 0 ? void 0 : data.getUser.projects;\n      projectList.forEach(function (project) {\n        if (project.id === userData.selectedProjectID) {\n          memberList = project.members;\n        }\n      });\n\n      if (memberList) {\n        memberList.forEach(function (member) {\n          if (member.invitation === 'Pending' || member.invitation === 'Declined') {\n            users.push(member);\n          }\n\n          setRows(users);\n        });\n      }\n    }\n  }, [data, userData.selectedProjectID]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.table,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, rows.length > 0 ? rows.map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.user_name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableData, {\n      row: row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, t('settings.teamingTab.invitation.sentInvitation.noInvites')))))));\n};\n\n_s(SentInvitations, \"5yKQ0EnCRTW8Z8Vh+SyeGIdqysY=\", false, function () {\n  return [useStyles, useTranslation, useSelector, useQuery];\n});\n\n_c = SentInvitations;\nexport default SentInvitations;\n\nvar _c;\n\n$RefreshReg$(_c, \"SentInvitations\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/Settings/TeammingTab/Invitation/SentInvitations/index.tsx"],"names":["useQuery","Table","TableCell","TableContainer","TableRow","Typography","React","useEffect","useState","useSelector","useTranslation","GET_USER","useStyles","TableData","SentInvitations","classes","t","rows","setRows","userData","state","variables","username","fetchPolicy","data","memberList","users","getUser","projectList","projects","forEach","project","id","selectedProjectID","members","member","invitation","push","table","length","map","row","user_name"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client/react/hooks';\nimport {\n  Table,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { GET_USER } from '../../../../../graphql';\nimport {\n  CurrentUserDedtailsVars,\n  CurrentUserDetails,\n  Member,\n} from '../../../../../models/graphql/user';\nimport { RootState } from '../../../../../redux/reducers';\nimport useStyles from './styles';\nimport TableData from './TableData';\n\nconst SentInvitations: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  // for response data\n  const [rows, setRows] = useState<Member[]>([]);\n\n  const userData = useSelector((state: RootState) => state.userData);\n\n  // query for getting all the data for the logged in user\n  const { data } = useQuery<CurrentUserDetails, CurrentUserDedtailsVars>(\n    GET_USER,\n    {\n      variables: { username: userData.username },\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  let memberList: Member[];\n  const users: Member[] = [];\n  useEffect(() => {\n    if (data?.getUser.username === userData.username) {\n      const projectList = data?.getUser.projects;\n\n      projectList.forEach((project) => {\n        if (project.id === userData.selectedProjectID) {\n          memberList = project.members;\n        }\n      });\n\n      if (memberList) {\n        memberList.forEach((member) => {\n          if (\n            member.invitation === 'Pending' ||\n            member.invitation === 'Declined'\n          ) {\n            users.push(member);\n          }\n          setRows(users);\n        });\n      }\n    }\n  }, [data, userData.selectedProjectID]);\n\n  return (\n    <div>\n      <TableContainer className={classes.table}>\n        <Table>\n          {rows.length > 0 ? (\n            rows.map((row) => (\n              <TableRow key={row.user_name}>\n                <TableData row={row} />\n              </TableRow>\n            ))\n          ) : (\n            <TableRow>\n              <TableCell colSpan={2}>\n                <Typography>\n                  {t('settings.teamingTab.invitation.sentInvitation.noInvites')}\n                </Typography>\n              </TableCell>\n            </TableRow>\n          )}\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default SentInvitations;\n"]},"metadata":{},"sourceType":"module"}