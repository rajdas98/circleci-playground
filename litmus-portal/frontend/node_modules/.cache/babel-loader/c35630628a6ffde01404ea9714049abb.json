{"ast":null,"code":"import { createBrowserHistory } from 'history'; // eslint-disable-line import/no-extraneous-dependencies\n\nimport * as localforage from 'localforage';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nvar persistConfig = {\n  key: 'root',\n  version: 1,\n  storage: localforage,\n  blacklist: []\n};\nvar history = createBrowserHistory();\nvar dev = process.env.NODE_ENV === 'development';\nvar middleware = applyMiddleware(thunk);\n\nif (dev) {\n  middleware = composeWithDevTools(middleware);\n}\n\nvar persistedReducer = persistReducer(persistConfig, rootReducer());\nexport default (function () {\n  var store = createStore(persistedReducer, {}, middleware);\n  var persistor = persistStore(store);\n  return {\n    store,\n    persistor\n  };\n});\nexport { history };","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/redux/configureStore.tsx"],"names":["createBrowserHistory","localforage","applyMiddleware","createStore","composeWithDevTools","persistReducer","persistStore","thunk","rootReducer","persistConfig","key","version","storage","blacklist","history","dev","process","env","NODE_ENV","middleware","persistedReducer","store","persistor"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,SAArC,C,CAAgD;;AAChD,OAAO,KAAKC,WAAZ,MAA6B,aAA7B;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAAwBC,cAAxB,EAAwCC,YAAxC,QAA4D,eAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,IAAMC,aAAiC,GAAG;AACxCC,EAAAA,GAAG,EAAE,MADmC;AAExCC,EAAAA,OAAO,EAAE,CAF+B;AAGxCC,EAAAA,OAAO,EAAEX,WAH+B;AAIxCY,EAAAA,SAAS,EAAE;AAJ6B,CAA1C;AAOA,IAAMC,OAAO,GAAGd,oBAAoB,EAApC;AAEA,IAAMe,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAArC;AAEA,IAAIC,UAAU,GAAGjB,eAAe,CAACK,KAAD,CAAhC;;AAEA,IAAIQ,GAAJ,EAAS;AACPI,EAAAA,UAAU,GAAGf,mBAAmB,CAACe,UAAD,CAAhC;AACD;;AAED,IAAMC,gBAAgB,GAAGf,cAAc,CAACI,aAAD,EAAgBD,WAAW,EAA3B,CAAvC;AAEA,gBAAe,YAAM;AACnB,MAAMa,KAAK,GAAGlB,WAAW,CAACiB,gBAAD,EAAmB,EAAnB,EAAuBD,UAAvB,CAAzB;AACA,MAAMG,SAAS,GAAGhB,YAAY,CAACe,KAAD,CAA9B;AACA,SAAO;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACD,CAJD;AAMA,SAASR,OAAT","sourcesContent":["import { createBrowserHistory } from 'history'; // eslint-disable-line import/no-extraneous-dependencies\nimport * as localforage from 'localforage';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { PersistConfig, persistReducer, persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst persistConfig: PersistConfig<any> = {\n  key: 'root',\n  version: 1,\n  storage: localforage,\n  blacklist: [],\n};\n\nconst history = createBrowserHistory();\n\nconst dev = process.env.NODE_ENV === 'development';\n\nlet middleware = applyMiddleware(thunk);\n\nif (dev) {\n  middleware = composeWithDevTools(middleware);\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer());\n\nexport default () => {\n  const store = createStore(persistedReducer, {}, middleware) as any;\n  const persistor = persistStore(store);\n  return { store, persistor };\n};\n\nexport { history };\n"]},"metadata":{},"sourceType":"module"}