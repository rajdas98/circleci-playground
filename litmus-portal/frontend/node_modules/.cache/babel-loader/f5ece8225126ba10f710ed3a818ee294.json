{"ast":null,"code":"ace.define(\"ace/mode/yaml_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n  var YamlHighlightRules = function YamlHighlightRules() {\n    this.$rules = {\n      \"start\": [{\n        token: \"comment\",\n        regex: \"#.*$\"\n      }, {\n        token: \"list.markup\",\n        regex: /^(?:-{3}|\\.{3})\\s*(?=#|$)/\n      }, {\n        token: \"list.markup\",\n        regex: /^\\s*[\\-?](?:$|\\s)/\n      }, {\n        token: \"constant\",\n        regex: \"!![\\\\w//]+\"\n      }, {\n        token: \"constant.language\",\n        regex: \"[&\\\\*][a-zA-Z0-9-_]+\"\n      }, {\n        token: [\"meta.tag\", \"keyword\"],\n        regex: /^(\\s*\\w.*?)(:(?=\\s|$))/\n      }, {\n        token: [\"meta.tag\", \"keyword\"],\n        regex: /(\\w+?)(\\s*:(?=\\s|$))/\n      }, {\n        token: \"keyword.operator\",\n        regex: \"<<\\\\w*:\\\\w*\"\n      }, {\n        token: \"keyword.operator\",\n        regex: \"-\\\\s*(?=[{])\"\n      }, {\n        token: \"string\",\n        // single line\n        regex: '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n      }, {\n        token: \"string\",\n        // multi line string start\n        regex: /[|>][-+\\d\\s]*$/,\n        onMatch: function onMatch(val, state, stack, line) {\n          var indent = /^\\s*/.exec(line)[0];\n\n          if (stack.length < 1) {\n            stack.push(this.next);\n          } else {\n            stack[0] = \"mlString\";\n          }\n\n          if (stack.length < 2) {\n            stack.push(indent.length);\n          } else {\n            stack[1] = indent.length;\n          }\n\n          return this.token;\n        },\n        next: \"mlString\"\n      }, {\n        token: \"string\",\n        // single quoted string\n        regex: \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n      }, {\n        token: \"constant.numeric\",\n        // float\n        regex: /(\\b|[+\\-\\.])[\\d_]+(?:(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)(?=[^\\d-\\w]|$)/\n      }, {\n        token: \"constant.numeric\",\n        // other number\n        regex: /[+\\-]?\\.inf\\b|NaN\\b|0x[\\dA-Fa-f_]+|0b[10_]+/\n      }, {\n        token: \"constant.language.boolean\",\n        regex: \"\\\\b(?:true|false|TRUE|FALSE|True|False|yes|no)\\\\b\"\n      }, {\n        token: \"paren.lparen\",\n        regex: \"[[({]\"\n      }, {\n        token: \"paren.rparen\",\n        regex: \"[\\\\])}]\"\n      }, {\n        token: \"text\",\n        regex: /[^\\s,:\\[\\]\\{\\}]+/\n      }],\n      \"mlString\": [{\n        token: \"indent\",\n        regex: /^\\s*$/\n      }, {\n        token: \"indent\",\n        regex: /^\\s*/,\n        onMatch: function onMatch(val, state, stack) {\n          var curIndent = stack[1];\n\n          if (curIndent >= val.length) {\n            this.next = \"start\";\n            stack.splice(0);\n          } else {\n            this.next = \"mlString\";\n          }\n\n          return this.token;\n        },\n        next: \"mlString\"\n      }, {\n        token: \"string\",\n        regex: '.+'\n      }]\n    };\n    this.normalizeRules();\n  };\n\n  oop.inherits(YamlHighlightRules, TextHighlightRules);\n  exports.YamlHighlightRules = YamlHighlightRules;\n});\nace.define(\"ace/mode/matching_brace_outdent\", [\"require\", \"exports\", \"module\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var Range = acequire(\"../range\").Range;\n\n  var MatchingBraceOutdent = function MatchingBraceOutdent() {};\n\n  (function () {\n    this.checkOutdent = function (line, input) {\n      if (!/^\\s+$/.test(line)) return false;\n      return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function (doc, row) {\n      var line = doc.getLine(row);\n      var match = line.match(/^(\\s*\\})/);\n      if (!match) return 0;\n      var column = match[1].length;\n      var openBracePos = doc.findMatchingBracket({\n        row: row,\n        column: column\n      });\n      if (!openBracePos || openBracePos.row == row) return 0;\n      var indent = this.$getIndent(doc.getLine(openBracePos.row));\n      doc.replace(new Range(row, 0, row, column - 1), indent);\n    };\n\n    this.$getIndent = function (line) {\n      return line.match(/^\\s*/)[0];\n    };\n  }).call(MatchingBraceOutdent.prototype);\n  exports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\nace.define(\"ace/mode/folding/coffee\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../../lib/oop\");\n  var BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n  var Range = acequire(\"../../range\").Range;\n\n  var FoldMode = exports.FoldMode = function () {};\n\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var range = this.indentationBlock(session, row);\n      if (range) return range;\n      var re = /\\S/;\n      var line = session.getLine(row);\n      var startLevel = line.search(re);\n      if (startLevel == -1 || line[startLevel] != \"#\") return;\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var level = line.search(re);\n        if (level == -1) continue;\n        if (line[level] != \"#\") break;\n        endRow = row;\n      }\n\n      if (endRow > startRow) {\n        var endColumn = session.getLine(endRow).length;\n        return new Range(startRow, startColumn, endRow, endColumn);\n      }\n    };\n\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var indent = line.search(/\\S/);\n      var next = session.getLine(row + 1);\n      var prev = session.getLine(row - 1);\n      var prevIndent = prev.search(/\\S/);\n      var nextIndent = next.search(/\\S/);\n\n      if (indent == -1) {\n        session.foldWidgets[row - 1] = prevIndent != -1 && prevIndent < nextIndent ? \"start\" : \"\";\n        return \"\";\n      }\n\n      if (prevIndent == -1) {\n        if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n          session.foldWidgets[row - 1] = \"\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"start\";\n        }\n      } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n        if (session.getLine(row - 2).search(/\\S/) == -1) {\n          session.foldWidgets[row - 1] = \"start\";\n          session.foldWidgets[row + 1] = \"\";\n          return \"\";\n        }\n      }\n\n      if (prevIndent != -1 && prevIndent < indent) session.foldWidgets[row - 1] = \"start\";else session.foldWidgets[row - 1] = \"\";\n      if (indent < nextIndent) return \"start\";else return \"\";\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/yaml\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/yaml_highlight_rules\", \"ace/mode/matching_brace_outdent\", \"ace/mode/folding/coffee\"], function (acequire, exports, module) {\n  \"use strict\";\n\n  var oop = acequire(\"../lib/oop\");\n  var TextMode = acequire(\"./text\").Mode;\n  var YamlHighlightRules = acequire(\"./yaml_highlight_rules\").YamlHighlightRules;\n  var MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n  var FoldMode = acequire(\"./folding/coffee\").FoldMode;\n\n  var Mode = function Mode() {\n    this.HighlightRules = YamlHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = [\"#\", \"//\"];\n\n    this.getNextLineIndent = function (state, line, tab) {\n      var indent = this.$getIndent(line);\n\n      if (state == \"start\") {\n        var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n\n        if (match) {\n          indent += tab;\n        }\n      }\n\n      return indent;\n    };\n\n    this.checkOutdent = function (state, line, input) {\n      return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function (state, doc, row) {\n      this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/yaml\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/brace/mode/yaml.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","YamlHighlightRules","$rules","token","regex","onMatch","val","state","stack","line","indent","exec","length","push","next","curIndent","splice","normalizeRules","inherits","Range","MatchingBraceOutdent","checkOutdent","input","test","autoOutdent","doc","row","getLine","match","column","openBracePos","findMatchingBracket","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","getFoldWidgetRange","session","foldStyle","range","indentationBlock","re","startLevel","search","startColumn","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","prev","prevIndent","nextIndent","foldWidgets","TextMode","Mode","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","getNextLineIndent","tab","$id"],"mappings":"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","sourcesContent":["ace.define(\"ace/mode/yaml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar YamlHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"#.*$\"\n            }, {\n                token : \"list.markup\",\n                regex : /^(?:-{3}|\\.{3})\\s*(?=#|$)/\n            },  {\n                token : \"list.markup\",\n                regex : /^\\s*[\\-?](?:$|\\s)/\n            }, {\n                token: \"constant\",\n                regex: \"!![\\\\w//]+\"\n            }, {\n                token: \"constant.language\",\n                regex: \"[&\\\\*][a-zA-Z0-9-_]+\"\n            }, {\n                token: [\"meta.tag\", \"keyword\"],\n                regex: /^(\\s*\\w.*?)(:(?=\\s|$))/\n            },{\n                token: [\"meta.tag\", \"keyword\"],\n                regex: /(\\w+?)(\\s*:(?=\\s|$))/\n            }, {\n                token : \"keyword.operator\",\n                regex : \"<<\\\\w*:\\\\w*\"\n            }, {\n                token : \"keyword.operator\",\n                regex : \"-\\\\s*(?=[{])\"\n            }, {\n                token : \"string\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n            }, {\n                token : \"string\", // multi line string start\n                regex : /[|>][-+\\d\\s]*$/,\n                onMatch: function(val, state, stack, line) {\n                    var indent = /^\\s*/.exec(line)[0];\n                    if (stack.length < 1) {\n                        stack.push(this.next);\n                    } else {\n                        stack[0] = \"mlString\";\n                    }\n\n                    if (stack.length < 2) {\n                        stack.push(indent.length);\n                    }\n                    else {\n                        stack[1] = indent.length;\n                    }\n                    return this.token;\n                },\n                next : \"mlString\"\n            }, {\n                token : \"string\", // single quoted string\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : /(\\b|[+\\-\\.])[\\d_]+(?:(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)(?=[^\\d-\\w]|$)/\n            }, {\n                token : \"constant.numeric\", // other number\n                regex : /[+\\-]?\\.inf\\b|NaN\\b|0x[\\dA-Fa-f_]+|0b[10_]+/\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"\\\\b(?:true|false|TRUE|FALSE|True|False|yes|no)\\\\b\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : /[^\\s,:\\[\\]\\{\\}]+/\n            }\n        ],\n        \"mlString\" : [\n            {\n                token : \"indent\",\n                regex : /^\\s*$/\n            }, {\n                token : \"indent\",\n                regex : /^\\s*/,\n                onMatch: function(val, state, stack) {\n                    var curIndent = stack[1];\n\n                    if (curIndent >= val.length) {\n                        this.next = \"start\";\n                        stack.splice(0);\n                    }\n                    else {\n                        this.next = \"mlString\";\n                    }\n                    return this.token;\n                },\n                next : \"mlString\"\n            }, {\n                token : \"string\",\n                regex : '.+'\n            }\n        ]};\n    this.normalizeRules();\n\n};\n\noop.inherits(YamlHighlightRules, TextHighlightRules);\n\nexports.YamlHighlightRules = YamlHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/yaml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/yaml_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/coffee\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar YamlHighlightRules = acequire(\"./yaml_highlight_rules\").YamlHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar FoldMode = acequire(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = YamlHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = [\"#\", \"//\"];\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n\n    this.$id = \"ace/mode/yaml\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n"]},"metadata":{},"sourceType":"script"}