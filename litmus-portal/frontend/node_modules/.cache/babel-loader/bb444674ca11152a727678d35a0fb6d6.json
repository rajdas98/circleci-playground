{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseCluster/HeaderSection.tsx\",\n    _s = $RefreshSig$();\n\nimport { FormControl, IconButton, InputAdornment, InputBase, InputLabel, MenuItem, Popover, Select, Typography } from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { useState } from 'react';\nimport { DateRangePicker } from 'react-date-range';\nimport { useTranslation } from 'react-i18next';\nimport { useTheme } from '@material-ui/core/styles';\nimport ButtonOutline from '../../../components/Button/ButtonOutline';\nimport 'react-date-range/dist/styles.css'; // main css file\n\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nimport useStyles from './styles';\n\nvar HeaderSection = function HeaderSection(_ref) {\n  _s();\n\n  var searchValue = _ref.searchValue,\n      statusValue = _ref.statusValue,\n      clusterValue = _ref.clusterValue,\n      isOpen = _ref.isOpen,\n      popAnchorEl = _ref.popAnchorEl,\n      displayDate = _ref.displayDate,\n      changeSearch = _ref.changeSearch,\n      changeStatus = _ref.changeStatus,\n      changeCluster = _ref.changeCluster,\n      popOverClick = _ref.popOverClick,\n      popOverClose = _ref.popOverClose,\n      selectDate = _ref.selectDate;\n  var classes = useStyles();\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var _useState = useState([{\n    startDate: new Date(),\n    endDate: new Date(),\n    key: 'selection'\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headerSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    id: \"input-with-icon-adornment\",\n    placeholder: \"Search\",\n    className: classes.search,\n    value: searchValue,\n    onChange: changeSearch,\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    color: \"secondary\",\n    focused: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.selectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, t('workflowCluster.header.status')), /*#__PURE__*/React.createElement(Select, {\n    value: statusValue,\n    onChange: changeStatus,\n    label: \"Cluster Status\",\n    className: classes.selectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"All\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, t('workflowCluster.header.formControl.menu')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, t('workflowCluster.header.formControl.menu1')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"false\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, t('workflowCluster.header.formControl.menu2')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"pending\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, t('workflowCluster.header.formControl.menu6')))), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    color: \"secondary\",\n    focused: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    className: classes.selectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, t('workflowCluster.header.target')), /*#__PURE__*/React.createElement(Select, {\n    value: clusterValue,\n    onChange: changeCluster,\n    label: \"Target Cluster\",\n    className: classes.selectText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"All\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, t('workflowCluster.header.formControl.menu')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Internal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, t('workflowCluster.header.formControl.menu4')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"External\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, t('workflowCluster.header.formControl.menu5')))), /*#__PURE__*/React.createElement(ButtonOutline, {\n    isDisabled: false,\n    handleClick: popOverClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.displayDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, displayDate, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.iconButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, isOpen ? /*#__PURE__*/React.createElement(KeyboardArrowDownIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 53\n    }\n  })))), /*#__PURE__*/React.createElement(Popover, {\n    open: isOpen,\n    anchorEl: popAnchorEl,\n    onClose: popOverClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    className: classes.popOver,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DateRangePicker, {\n    onChange: function onChange(item) {\n      setState([item.selection]);\n      selectDate(\"\".concat(item.selection.startDate), \"\".concat(item.selection.endDate));\n    },\n    showSelectionPreview: true,\n    moveRangeOnFirstSelection: false,\n    months: 1,\n    ranges: state,\n    direction: \"vertical\",\n    editableDateInputs: true,\n    rangeColors: [palette.secondary.dark],\n    showMonthAndYearPickers: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(HeaderSection, \"BPFsGANBta/WNNUmG90WZp6CYYE=\", false, function () {\n  return [useStyles, useTheme, useTranslation];\n});\n\n_c = HeaderSection;\nexport default HeaderSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderSection\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseCluster/HeaderSection.tsx"],"names":["FormControl","IconButton","InputAdornment","InputBase","InputLabel","MenuItem","Popover","Select","Typography","ChevronRightIcon","KeyboardArrowDownIcon","SearchIcon","React","useState","DateRangePicker","useTranslation","useTheme","ButtonOutline","useStyles","HeaderSection","searchValue","statusValue","clusterValue","isOpen","popAnchorEl","displayDate","changeSearch","changeStatus","changeCluster","popOverClick","popOverClose","selectDate","classes","palette","startDate","Date","endDate","key","state","setState","t","headerSection","search","formControl","selectText","iconButton","vertical","horizontal","popOver","item","selection","secondary","dark"],"mappings":"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","sourcesContent":["import {\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputBase,\n  InputLabel,\n  MenuItem,\n  Popover,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { useState } from 'react';\nimport { DateRangePicker } from 'react-date-range';\nimport { useTranslation } from 'react-i18next';\nimport { useTheme } from '@material-ui/core/styles';\nimport ButtonOutline from '../../../components/Button/ButtonOutline';\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport useStyles from './styles';\n\ninterface HeaderSectionProps {\n  searchValue: string;\n  statusValue: string;\n  clusterValue: string;\n  isOpen: boolean;\n  isDateOpen: boolean;\n  popAnchorEl: HTMLElement | null;\n  displayDate: string;\n  changeSearch: (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => void;\n  changeStatus: (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>,\n    child: React.ReactNode\n  ) => void;\n  changeCluster: (\n    event: React.ChangeEvent<{\n      name?: string | undefined;\n      value: unknown;\n    }>,\n    child: React.ReactNode\n  ) => void;\n  popOverClick: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n  popOverClose: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void;\n  selectDate: (selectFromDate: string, selectToDate: string) => void;\n}\n\nconst HeaderSection: React.FC<HeaderSectionProps> = ({\n  searchValue,\n  statusValue,\n  clusterValue,\n  isOpen,\n  popAnchorEl,\n  displayDate,\n  changeSearch,\n  changeStatus,\n  changeCluster,\n  popOverClick,\n  popOverClose,\n  selectDate,\n}) => {\n  const classes = useStyles();\n  const { palette } = useTheme();\n  const [state, setState] = useState([\n    {\n      startDate: new Date(),\n      endDate: new Date(),\n      key: 'selection',\n    },\n  ]);\n  const { t } = useTranslation();\n  return (\n    <div>\n      <div className={classes.headerSection}>\n        {/* Search Field */}\n        <InputBase\n          id=\"input-with-icon-adornment\"\n          placeholder=\"Search\"\n          className={classes.search}\n          value={searchValue}\n          onChange={changeSearch}\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          }\n        />\n\n        {/* Select Workflow */}\n        <FormControl\n          variant=\"outlined\"\n          className={classes.formControl}\n          color=\"secondary\"\n          focused\n        >\n          <InputLabel className={classes.selectText}>\n            {t('workflowCluster.header.status')}\n          </InputLabel>\n          <Select\n            value={statusValue}\n            onChange={changeStatus}\n            label=\"Cluster Status\"\n            className={classes.selectText}\n          >\n            <MenuItem value=\"All\">\n              {t('workflowCluster.header.formControl.menu')}\n            </MenuItem>\n            <MenuItem value=\"true\">\n              {t('workflowCluster.header.formControl.menu1')}\n            </MenuItem>\n            <MenuItem value=\"false\">\n              {t('workflowCluster.header.formControl.menu2')}\n            </MenuItem>\n            <MenuItem value=\"pending\">\n              {t('workflowCluster.header.formControl.menu6')}\n            </MenuItem>\n          </Select>\n        </FormControl>\n\n        {/* Select Cluster */}\n        <FormControl\n          variant=\"outlined\"\n          className={classes.formControl}\n          color=\"secondary\"\n          focused\n        >\n          <InputLabel className={classes.selectText}>\n            {t('workflowCluster.header.target')}\n          </InputLabel>\n          <Select\n            value={clusterValue}\n            onChange={changeCluster}\n            label=\"Target Cluster\"\n            className={classes.selectText}\n          >\n            <MenuItem value=\"All\">\n              {t('workflowCluster.header.formControl.menu')}\n            </MenuItem>\n            <MenuItem value=\"Internal\">\n              {t('workflowCluster.header.formControl.menu4')}\n            </MenuItem>\n            <MenuItem value=\"External\">\n              {t('workflowCluster.header.formControl.menu5')}\n            </MenuItem>\n          </Select>\n        </FormControl>\n\n        <ButtonOutline isDisabled={false} handleClick={popOverClick}>\n          <Typography className={classes.displayDate}>\n            {displayDate}\n            <IconButton className={classes.iconButton}>\n              {isOpen ? <KeyboardArrowDownIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </Typography>\n        </ButtonOutline>\n        <Popover\n          open={isOpen}\n          anchorEl={popAnchorEl}\n          onClose={popOverClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          className={classes.popOver}\n        >\n          <DateRangePicker\n            onChange={(item) => {\n              setState([(item as any).selection]);\n              selectDate(\n                `${(item as any).selection.startDate}`,\n                `${(item as any).selection.endDate}`\n              );\n            }}\n            showSelectionPreview\n            moveRangeOnFirstSelection={false}\n            months={1}\n            ranges={state}\n            direction=\"vertical\"\n            editableDateInputs\n            rangeColors={[palette.secondary.dark]}\n            showMonthAndYearPickers\n          />\n        </Popover>\n      </div>\n    </div>\n  );\n};\nexport default HeaderSection;\n"]},"metadata":{},"sourceType":"module"}