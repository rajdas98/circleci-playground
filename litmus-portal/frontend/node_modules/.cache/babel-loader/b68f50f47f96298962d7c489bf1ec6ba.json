{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/CustomText/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { IconButton, makeStyles, TextField } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport React from 'react';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    editBtn: {\n      color: theme.palette.common.black\n    },\n    saveBtn: {\n      color: theme.palette.common.black\n    },\n    inputText: {\n      width: '40.75rem',\n      paddingTop: theme.spacing(0.375)\n    }\n  };\n}); // Editable text field used to edit and save the input in the text box\n\nvar CustomText = function CustomText(_ref) {\n  _s();\n\n  var value = _ref.value,\n      id = _ref.id,\n      onchange = _ref.onchange;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isDisabled = _React$useState2[0],\n      setIsDisabled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(value),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      newValue = _React$useState4[0],\n      setNewValue = _React$useState4[1];\n\n  var handleEdit = function handleEdit() {\n    setIsDisabled(false);\n  };\n\n  var handleSave = function handleSave() {\n    onchange(newValue);\n    setIsDisabled(true);\n  };\n\n  var handleChange = function handleChange(event) {\n    setNewValue(event.target.value);\n  };\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    \"data-cy\": \"text\",\n    className: classes.inputText,\n    disabled: isDisabled,\n    id: id,\n    defaultValue: newValue,\n    multiline: true,\n    InputProps: {\n      disableUnderline: true,\n      style: {\n        color: 'rgba(0,0,0)',\n        lineHeight: '1rem',\n        fontSize: '1rem'\n      }\n    },\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), isDisabled ? /*#__PURE__*/React.createElement(IconButton, {\n    size: \"medium\",\n    onClick: handleEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    className: classes.editBtn,\n    \"data-cy\": \"edit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(IconButton, {\n    size: \"medium\",\n    onClick: handleSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SaveIcon, {\n    className: classes.saveBtn,\n    \"data-cy\": \"save\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(CustomText, \"NeO8K45/p9s8+zuHfS4ojnoRnI8=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomText;\nexport default CustomText;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomText\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/CustomText/index.tsx"],"names":["IconButton","makeStyles","TextField","EditIcon","SaveIcon","React","useStyles","theme","editBtn","color","palette","common","black","saveBtn","inputText","width","paddingTop","spacing","CustomText","value","id","onchange","useState","isDisabled","setIsDisabled","newValue","setNewValue","handleEdit","handleSave","handleChange","event","target","classes","disableUnderline","style","lineHeight","fontSize"],"mappings":"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","sourcesContent":["import { IconButton, makeStyles, TextField, Theme } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport React from 'react';\n\ninterface CustomTextProps {\n  value: string;\n  id: string;\n  onchange: (val: string) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  editBtn: {\n    color: theme.palette.common.black,\n  },\n  saveBtn: {\n    color: theme.palette.common.black,\n  },\n  inputText: {\n    width: '40.75rem',\n    paddingTop: theme.spacing(0.375),\n  },\n}));\n\n// Editable text field used to edit and save the input in the text box\nconst CustomText: React.FC<CustomTextProps> = ({ value, id, onchange }) => {\n  const [isDisabled, setIsDisabled] = React.useState(true);\n  const [newValue, setNewValue] = React.useState<string>(value);\n\n  const handleEdit = () => {\n    setIsDisabled(false);\n  };\n  const handleSave = () => {\n    onchange(newValue);\n    setIsDisabled(true);\n  };\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewValue(event.target.value);\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <TextField\n        data-cy=\"text\"\n        className={classes.inputText}\n        disabled={isDisabled}\n        id={id}\n        defaultValue={newValue}\n        multiline\n        InputProps={{\n          disableUnderline: true,\n          style: {\n            color: 'rgba(0,0,0)',\n            lineHeight: '1rem',\n            fontSize: '1rem',\n          },\n        }}\n        onChange={handleChange}\n      />\n      {isDisabled ? (\n        <IconButton size=\"medium\" onClick={handleEdit}>\n          <EditIcon className={classes.editBtn} data-cy=\"edit\" />\n        </IconButton>\n      ) : (\n        <IconButton size=\"medium\" onClick={handleSave}>\n          <SaveIcon className={classes.saveBtn} data-cy=\"save\" />\n        </IconButton>\n      )}\n    </div>\n  );\n};\nexport default CustomText;\n"]},"metadata":{},"sourceType":"module"}