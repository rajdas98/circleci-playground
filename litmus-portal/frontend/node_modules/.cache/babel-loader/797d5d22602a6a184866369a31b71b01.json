{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/Templates/index.tsx\";\n\nimport React from 'react';\nimport PredifinedWorkflows from '../../../components/PredifinedWorkflows';\nimport workflowData from '../../../components/PredifinedWorkflows/data';\nimport useActions from '../../../redux/actions';\nimport * as TemplateSelectionActions from '../../../redux/actions/template';\nimport { history } from '../../../redux/configureStore';\nimport parsed from '../../../utils/yamlUtils';\nimport useStyles from './styles';\n\nvar Templates = function Templates() {\n  var classes = useStyles();\n  var template = useActions(TemplateSelectionActions);\n  var testNames = [];\n  var testWeights = []; // Setting initial selected template ID to 0\n\n  template.selectTemplate({\n    selectedTemplateID: 0,\n    isDisable: true\n  });\n\n  var selectWorkflow = function selectWorkflow(index) {\n    // Updating template ID to the selected one\n    template.selectTemplate({\n      selectedTemplateID: index,\n      isDisable: false\n    });\n    fetch(workflowData[index].chaosWkfCRDLink).then(function (data) {\n      data.text().then(function (yamlText) {\n        var tests = parsed(yamlText);\n        tests.forEach(function (test) {\n          // Pushing the individual test names of the selected workflow\n          testNames.push(test); // The default weight of the all the experiments in the workflow is 10\n\n          testWeights.push(10);\n        });\n        history.push({\n          pathname: \"/workflows/template/\".concat(workflowData[index].title),\n          state: {\n            workflowData: workflowData[index],\n            testNames,\n            testWeights\n          }\n        });\n      });\n    }).catch(function (err) {\n      console.error(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"templatesPage\",\n    className: classes.predefinedCards,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PredifinedWorkflows, {\n    callbackOnSelectWorkflow: function callbackOnSelectWorkflow(index) {\n      selectWorkflow(index);\n    },\n    workflows: workflowData,\n    isCustomWorkflowVisible: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Templates;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/Templates/index.tsx"],"names":["React","PredifinedWorkflows","workflowData","useActions","TemplateSelectionActions","history","parsed","useStyles","Templates","classes","template","testNames","testWeights","selectTemplate","selectedTemplateID","isDisable","selectWorkflow","index","fetch","chaosWkfCRDLink","then","data","text","yamlText","tests","forEach","test","push","pathname","title","state","catch","err","console","error","root","predefinedCards"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,yCAAhC;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAO,KAAKC,wBAAZ,MAA0C,iCAA1C;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMC,OAAO,GAAGF,SAAS,EAAzB;AAEA,MAAMG,QAAQ,GAAGP,UAAU,CAACC,wBAAD,CAA3B;AACA,MAAMO,SAAmB,GAAG,EAA5B;AACA,MAAMC,WAAqB,GAAG,EAA9B,CALsB,CAOtB;;AACAF,EAAAA,QAAQ,CAACG,cAAT,CAAwB;AAAEC,IAAAA,kBAAkB,EAAE,CAAtB;AAAyBC,IAAAA,SAAS,EAAE;AAApC,GAAxB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAmB;AACxC;AACAP,IAAAA,QAAQ,CAACG,cAAT,CAAwB;AACtBC,MAAAA,kBAAkB,EAAEG,KADE;AAEtBF,MAAAA,SAAS,EAAE;AAFW,KAAxB;AAKAG,IAAAA,KAAK,CAAChB,YAAY,CAACe,KAAD,CAAZ,CAAoBE,eAArB,CAAL,CACGC,IADH,CACQ,UAACC,IAAD,EAAU;AACdA,MAAAA,IAAI,CAACC,IAAL,GAAYF,IAAZ,CAAiB,UAACG,QAAD,EAAc;AAC7B,YAAMC,KAAK,GAAGlB,MAAM,CAACiB,QAAD,CAApB;AACAC,QAAAA,KAAK,CAACC,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB;AACAf,UAAAA,SAAS,CAACgB,IAAV,CAAeD,IAAf,EAFsB,CAItB;;AACAd,UAAAA,WAAW,CAACe,IAAZ,CAAiB,EAAjB;AACD,SAND;AAOAtB,QAAAA,OAAO,CAACsB,IAAR,CAAa;AACXC,UAAAA,QAAQ,gCAAyB1B,YAAY,CAACe,KAAD,CAAZ,CAAoBY,KAA7C,CADG;AAEXC,UAAAA,KAAK,EAAE;AACL5B,YAAAA,YAAY,EAAEA,YAAY,CAACe,KAAD,CADrB;AAELN,YAAAA,SAFK;AAGLC,YAAAA;AAHK;AAFI,SAAb;AAQD,OAjBD;AAkBD,KApBH,EAqBGmB,KArBH,CAqBS,UAACC,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAvBH;AAwBD,GA/BD;;AAiCA,sBACE;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAAC0B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AAAK,eAAQ,eAAb;AAA6B,IAAA,SAAS,EAAE1B,OAAO,CAAC2B,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AACE,IAAA,wBAAwB,EAAE,kCAACnB,KAAD,EAAmB;AAC3CD,MAAAA,cAAc,CAACC,KAAD,CAAd;AACD,KAHH;AAIE,IAAA,SAAS,EAAEf,YAJb;AAKE,IAAA,uBAAuB,EAAE,KAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CADF;AAsBD,CAjED;;AAmEA,eAAeM,SAAf","sourcesContent":["import React from 'react';\nimport PredifinedWorkflows from '../../../components/PredifinedWorkflows';\nimport workflowData from '../../../components/PredifinedWorkflows/data';\nimport useActions from '../../../redux/actions';\nimport * as TemplateSelectionActions from '../../../redux/actions/template';\nimport { history } from '../../../redux/configureStore';\nimport parsed from '../../../utils/yamlUtils';\nimport useStyles from './styles';\n\nconst Templates = () => {\n  const classes = useStyles();\n\n  const template = useActions(TemplateSelectionActions);\n  const testNames: string[] = [];\n  const testWeights: number[] = [];\n\n  // Setting initial selected template ID to 0\n  template.selectTemplate({ selectedTemplateID: 0, isDisable: true });\n\n  const selectWorkflow = (index: number) => {\n    // Updating template ID to the selected one\n    template.selectTemplate({\n      selectedTemplateID: index,\n      isDisable: false,\n    });\n\n    fetch(workflowData[index].chaosWkfCRDLink)\n      .then((data) => {\n        data.text().then((yamlText) => {\n          const tests = parsed(yamlText);\n          tests.forEach((test) => {\n            // Pushing the individual test names of the selected workflow\n            testNames.push(test);\n\n            // The default weight of the all the experiments in the workflow is 10\n            testWeights.push(10);\n          });\n          history.push({\n            pathname: `/workflows/template/${workflowData[index].title}`,\n            state: {\n              workflowData: workflowData[index],\n              testNames,\n              testWeights,\n            },\n          });\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <div className={classes.root}>\n      {/* Sort div with the sort icon (To be used in later updates) */}\n      {/* <div className={classes.sort} onClick={() => {}}>\n          <div className={classes.sortIcon}>\n            <div className={`${classes.line} ${classes.first}`} />\n            <div className={`${classes.line} ${classes.second}`} />\n            <div className={`${classes.line} ${classes.third}`} />\n          </div>\n          <Typography className={classes.headerSize}>Sort</Typography>\n        </div> */}\n      <div data-cy=\"templatesPage\" className={classes.predefinedCards}>\n        <PredifinedWorkflows\n          callbackOnSelectWorkflow={(index: number) => {\n            selectWorkflow(index);\n          }}\n          workflows={workflowData}\n          isCustomWorkflowVisible={false}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Templates;\n"]},"metadata":{},"sourceType":"module"}