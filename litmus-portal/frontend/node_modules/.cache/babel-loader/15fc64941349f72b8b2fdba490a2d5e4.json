{"ast":null,"code":"import _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/Targets/ClusterInfo/index.tsx\";\n\nimport { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport { history } from '../../../redux/configureStore';\nimport ButtonOutline from '../../Button/ButtonOutline'; // import BrowseWorkflow from '../TargetHome/BrowseWorkflow';\n\nimport useStyles from './styles';\nimport Scaffold from '../../../containers/layouts/Scaffold';\nimport TargetCopy from '../TargetCopy';\nimport { DELETE_CLUSTER } from '../../../graphql';\nimport Unimodal from '../../../containers/layouts/Unimodal';\nimport ButtonFilled from '../../Button/ButtonFilled';\nimport BackButton from '../../Button/BackButton';\n\nvar ClusterInfo = function ClusterInfo(_ref) {\n  var location = _ref.location;\n  var data = location.state.data;\n  var classes = useStyles();\n  var link = data.token;\n\n  var _useMutation = useMutation(DELETE_CLUSTER),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      deleteCluster = _useMutation2[0];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleDelete = function handleDelete() {\n    deleteCluster({\n      variables: {\n        cluster_id: data.cluster_id\n      }\n    });\n    history.push('/targets');\n  };\n\n  var userRole = useSelector(function (state) {\n    return state.userData.userRole;\n  });\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/React.createElement(Scaffold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"Header section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.backBotton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    isDisabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, t('workflowCluster.header.formControl.back'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, t('workflowCluster.header.formControl.clusterInfo'))))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"Connect new target\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.detailsDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.firstCol,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.linkBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }\n  }, t('targets.newTarget.clusterDetails')))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, data.is_active ? /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.check, \" \").concat(classes.active),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }, t('workflowCluster.header.formControl.menu1')) : data.is_cluster_confirmed === false ? /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.check, \" \").concat(classes.pending),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }\n  }, t('workflowCluster.header.formControl.menu6')) : /*#__PURE__*/React.createElement(Typography, {\n    className: \"\".concat(classes.check, \" \").concat(classes.notactive),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }\n  }, t('workflowCluster.header.formControl.menu2')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutline, {\n    isDisabled: userRole === 'Viewer',\n    handleClick: function handleClick() {\n      setOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/bin-red.svg\",\n    alt: \"Delete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }\n  }, \" \", t('targets.modalDelete.delete'), \" \")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.version,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Details : \", data.description)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.aboutDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, t('workflowCluster.header.formControl.about'), ' '))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stepsDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.connectdevice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, t('targets.newTarget.head')), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, t('targets.newTarget.head1')), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, t('targets.newTarget.head2')), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, t('targets.newTarget.head3'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rightMargin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, link && /*#__PURE__*/React.createElement(TargetCopy, {\n    yamlLink: link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 26\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, open ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Unimodal, {\n    open: open,\n    handleClose: function handleClose() {\n      setOpen(false);\n    },\n    hasCloseBtn: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/bin-red-delete.svg\",\n    alt: \"Delete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typo,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 23\n    }\n  }, t('targets.modalDelete.head1'), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 58\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, \" \", t('targets.modalDelete.head2')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.textSecond,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typoSub,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 23\n    }\n  }, t('targets.modalDelete.head3'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutline, {\n    isDisabled: false,\n    handleClick: function handleClick() {\n      setOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, \" \", t('targets.modalDelete.no'))), /*#__PURE__*/React.createElement(ButtonFilled, {\n    isDisabled: false,\n    isPrimary: true,\n    handleClick: handleDelete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, t('targets.modalDelete.yes'))))))) : null))));\n};\n\nexport default ClusterInfo;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/Targets/ClusterInfo/index.tsx"],"names":["Typography","React","useTranslation","useMutation","useSelector","history","ButtonOutline","useStyles","Scaffold","TargetCopy","DELETE_CLUSTER","Unimodal","ButtonFilled","BackButton","ClusterInfo","location","data","state","classes","link","token","deleteCluster","useState","open","setOpen","handleDelete","variables","cluster_id","push","userRole","userData","t","backBotton","header","mainDiv","detailsDiv","firstCol","linkBox","status","is_active","check","active","is_cluster_confirmed","pending","notactive","buttonBox","version","description","aboutDiv","stepsDiv","connectdevice","rightMargin","body","text","typo","textSecond","typoSub","buttonGroup"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport { history } from '../../../redux/configureStore';\nimport ButtonOutline from '../../Button/ButtonOutline';\n// import BrowseWorkflow from '../TargetHome/BrowseWorkflow';\nimport useStyles from './styles';\nimport Scaffold from '../../../containers/layouts/Scaffold';\nimport TargetCopy from '../TargetCopy';\nimport { Cluster, DeleteCluster } from '../../../models/graphql/clusterData';\nimport { LocationState } from '../../../models/routerModel';\nimport { DELETE_CLUSTER } from '../../../graphql';\nimport Unimodal from '../../../containers/layouts/Unimodal';\nimport ButtonFilled from '../../Button/ButtonFilled';\nimport BackButton from '../../Button/BackButton';\nimport { RootState } from '../../../redux/reducers';\n\ninterface ClusterProps {\n  data: Cluster;\n}\ninterface ClusterVarsProps {\n  location: LocationState<ClusterProps>;\n}\n\nconst ClusterInfo: React.FC<ClusterVarsProps> = ({ location }) => {\n  const { data } = location.state;\n  const classes = useStyles();\n  const link: string = data.token;\n\n  const [deleteCluster] = useMutation<DeleteCluster>(DELETE_CLUSTER);\n  const [open, setOpen] = React.useState(false);\n\n  const handleDelete = () => {\n    deleteCluster({ variables: { cluster_id: data.cluster_id } });\n    history.push('/targets');\n  };\n\n  const userRole = useSelector((state: RootState) => state.userData.userRole);\n  const { t } = useTranslation();\n\n  return (\n    <Scaffold>\n      <section className=\"Header section\">\n        <div className={classes.backBotton}>\n          <BackButton isDisabled={false}>\n            <div>{t('workflowCluster.header.formControl.back')}</div>\n          </BackButton>\n          <div className={classes.header}>\n            <Typography variant=\"h4\">\n              {t('workflowCluster.header.formControl.clusterInfo')}\n            </Typography>\n          </div>\n        </div>\n      </section>\n      <section className=\"Connect new target\">\n        <div className={classes.mainDiv}>\n          <div className={classes.detailsDiv}>\n            {/* name */}\n            <div className={classes.firstCol}>\n              <div className={classes.linkBox}>\n                <div className={classes.status}>\n                  <div>\n                    <Typography variant=\"h6\">\n                      <strong>{t('targets.newTarget.clusterDetails')}</strong>\n                    </Typography>\n                  </div>\n                  <div>\n                    {data.is_active ? (\n                      <Typography\n                        className={`${classes.check} ${classes.active}`}\n                      >\n                        {t('workflowCluster.header.formControl.menu1')}\n                      </Typography>\n                    ) : data.is_cluster_confirmed === false ? (\n                      <Typography\n                        className={`${classes.check} ${classes.pending}`}\n                      >\n                        {t('workflowCluster.header.formControl.menu6')}\n                      </Typography>\n                    ) : (\n                      <Typography\n                        className={`${classes.check} ${classes.notactive}`}\n                      >\n                        {t('workflowCluster.header.formControl.menu2')}\n                      </Typography>\n                    )}\n                  </div>\n                </div>\n                <div className={classes.buttonBox}>\n                  <ButtonOutline\n                    isDisabled={userRole === 'Viewer'}\n                    handleClick={() => {\n                      setOpen(true);\n                    }}\n                  >\n                    <div className={classes.status}>\n                      <img src=\"/icons/bin-red.svg\" alt=\"Delete\" />\n                      <div> {t('targets.modalDelete.delete')} </div>\n                    </div>\n                  </ButtonOutline>\n                </div>\n              </div>\n            </div>\n            <div className={classes.version}>\n              <Typography>\n                <strong>Details : {data.description}</strong>\n              </Typography>\n            </div>\n          </div>\n          <div>\n            <div className={classes.aboutDiv}>\n              <div>\n                <Typography variant=\"h6\">\n                  <strong>\n                    {t('workflowCluster.header.formControl.about')}{' '}\n                  </strong>\n                </Typography>\n              </div>\n              <div className={classes.stepsDiv}>\n                <Typography className={classes.connectdevice}>\n                  {t('targets.newTarget.head')}\n                </Typography>\n                <Typography>{t('targets.newTarget.head1')}</Typography>\n                <Typography>{t('targets.newTarget.head2')}</Typography>\n                <Typography>{t('targets.newTarget.head3')}</Typography>\n              </div>\n              <div className={classes.rightMargin}>\n                {link && <TargetCopy yamlLink={link} />}\n              </div>\n            </div>\n          </div>\n          <div>\n            {open ? (\n              <div>\n                <Unimodal\n                  open={open}\n                  handleClose={() => {\n                    setOpen(false);\n                  }}\n                  hasCloseBtn\n                >\n                  <div className={classes.body}>\n                    <img src=\"/icons/bin-red-delete.svg\" alt=\"Delete\" />\n                    <div className={classes.text}>\n                      <Typography className={classes.typo} align=\"center\">\n                        {t('targets.modalDelete.head1')} <br />\n                        <strong> {t('targets.modalDelete.head2')}</strong>\n                      </Typography>\n                    </div>\n                    <div className={classes.textSecond}>\n                      <Typography className={classes.typoSub} align=\"center\">\n                        {t('targets.modalDelete.head3')}\n                      </Typography>\n                    </div>\n                    <div className={classes.buttonGroup}>\n                      <ButtonOutline\n                        isDisabled={false}\n                        handleClick={() => {\n                          setOpen(false);\n                        }}\n                      >\n                        <> {t('targets.modalDelete.no')}</>\n                      </ButtonOutline>\n\n                      <ButtonFilled\n                        isDisabled={false}\n                        isPrimary\n                        handleClick={handleDelete}\n                      >\n                        <>{t('targets.modalDelete.yes')}</>\n                      </ButtonFilled>\n                    </div>\n                  </div>\n                </Unimodal>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </section>\n    </Scaffold>\n  );\n};\n\nexport default ClusterInfo;\n"]},"metadata":{},"sourceType":"module"}