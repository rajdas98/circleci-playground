{"ast":null,"code":"import _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/Header/ProjectListItem.tsx\";\n\nimport { Avatar, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\nimport React, { useState } from 'react';\nimport useStyles from './styles';\n\nvar ProjectListItem = function ProjectListItem(_ref) {\n  var project = _ref.project,\n      divider = _ref.divider,\n      selectedProjectID = _ref.selectedProjectID,\n      callbackToSetActiveProjectID = _ref.callbackToSetActiveProjectID;\n  var classes = useStyles();\n\n  var _useState = useState(project.id === selectedProjectID),\n      _useState2 = _slicedToArray(_useState, 2),\n      projSelected = _useState2[0],\n      setProjSelected = _useState2[1];\n\n  var selectProject = function selectProject() {\n    callbackToSetActiveProjectID(\"\".concat(project.id));\n    setProjSelected(true);\n  };\n\n  return /*#__PURE__*/React.createElement(ListItem, {\n    \"data-cy\": \"project\",\n    divider: divider,\n    onClick: selectProject,\n    style: {\n      backgroundColor: projSelected ? '#109B67' : 'white'\n    },\n    className: classes.listItemStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, projSelected ? /*#__PURE__*/React.createElement(Avatar, {\n    style: {\n      backgroundColor: '#109B67',\n      width: 32,\n      height: 32\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircleSharpIcon, {\n    style: {\n      color: 'white',\n      width: 36,\n      height: 36\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Avatar, {\n    style: {\n      backgroundColor: '#109B67',\n      width: 36,\n      height: 36\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InsertDriveFileOutlinedIcon, {\n    style: {\n      color: 'white',\n      backgroundColor: '#109B67'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: project.name,\n    style: {\n      fontSize: 14\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ProjectListItem;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/Header/ProjectListItem.tsx"],"names":["Avatar","ListItem","ListItemAvatar","ListItemText","CheckCircleSharpIcon","InsertDriveFileOutlinedIcon","React","useState","useStyles","ProjectListItem","project","divider","selectedProjectID","callbackToSetActiveProjectID","classes","id","projSelected","setProjSelected","selectProject","backgroundColor","listItemStyle","width","height","color","name","fontSize"],"mappings":";;;;;AAAA,SACEA,MADF,EAEEC,QAFF,EAGEC,cAHF,EAIEC,YAJF,QAKO,mBALP;AAMA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,2BAAP,MAAwC,4CAAxC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,OAAOC,SAAP,MAAsB,UAAtB;;AASA,IAAMC,eAA+C,GAAG,SAAlDA,eAAkD,OAKlD;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,OAGI,QAHJA,OAGI;AAAA,MAFJC,iBAEI,QAFJA,iBAEI;AAAA,MADJC,4BACI,QADJA,4BACI;AACJ,MAAMC,OAAO,GAAGN,SAAS,EAAzB;;AADI,kBAEoCD,QAAQ,CAC9CG,OAAO,CAACK,EAAR,KAAeH,iBAD+B,CAF5C;AAAA;AAAA,MAEGI,YAFH;AAAA,MAEiBC,eAFjB;;AAMJ,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BL,IAAAA,4BAA4B,WAAIH,OAAO,CAACK,EAAZ,EAA5B;AACAE,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAHD;;AAKA,sBACE,oBAAC,QAAD;AACE,eAAQ,SADV;AAEE,IAAA,OAAO,EAAEN,OAFX;AAGE,IAAA,OAAO,EAAEO,aAHX;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAEH,YAAY,GAAG,SAAH,GAAe;AAA9C,KAJT;AAKE,IAAA,SAAS,EAAEF,OAAO,CAACM,aALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,YAAY,gBACX,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,eAAe,EAAE,SADZ;AAELE,MAAAA,KAAK,EAAE,EAFF;AAGLC,MAAAA,MAAM,EAAE;AAHH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,oBAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBF,MAAAA,KAAK,EAAE,EAAzB;AAA6BC,MAAAA,MAAM,EAAE;AAArC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADW,gBAaX,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,eAAe,EAAE,SADZ;AAELE,MAAAA,KAAK,EAAE,EAFF;AAGLC,MAAAA,MAAM,EAAE;AAHH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,2BAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,OADF;AAELJ,MAAAA,eAAe,EAAE;AAFZ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAdJ,CAPF,eAqCE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAET,OAAO,CAACc,IAA/B;AAAqC,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,CADF;AAmDD,CAnED;;AAqEA,eAAehB,eAAf","sourcesContent":["import {\n  Avatar,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from '@material-ui/core';\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\nimport React, { useState } from 'react';\nimport { Project } from '../../models/graphql/user';\nimport { ProjectsCallBackType } from '../../models/header';\nimport useStyles from './styles';\n\ninterface ProjectListItemProps {\n  project: Project;\n  divider: boolean;\n  selectedProjectID: string;\n  callbackToSetActiveProjectID: ProjectsCallBackType;\n}\n\nconst ProjectListItem: React.FC<ProjectListItemProps> = ({\n  project,\n  divider,\n  selectedProjectID,\n  callbackToSetActiveProjectID,\n}) => {\n  const classes = useStyles();\n  const [projSelected, setProjSelected] = useState(\n    project.id === selectedProjectID\n  );\n\n  const selectProject = () => {\n    callbackToSetActiveProjectID(`${project.id}`);\n    setProjSelected(true);\n  };\n\n  return (\n    <ListItem\n      data-cy=\"project\"\n      divider={divider}\n      onClick={selectProject}\n      style={{ backgroundColor: projSelected ? '#109B67' : 'white' }}\n      className={classes.listItemStyle}\n    >\n      <ListItemAvatar>\n        {projSelected ? (\n          <Avatar\n            style={{\n              backgroundColor: '#109B67',\n              width: 32,\n              height: 32,\n            }}\n          >\n            <CheckCircleSharpIcon\n              style={{ color: 'white', width: 36, height: 36 }}\n            />\n          </Avatar>\n        ) : (\n          <Avatar\n            style={{\n              backgroundColor: '#109B67',\n              width: 36,\n              height: 36,\n            }}\n          >\n            <InsertDriveFileOutlinedIcon\n              style={{\n                color: 'white',\n                backgroundColor: '#109B67',\n              }}\n            />\n          </Avatar>\n        )}\n      </ListItemAvatar>\n      <ListItemText primary={project.name} style={{ fontSize: 14 }} />\n      {/* <ListItemSecondaryAction>\n        <IconButton edge=\"end\" aria-label=\"more\" onClick={extraOptions}>\n          {projSelected ? (\n            <MoreHorizIcon style={{ color: 'white' }} />\n          ) : (\n            <MoreHorizIcon />\n          )}\n        </IconButton>\n      </ListItemSecondaryAction>\n          */}\n    </ListItem>\n  );\n};\n\nexport default ProjectListItem;\n"]},"metadata":{},"sourceType":"module"}