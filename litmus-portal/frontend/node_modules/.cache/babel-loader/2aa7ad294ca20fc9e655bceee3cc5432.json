{"ast":null,"code":"import _objectSpread from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ScheduleWorkflow/index.tsx\";\n\nimport { Divider, FormControl, FormControlLabel, Radio, RadioGroup, Select, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport CustomDate from '../../../components/DateTime/CustomDate/index';\nimport CustomTime from '../../../components/DateTime/CustomTime/index';\nimport useActions from '../../../redux/actions';\nimport SetTime from './SetTime/index';\nimport useStyles from './styles';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport * as TemplateSelectionActions from '../../../redux/actions/template';\n\nvar ScheduleWorkflow = function ScheduleWorkflow() {\n  // Initial Cron State\n  var _useState = useState({\n    minute: '*',\n    hour: '*',\n    day_month: '*',\n    month: '*',\n    day_week: '*'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      cronValue = _useState2[0],\n      setCronValue = _useState2[1]; // Redux States for Schedule\n\n\n  var workflowData = useSelector(function (state) {\n    return state.workflowData;\n  });\n  var workflow = useActions(WorkflowActions);\n  var template = useActions(TemplateSelectionActions); // Controls Radio Buttons\n\n  var _React$useState = React.useState(workflowData.scheduleType.scheduleOnce),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n  }; // Controls inner radio buttons of Recurring Schedule\n\n\n  var _React$useState3 = React.useState(workflowData.scheduleType.recurringSchedule),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      valueDef = _React$useState4[0],\n      setValueDef = _React$useState4[1];\n\n  var handleChangeInstance = function handleChangeInstance(event) {\n    setValueDef(event.target.value);\n  }; // UseEffect to update the cron syntax with changes\n\n\n  useEffect(function () {\n    var cronSyntax = \"\".concat(cronValue.minute, \" \").concat(cronValue.hour, \" \").concat(cronValue.day_month, \" \").concat(cronValue.month, \" \").concat(cronValue.day_week);\n    if (value === 'now') workflow.setWorkflowDetails({\n      cronSyntax: ''\n    });else workflow.setWorkflowDetails({\n      cronSyntax\n    });\n  }, [cronValue]);\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // Sets individual minutes\n\n\n  var _React$useState5 = React.useState(workflowData.scheduleInput.hour_interval),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      minute = _React$useState6[0],\n      setMinute = _React$useState6[1]; // Sets Weekdays\n\n\n  var _React$useState7 = React.useState(workflowData.scheduleInput.weekday),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      days = _React$useState8[0],\n      setDays = _React$useState8[1]; // Sets Day in number\n\n\n  var _React$useState9 = React.useState(workflowData.scheduleInput.day),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      dates = _React$useState10[0],\n      setDates = _React$useState10[1]; // Sets Time\n\n\n  var _React$useState11 = React.useState(new Date(workflowData.scheduleInput.time)),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      selectedTime = _React$useState12[0],\n      setSelectedTime = _React$useState12[1]; // Sets Date\n\n\n  var _React$useState13 = React.useState(new Date(workflowData.scheduleInput.date)),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      selectedDate = _React$useState14[0],\n      setSelectedDate = _React$useState14[1]; // Function to validate the date and time for \"Specific Time\" radio button\n\n\n  var validateTime = function validateTime(time, date) {\n    if (value === 'specificTime' && (time === null || time === void 0 ? void 0 : time.setSeconds(0)) <= new Date().setSeconds(0) && (date === null || date === void 0 ? void 0 : date.getTime()) <= new Date().getTime()) {\n      var _ref;\n\n      var newTime = new Date();\n      newTime.setMinutes(newTime.getMinutes() + 5);\n      setSelectedTime(newTime);\n      workflow.setWorkflowDetails({\n        scheduleInput: _objectSpread(_objectSpread({}, workflowData.scheduleInput), {}, {\n          date,\n          time: newTime\n        })\n      });\n      setCronValue(_objectSpread(_objectSpread({}, cronValue), {}, {\n        minute: newTime.getMinutes().toString(),\n        hour: newTime.getHours().toString(),\n        day_month: date === null || date === void 0 ? void 0 : date.getDate().toString(),\n        month: (_ref = date && date.getMonth() + 1) === null || _ref === void 0 ? void 0 : _ref.toString()\n      }));\n    } else {\n      var _ref2;\n\n      workflow.setWorkflowDetails({\n        scheduleInput: _objectSpread(_objectSpread({}, workflowData.scheduleInput), {}, {\n          date,\n          time\n        })\n      });\n      setCronValue(_objectSpread(_objectSpread({}, cronValue), {}, {\n        minute: time === null || time === void 0 ? void 0 : time.getMinutes().toString(),\n        hour: time === null || time === void 0 ? void 0 : time.getHours().toString(),\n        day_month: date === null || date === void 0 ? void 0 : date.getDate().toString(),\n        month: (_ref2 = date && date.getMonth() + 1) === null || _ref2 === void 0 ? void 0 : _ref2.toString()\n      }));\n    }\n  };\n\n  var handleTimeChange = function handleTimeChange(time) {\n    setSelectedTime(time);\n    validateTime(time, selectedDate);\n  };\n\n  var _handleDateChange = function handleDateChange(date) {\n    setSelectedDate(date);\n    validateTime(selectedTime, date);\n  }; // Function for recurring date change\n\n\n  var reccuringDateChange = function reccuringDateChange(date) {\n    setSelectedTime(date);\n    setCronValue(_objectSpread(_objectSpread({}, cronValue), {}, {\n      minute: date === null || date === void 0 ? void 0 : date.getMinutes().toString(),\n      hour: date === null || date === void 0 ? void 0 : date.getHours().toString()\n    }));\n    workflow.setWorkflowDetails({\n      scheduleInput: _objectSpread(_objectSpread({}, workflowData.scheduleInput), {}, {\n        time: date\n      })\n    });\n  }; // Stores dates in an array\n\n\n  var names = [1];\n\n  for (var i = 1; i <= 30; i += 1) {\n    names[i] = i + 1;\n  }\n\n  var mins = [0];\n\n  for (var _i = 0; _i <= 59; _i += 1) {\n    mins[_i] = _i;\n  } // Day names\n\n\n  var weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']; // UseEffect to update the values of CronSyntax on radio button change\n\n  useEffect(function () {\n    if (value === 'now') {\n      setValueDef('');\n      setCronValue({\n        minute: '',\n        hour: '',\n        day_month: '',\n        month: '',\n        day_week: ''\n      });\n    }\n\n    if (value === 'specificTime') {\n      var _ref3;\n\n      setValueDef('');\n      setCronValue({\n        minute: selectedTime === null || selectedTime === void 0 ? void 0 : selectedTime.getMinutes().toString(),\n        hour: selectedTime === null || selectedTime === void 0 ? void 0 : selectedTime.getHours().toString(),\n        day_month: selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.getDate().toString(),\n        month: (_ref3 = selectedDate && selectedDate.getMonth() + 1) === null || _ref3 === void 0 ? void 0 : _ref3.toString(),\n        day_week: '*'\n      });\n\n      if (workflowData.scheduleInput.time <= new Date()) {\n        var _ref4;\n\n        var newTime = new Date();\n        newTime.setMinutes(newTime.getMinutes() + 5);\n        setSelectedTime(newTime);\n        setCronValue({\n          minute: newTime.getMinutes().toString(),\n          hour: newTime.getHours().toString(),\n          day_month: selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.getDate().toString(),\n          month: (_ref4 = selectedDate && selectedDate.getMonth() + 1) === null || _ref4 === void 0 ? void 0 : _ref4.toString(),\n          day_week: '*'\n        });\n        workflow.setWorkflowDetails({\n          scheduleInput: _objectSpread(_objectSpread({}, workflowData.scheduleInput), {}, {\n            time: newTime\n          })\n        });\n      }\n    }\n\n    if (valueDef === 'everyHr') {\n      setCronValue({\n        minute: minute.toString(),\n        hour: '0-23',\n        day_month: '*',\n        month: '*',\n        day_week: '*'\n      });\n    }\n\n    if (valueDef === 'everyDay') {\n      setCronValue({\n        minute: selectedTime === null || selectedTime === void 0 ? void 0 : selectedTime.getMinutes().toString(),\n        hour: selectedTime === null || selectedTime === void 0 ? void 0 : selectedTime.getHours().toString(),\n        day_month: '*',\n        month: '*',\n        day_week: '0-6'\n      });\n    }\n\n    if (valueDef === 'everyWeek') {\n      setCronValue({\n        minute: selectedTime === null || selectedTime === void 0 ? void 0 : selectedTime.getMinutes().toString(),\n        hour: selectedTime === null || selectedTime === void 0 ? void 0 : selectedTime.getHours().toString(),\n        day_month: '*',\n        month: '*',\n        day_week: days.slice(0, 3)\n      });\n    }\n\n    if (valueDef === 'everyMonth') {\n      setCronValue({\n        minute: selectedTime === null || selectedTime === void 0 ? void 0 : selectedTime.getMinutes().toString(),\n        hour: selectedTime === null || selectedTime === void 0 ? void 0 : selectedTime.getHours().toString(),\n        day_month: dates.toString(),\n        month: '*',\n        day_week: '*'\n      });\n    }\n\n    if (value === 'recurringSchedule' && valueDef === '') {\n      template.selectTemplate({\n        isDisable: true\n      });\n    } else {\n      template.selectTemplate({\n        isDisable: false\n      });\n    }\n\n    workflow.setWorkflowDetails({\n      scheduleType: {\n        scheduleOnce: value,\n        recurringSchedule: valueDef\n      }\n    });\n  }, [valueDef, value]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scSegments,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.scheduleWorkflow.header'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.schBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"left\",\n    className: classes.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, t('createWorkflow.scheduleWorkflow.info')))), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/calendar.svg\",\n    alt: \"calendar\",\n    className: classes.calIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scFormControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"schedule\",\n    name: \"schedule\",\n    value: value,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"now\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 26\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      className: classes.radioText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 19\n      }\n    }, t('createWorkflow.scheduleWorkflow.radio.now')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"specificTime\",\n    disabled: true,\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 26\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      className: classes.radioText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 19\n      }\n    }, t('createWorkflow.scheduleWorkflow.radio.specific')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 15\n    }\n  }), value === 'specificTime' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.schLater,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.captionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.scheduleWorkflow.radio.future')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerSpecific,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CustomDate, {\n    selectedDate: selectedDate,\n    handleDateChange: function handleDateChange(event) {\n      _handleDateChange(event);\n    },\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomTime, {\n    handleDateChange: function handleDateChange(event) {\n      handleTimeChange(event);\n    },\n    value: selectedTime,\n    ampm: true,\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 21\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"recurringSchedule\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 26\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      className: classes.radioText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 19\n      }\n    }, t('createWorkflow.scheduleWorkflow.radio.recurr')),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }\n  }), value === 'recurringSchedule' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.schLater,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.captionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 19\n    }\n  }, t('createWorkflow.scheduleWorkflow.radio.rightRecurr')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerRecurring,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"instanceDef\",\n    name: \"instanceDef\",\n    value: valueDef,\n    onChange: function onChange(event) {\n      handleChangeInstance(event);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"everyHr\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 36\n      }\n    }),\n    label: t('createWorkflow.scheduleWorkflow.every.hr'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 25\n    }\n  }), valueDef === 'everyHr' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scRandom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scRandsub1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 31\n    }\n  }, t('createWorkflow.scheduleWorkflow.at')), /*#__PURE__*/React.createElement(SetTime, {\n    data: mins,\n    handleChange: function handleChange(event) {\n      setMinute(event.target.value);\n      setCronValue(_objectSpread(_objectSpread({}, cronValue), {}, {\n        minute: event.target.value.toString(),\n        hour: '0-23'\n      }));\n      workflow.setWorkflowDetails({\n        scheduleInput: _objectSpread(_objectSpread({}, workflowData.scheduleInput), {}, {\n          hour_interval: event.target.value\n        })\n      });\n    },\n    value: minute,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 31\n    }\n  }), minute === 0 || minute === 1 ? /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 33\n    }\n  }, t('createWorkflow.scheduleWorkflow.min')) : /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 33\n    }\n  }, t('createWorkflow.scheduleWorkflow.mins')))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"everyDay\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 36\n      }\n    }),\n    label: t('createWorkflow.scheduleWorkflow.every.day'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 25\n    }\n  }), valueDef === 'everyDay' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scRandom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scRandsub1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 31\n    }\n  }, t('createWorkflow.scheduleWorkflow.at')), /*#__PURE__*/React.createElement(CustomTime, {\n    handleDateChange: function handleDateChange(date) {\n      setSelectedTime(date);\n      setCronValue(_objectSpread(_objectSpread({}, cronValue), {}, {\n        minute: date === null || date === void 0 ? void 0 : date.getMinutes().toString(),\n        hour: date === null || date === void 0 ? void 0 : date.getHours().toString(),\n        day_week: '0-6'\n      }));\n      workflow.setWorkflowDetails({\n        scheduleInput: _objectSpread(_objectSpread({}, workflowData.scheduleInput), {}, {\n          time: date\n        })\n      });\n    },\n    value: selectedTime,\n    ampm: true,\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 31\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"everyWeek\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 36\n      }\n    }),\n    label: t('createWorkflow.scheduleWorkflow.every.week'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 25\n    }\n  }), valueDef === 'everyWeek' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scRandom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scRandsub1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 31\n    }\n  }, t('createWorkflow.scheduleWorkflow.on')), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControlDT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: classes.select,\n    disableUnderline: true,\n    value: days,\n    onChange: function onChange(e) {\n      setCronValue(_objectSpread(_objectSpread({}, cronValue), {}, {\n        month: '*',\n        day_week: e.target.value.slice(0, 3)\n      }));\n      setDays(e.target.value);\n      workflow.setWorkflowDetails({\n        scheduleInput: _objectSpread(_objectSpread({}, workflowData.scheduleInput), {}, {\n          weekday: e.target.value\n        })\n      });\n    },\n    label: \"days\",\n    inputProps: {\n      name: 'days',\n      style: {\n        fontSize: '0.75rem',\n        height: 7\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 33\n    }\n  }, weekdays.map(function (day) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: day,\n      className: classes.opt,\n      value: day,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 37\n      }\n    }, day);\n  }))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scRandsub1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 31\n    }\n  }, t('createWorkflow.scheduleWorkflow.at')), /*#__PURE__*/React.createElement(CustomTime, {\n    handleDateChange: function handleDateChange(date) {\n      reccuringDateChange(date);\n    },\n    value: selectedTime,\n    ampm: true,\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 31\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"everyMonth\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 36\n      }\n    }),\n    label: t('createWorkflow.scheduleWorkflow.every.month'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 25\n    }\n  }), valueDef === 'everyMonth' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.scRandom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scRandsub1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 31\n    }\n  }, t('createWorkflow.scheduleWorkflow.on')), /*#__PURE__*/React.createElement(SetTime, {\n    data: names,\n    handleChange: function handleChange(event) {\n      setCronValue(_objectSpread(_objectSpread({}, cronValue), {}, {\n        day_month: event.target.value.toString()\n      }));\n      setDates(event.target.value);\n      workflow.setWorkflowDetails({\n        scheduleInput: _objectSpread(_objectSpread({}, workflowData.scheduleInput), {}, {\n          day: event.target.value\n        })\n      });\n    },\n    value: dates,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.scRandsub1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 31\n    }\n  }, t('createWorkflow.scheduleWorkflow.at')), /*#__PURE__*/React.createElement(CustomTime, {\n    handleDateChange: function handleDateChange(date) {\n      reccuringDateChange(date);\n    },\n    value: selectedTime,\n    ampm: true,\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 31\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null))))) : /*#__PURE__*/React.createElement(React.Fragment, null))))));\n};\n\nexport default ScheduleWorkflow;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ScheduleWorkflow/index.tsx"],"names":["Divider","FormControl","FormControlLabel","Radio","RadioGroup","Select","Typography","React","useEffect","useState","useSelector","useTranslation","CustomDate","CustomTime","useActions","SetTime","useStyles","WorkflowActions","TemplateSelectionActions","ScheduleWorkflow","minute","hour","day_month","month","day_week","cronValue","setCronValue","workflowData","state","workflow","template","scheduleType","scheduleOnce","value","setValue","handleChange","event","target","recurringSchedule","valueDef","setValueDef","handleChangeInstance","cronSyntax","setWorkflowDetails","classes","t","scheduleInput","hour_interval","setMinute","weekday","days","setDays","day","dates","setDates","Date","time","selectedTime","setSelectedTime","date","selectedDate","setSelectedDate","validateTime","setSeconds","getTime","newTime","setMinutes","getMinutes","toString","getHours","getDate","getMonth","handleTimeChange","handleDateChange","reccuringDateChange","names","i","mins","weekdays","slice","selectTemplate","isDisable","root","scHeader","scSegments","headerText","schBody","description","calIcon","scFormControl","formControl","radioText","schLater","captionText","innerSpecific","innerRecurring","scRandom","scRandsub1","formControlDT","select","e","name","style","fontSize","height","map","opt"],"mappings":"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","sourcesContent":["import {\n  Divider,\n  FormControl,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport CustomDate from '../../../components/DateTime/CustomDate/index';\nimport CustomTime from '../../../components/DateTime/CustomTime/index';\nimport { WorkflowData } from '../../../models/redux/workflow';\nimport useActions from '../../../redux/actions';\nimport { RootState } from '../../../redux/reducers';\nimport SetTime from './SetTime/index';\nimport useStyles from './styles';\nimport * as WorkflowActions from '../../../redux/actions/workflow';\nimport * as TemplateSelectionActions from '../../../redux/actions/template';\n\ninterface ScheduleSyntax {\n  minute: string | undefined;\n  hour: string | undefined;\n  day_month: string | undefined;\n  month: string | undefined;\n  day_week: string;\n}\n\nconst ScheduleWorkflow: React.FC = () => {\n  // Initial Cron State\n  const [cronValue, setCronValue] = useState<ScheduleSyntax>({\n    minute: '*',\n    hour: '*',\n    day_month: '*',\n    month: '*',\n    day_week: '*',\n  });\n\n  // Redux States for Schedule\n  const workflowData: WorkflowData = useSelector(\n    (state: RootState) => state.workflowData\n  );\n  const workflow = useActions(WorkflowActions);\n  const template = useActions(TemplateSelectionActions);\n  // Controls Radio Buttons\n  const [value, setValue] = React.useState(\n    workflowData.scheduleType.scheduleOnce\n  );\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  // Controls inner radio buttons of Recurring Schedule\n  const [valueDef, setValueDef] = React.useState(\n    workflowData.scheduleType.recurringSchedule\n  );\n  const handleChangeInstance = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValueDef(event.target.value);\n  };\n\n  // UseEffect to update the cron syntax with changes\n  useEffect(() => {\n    const cronSyntax = `${cronValue.minute} ${cronValue.hour} ${cronValue.day_month} ${cronValue.month} ${cronValue.day_week}`;\n    if (value === 'now')\n      workflow.setWorkflowDetails({\n        cronSyntax: '',\n      });\n    else\n      workflow.setWorkflowDetails({\n        cronSyntax,\n      });\n  }, [cronValue]);\n\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  // Sets individual minutes\n  const [minute, setMinute] = React.useState(\n    workflowData.scheduleInput.hour_interval\n  );\n\n  // Sets Weekdays\n  const [days, setDays] = React.useState(workflowData.scheduleInput.weekday);\n\n  // Sets Day in number\n  const [dates, setDates] = React.useState(workflowData.scheduleInput.day);\n\n  // Sets Time\n  const [selectedTime, setSelectedTime] = React.useState<Date | null>(\n    new Date(workflowData.scheduleInput.time)\n  );\n\n  // Sets Date\n  const [selectedDate, setSelectedDate] = React.useState<Date | null>(\n    new Date(workflowData.scheduleInput.date)\n  );\n\n  // Function to validate the date and time for \"Specific Time\" radio button\n  const validateTime = (time: Date | null, date: Date | null) => {\n    if (\n      value === 'specificTime' &&\n      (time?.setSeconds(0) as number) <= new Date().setSeconds(0) &&\n      (date?.getTime() as number) <= new Date().getTime()\n    ) {\n      const newTime = new Date();\n      newTime.setMinutes(newTime.getMinutes() + 5);\n      setSelectedTime(newTime);\n      workflow.setWorkflowDetails({\n        scheduleInput: {\n          ...workflowData.scheduleInput,\n          date,\n          time: newTime,\n        },\n      });\n      setCronValue({\n        ...cronValue,\n        minute: newTime.getMinutes().toString(),\n        hour: newTime.getHours().toString(),\n        day_month: date?.getDate().toString(),\n        month: (date && date.getMonth() + 1)?.toString(),\n      });\n    } else {\n      workflow.setWorkflowDetails({\n        scheduleInput: {\n          ...workflowData.scheduleInput,\n          date,\n          time,\n        },\n      });\n      setCronValue({\n        ...cronValue,\n        minute: time?.getMinutes().toString(),\n        hour: time?.getHours().toString(),\n        day_month: date?.getDate().toString(),\n        month: (date && date.getMonth() + 1)?.toString(),\n      });\n    }\n  };\n\n  const handleTimeChange = (time: Date | null) => {\n    setSelectedTime(time);\n    validateTime(time, selectedDate);\n  };\n\n  const handleDateChange = (date: Date | null) => {\n    setSelectedDate(date);\n    validateTime(selectedTime, date);\n  };\n\n  // Function for recurring date change\n  const reccuringDateChange = (date: Date | null) => {\n    setSelectedTime(date);\n    setCronValue({\n      ...cronValue,\n      minute: date?.getMinutes().toString(),\n      hour: date?.getHours().toString(),\n    });\n    workflow.setWorkflowDetails({\n      scheduleInput: {\n        ...workflowData.scheduleInput,\n        time: date,\n      },\n    });\n  };\n\n  // Stores dates in an array\n  const names: number[] = [1];\n  for (let i = 1; i <= 30; i += 1) {\n    names[i] = i + 1;\n  }\n  const mins: number[] = [0];\n  for (let i = 0; i <= 59; i += 1) {\n    mins[i] = i;\n  }\n  // Day names\n  const weekdays: string[] = [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n    'Sunday',\n  ];\n\n  // UseEffect to update the values of CronSyntax on radio button change\n  useEffect(() => {\n    if (value === 'now') {\n      setValueDef('');\n      setCronValue({\n        minute: '',\n        hour: '',\n        day_month: '',\n        month: '',\n        day_week: '',\n      });\n    }\n    if (value === 'specificTime') {\n      setValueDef('');\n      setCronValue({\n        minute: selectedTime?.getMinutes().toString(),\n        hour: selectedTime?.getHours().toString(),\n        day_month: selectedDate?.getDate().toString(),\n        month: (selectedDate && selectedDate.getMonth() + 1)?.toString(),\n        day_week: '*',\n      });\n      if (workflowData.scheduleInput.time <= new Date()) {\n        const newTime = new Date();\n        newTime.setMinutes(newTime.getMinutes() + 5);\n        setSelectedTime(newTime);\n        setCronValue({\n          minute: newTime.getMinutes().toString(),\n          hour: newTime.getHours().toString(),\n          day_month: selectedDate?.getDate().toString(),\n          month: (selectedDate && selectedDate.getMonth() + 1)?.toString(),\n          day_week: '*',\n        });\n        workflow.setWorkflowDetails({\n          scheduleInput: {\n            ...workflowData.scheduleInput,\n            time: newTime,\n          },\n        });\n      }\n    }\n    if (valueDef === 'everyHr') {\n      setCronValue({\n        minute: minute.toString(),\n        hour: '0-23',\n        day_month: '*',\n        month: '*',\n        day_week: '*',\n      });\n    }\n    if (valueDef === 'everyDay') {\n      setCronValue({\n        minute: selectedTime?.getMinutes().toString(),\n        hour: selectedTime?.getHours().toString(),\n        day_month: '*',\n        month: '*',\n        day_week: '0-6',\n      });\n    }\n    if (valueDef === 'everyWeek') {\n      setCronValue({\n        minute: selectedTime?.getMinutes().toString(),\n        hour: selectedTime?.getHours().toString(),\n        day_month: '*',\n        month: '*',\n        day_week: days.slice(0, 3),\n      });\n    }\n    if (valueDef === 'everyMonth') {\n      setCronValue({\n        minute: selectedTime?.getMinutes().toString(),\n        hour: selectedTime?.getHours().toString(),\n        day_month: dates.toString(),\n        month: '*',\n        day_week: '*',\n      });\n    }\n    if (value === 'recurringSchedule' && valueDef === '') {\n      template.selectTemplate({ isDisable: true });\n    } else {\n      template.selectTemplate({ isDisable: false });\n    }\n    workflow.setWorkflowDetails({\n      scheduleType: {\n        scheduleOnce: value,\n        recurringSchedule: valueDef,\n      },\n    });\n  }, [valueDef, value]);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.scHeader}>\n        {/* Upper segment */}\n        <div className={classes.scSegments}>\n          <div>\n            <Typography className={classes.headerText}>\n              <strong>{t('createWorkflow.scheduleWorkflow.header')}</strong>\n            </Typography>\n\n            <div className={classes.schBody}>\n              <Typography align=\"left\" className={classes.description}>\n                {t('createWorkflow.scheduleWorkflow.info')}\n              </Typography>\n            </div>\n          </div>\n          <img\n            src=\"./icons/calendar.svg\"\n            alt=\"calendar\"\n            className={classes.calIcon}\n          />\n        </div>\n        <Divider />\n\n        {/* Lower segment */}\n        <div className={classes.scFormControl}>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <RadioGroup\n              aria-label=\"schedule\"\n              name=\"schedule\"\n              value={value}\n              onChange={handleChange}\n            >\n              {/* options to choose schedule */}\n              <FormControlLabel\n                value=\"now\"\n                control={<Radio />}\n                label={\n                  <Typography className={classes.radioText}>\n                    {t('createWorkflow.scheduleWorkflow.radio.now')}\n                  </Typography>\n                }\n              />\n              <FormControlLabel\n                value=\"specificTime\"\n                disabled\n                control={<Radio />}\n                label={\n                  <Typography className={classes.radioText}>\n                    {t('createWorkflow.scheduleWorkflow.radio.specific')}\n                  </Typography>\n                }\n              />\n              {value === 'specificTime' ? (\n                <div className={classes.schLater}>\n                  <Typography className={classes.captionText}>\n                    {t('createWorkflow.scheduleWorkflow.radio.future')}\n                  </Typography>\n                  <div className={classes.innerSpecific}>\n                    <CustomDate\n                      selectedDate={selectedDate}\n                      handleDateChange={(event) => {\n                        handleDateChange(event);\n                      }}\n                      disabled={false}\n                    />\n                    <CustomTime\n                      handleDateChange={(event) => {\n                        handleTimeChange(event);\n                      }}\n                      value={selectedTime}\n                      ampm\n                      disabled={false}\n                    />\n                  </div>\n                </div>\n              ) : (\n                <></>\n              )}\n              <FormControlLabel\n                value=\"recurringSchedule\"\n                control={<Radio />}\n                label={\n                  <Typography className={classes.radioText}>\n                    {t('createWorkflow.scheduleWorkflow.radio.recurr')}\n                  </Typography>\n                }\n              />\n              {value === 'recurringSchedule' ? (\n                <div className={classes.schLater}>\n                  <Typography className={classes.captionText}>\n                    {t('createWorkflow.scheduleWorkflow.radio.rightRecurr')}\n                  </Typography>\n\n                  {/* options to select time of recurring schedule */}\n                  <div className={classes.innerRecurring}>\n                    <FormControl component=\"fieldset\">\n                      <RadioGroup\n                        aria-label=\"instanceDef\"\n                        name=\"instanceDef\"\n                        value={valueDef}\n                        onChange={(event) => {\n                          handleChangeInstance(event);\n                        }}\n                      >\n                        <FormControlLabel\n                          value=\"everyHr\"\n                          control={<Radio />}\n                          label={t('createWorkflow.scheduleWorkflow.every.hr')}\n                        />\n                        {valueDef === 'everyHr' ? (\n                          <div>\n                            <div className={classes.scRandom}>\n                              <Typography className={classes.scRandsub1}>\n                                {t('createWorkflow.scheduleWorkflow.at')}\n                              </Typography>\n                              <SetTime\n                                data={mins}\n                                handleChange={(event) => {\n                                  setMinute(event.target.value as number);\n                                  setCronValue({\n                                    ...cronValue,\n                                    minute: (event.target\n                                      .value as number).toString(),\n                                    hour: '0-23',\n                                  });\n                                  workflow.setWorkflowDetails({\n                                    scheduleInput: {\n                                      ...workflowData.scheduleInput,\n                                      hour_interval: event.target\n                                        .value as number,\n                                    },\n                                  });\n                                }}\n                                value={minute}\n                              />\n                              {minute === 0 || minute === 1 ? (\n                                <Typography>\n                                  {t('createWorkflow.scheduleWorkflow.min')}\n                                </Typography>\n                              ) : (\n                                <Typography>\n                                  {t('createWorkflow.scheduleWorkflow.mins')}\n                                </Typography>\n                              )}\n                            </div>\n                          </div>\n                        ) : (\n                          <></>\n                        )}\n                        <FormControlLabel\n                          value=\"everyDay\"\n                          control={<Radio />}\n                          label={t('createWorkflow.scheduleWorkflow.every.day')}\n                        />\n                        {valueDef === 'everyDay' ? (\n                          <div>\n                            <div className={classes.scRandom}>\n                              <Typography className={classes.scRandsub1}>\n                                {t('createWorkflow.scheduleWorkflow.at')}\n                              </Typography>\n                              <CustomTime\n                                handleDateChange={(date: Date | null) => {\n                                  setSelectedTime(date);\n                                  setCronValue({\n                                    ...cronValue,\n                                    minute: date?.getMinutes().toString(),\n                                    hour: date?.getHours().toString(),\n                                    day_week: '0-6',\n                                  });\n                                  workflow.setWorkflowDetails({\n                                    scheduleInput: {\n                                      ...workflowData.scheduleInput,\n                                      time: date,\n                                    },\n                                  });\n                                }}\n                                value={selectedTime}\n                                ampm\n                                disabled={false}\n                              />\n                            </div>\n                          </div>\n                        ) : (\n                          <></>\n                        )}\n                        <FormControlLabel\n                          value=\"everyWeek\"\n                          control={<Radio />}\n                          label={t(\n                            'createWorkflow.scheduleWorkflow.every.week'\n                          )}\n                        />\n                        {valueDef === 'everyWeek' ? (\n                          <div>\n                            <div className={classes.scRandom}>\n                              <Typography className={classes.scRandsub1}>\n                                {t('createWorkflow.scheduleWorkflow.on')}\n                              </Typography>\n                              <FormControl className={classes.formControlDT}>\n                                <Select\n                                  className={classes.select}\n                                  disableUnderline\n                                  value={days}\n                                  onChange={(e) => {\n                                    setCronValue({\n                                      ...cronValue,\n                                      month: '*',\n                                      day_week: ((e.target\n                                        .value as unknown) as string).slice(\n                                        0,\n                                        3\n                                      ),\n                                    });\n                                    setDays(\n                                      (e.target.value as unknown) as string\n                                    );\n                                    workflow.setWorkflowDetails({\n                                      scheduleInput: {\n                                        ...workflowData.scheduleInput,\n                                        weekday: (e.target\n                                          .value as unknown) as string,\n                                      },\n                                    });\n                                  }}\n                                  label=\"days\"\n                                  inputProps={{\n                                    name: 'days',\n                                    style: {\n                                      fontSize: '0.75rem',\n                                      height: 7,\n                                    },\n                                  }}\n                                >\n                                  {weekdays.map((day) => (\n                                    <option\n                                      key={day}\n                                      className={classes.opt}\n                                      value={day}\n                                    >\n                                      {day}\n                                    </option>\n                                  ))}\n                                </Select>\n                              </FormControl>\n                              <Typography className={classes.scRandsub1}>\n                                {t('createWorkflow.scheduleWorkflow.at')}\n                              </Typography>\n                              <CustomTime\n                                handleDateChange={(date: Date | null) => {\n                                  reccuringDateChange(date);\n                                }}\n                                value={selectedTime}\n                                ampm\n                                disabled={false}\n                              />\n                            </div>\n                          </div>\n                        ) : (\n                          <></>\n                        )}\n                        <FormControlLabel\n                          value=\"everyMonth\"\n                          control={<Radio />}\n                          label={t(\n                            'createWorkflow.scheduleWorkflow.every.month'\n                          )}\n                        />\n                        {valueDef === 'everyMonth' ? (\n                          <div>\n                            <div className={classes.scRandom}>\n                              <Typography className={classes.scRandsub1}>\n                                {t('createWorkflow.scheduleWorkflow.on')}\n                              </Typography>\n                              <SetTime\n                                data={names}\n                                handleChange={(event) => {\n                                  setCronValue({\n                                    ...cronValue,\n                                    day_month: (event.target\n                                      .value as number).toString(),\n                                  });\n                                  setDates(event.target.value as number);\n                                  workflow.setWorkflowDetails({\n                                    scheduleInput: {\n                                      ...workflowData.scheduleInput,\n                                      day: event.target.value as number,\n                                    },\n                                  });\n                                }}\n                                value={dates}\n                              />\n                              <Typography className={classes.scRandsub1}>\n                                {t('createWorkflow.scheduleWorkflow.at')}\n                              </Typography>\n                              <CustomTime\n                                handleDateChange={(date: Date | null) => {\n                                  reccuringDateChange(date);\n                                }}\n                                value={selectedTime}\n                                ampm\n                                disabled={false}\n                              />\n                            </div>\n                          </div>\n                        ) : (\n                          <></>\n                        )}\n                      </RadioGroup>\n                    </FormControl>\n                  </div>\n                </div>\n              ) : (\n                <></>\n              )}\n            </RadioGroup>\n          </FormControl>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScheduleWorkflow;\n"]},"metadata":{},"sourceType":"module"}