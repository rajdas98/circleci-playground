{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/MyHub/MyHubExperiment/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useTranslation } from 'react-i18next';\nimport Scaffold from '../../../containers/layouts/Scaffold';\nimport useStyles from './styles';\nimport ExperimentHeader from '../../../components/ExperimentHeader';\nimport DeveloperGuide from '../../../components/DeveloperGuide';\nimport ExperimentInfo from '../../../components/ExperimentInfo';\nimport UsefulLinks from '../../../components/UsefulLinks';\nimport InstallChaos from '../../../components/InstallChaos';\nimport { GET_EXPERIMENT_DATA, GET_HUB_STATUS } from '../../../graphql';\nimport Loader from '../../../components/Loader';\n\nvar MyHub = function MyHub() {\n  _s();\n\n  var classes = useStyles(); // User Data from Redux\n\n  var userData = useSelector(function (state) {\n    return state.userData;\n  }); // Get all MyHubs with status\n\n  var _useQuery = useQuery(GET_HUB_STATUS, {\n    variables: {\n      data: userData.selectedProjectID\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      hubDetails = _useQuery.data; // Get Parameters from URL\n\n\n  var paramData = useParams(); // Filter the selected MyHub\n\n  var UserHub = hubDetails === null || hubDetails === void 0 ? void 0 : hubDetails.getHubStatus.filter(function (myHub) {\n    return paramData.hubname === myHub.HubName;\n  })[0]; // Query to get charts of selected MyHub\n\n  var _useQuery2 = useQuery(GET_EXPERIMENT_DATA, {\n    variables: {\n      data: {\n        HubName: paramData.hubname,\n        ProjectID: userData.selectedProjectID,\n        ChartName: paramData.chart,\n        ExperimentName: paramData.experiment\n      }\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      data = _useQuery2.data,\n      loading = _useQuery2.loading;\n\n  var experimentData = data === null || data === void 0 ? void 0 : data.getHubExperiment; // State for default video URL\n\n  var videoURL = '';\n  var video = data === null || data === void 0 ? void 0 : data.getHubExperiment.Spec.Links.filter(function (l) {\n    return l.Name === 'Video';\n  })[0];\n  videoURL = video ? video.Url : ''; // State for default icon URL\n\n  var urltoIcon = \"\".concat(UserHub === null || UserHub === void 0 ? void 0 : UserHub.RepoURL, \"/raw/\").concat(UserHub === null || UserHub === void 0 ? void 0 : UserHub.RepoBranch, \"/charts/\").concat(paramData.chart, \"/icons/\").concat(paramData.experiment, \".png\");\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/React.createElement(Scaffold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rootContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headerDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expMain,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExperimentHeader, {\n    title: experimentData === null || experimentData === void 0 ? void 0 : experimentData.Metadata.Name,\n    description: experimentData === null || experimentData === void 0 ? void 0 : experimentData.Spec.CategoryDescription.split('.')[0],\n    urlToIcon: urltoIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.developerDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DeveloperGuide, {\n    expAvailable: true,\n    header: t('myhub.experimentPage.congrats'),\n    description: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.detailDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expInfoDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExperimentInfo, {\n    description: experimentData === null || experimentData === void 0 ? void 0 : experimentData.Spec.CategoryDescription,\n    videoURL: videoURL,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.installExp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.horizontalLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.note,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"PRE-REQUISITE:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.linkText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://docs.litmuschaos.io/docs/getstarted/\",\n    target: \"_\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }\n  }, \"Install Litmus Operator\"), \": a tool for injecting Chaos Experiments\")), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.horizontalLine,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.info,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(UsefulLinks, {\n    links: experimentData === null || experimentData === void 0 ? void 0 : experimentData.Spec.Links,\n    maintainers: experimentData === null || experimentData === void 0 ? void 0 : experimentData.Spec.Maintainers,\n    platforms: experimentData === null || experimentData === void 0 ? void 0 : experimentData.Spec.Platforms,\n    maturity: experimentData === null || experimentData === void 0 ? void 0 : experimentData.Spec.Maturity,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.installLinks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InstallChaos, {\n    title: t('myhub.experimentPage.installExp'),\n    description: t('myhub.experimentPage.installExpDesc'),\n    yamlLink: \"\".concat(UserHub === null || UserHub === void 0 ? void 0 : UserHub.RepoURL, \"/raw/\").concat(UserHub === null || UserHub === void 0 ? void 0 : UserHub.RepoBranch, \"/charts/\").concat(paramData.chart, \"/\").concat(paramData.experiment, \"/experiment.yaml\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InstallChaos, {\n    title: t('myhub.experimentPage.installRBAC'),\n    description: t('myhub.experimentPage.installRBACDesc'),\n    yamlLink: \"\".concat(UserHub === null || UserHub === void 0 ? void 0 : UserHub.RepoURL, \"/raw/\").concat(UserHub === null || UserHub === void 0 ? void 0 : UserHub.RepoBranch, \"/charts/\").concat(paramData.chart, \"/\").concat(paramData.experiment, \"/rbac.yaml\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InstallChaos, {\n    title: t('myhub.experimentPage.installEngine'),\n    description: t('myhub.experimentPage.installEngineDesc'),\n    yamlLink: \"\".concat(UserHub === null || UserHub === void 0 ? void 0 : UserHub.RepoURL, \"/raw/\").concat(UserHub === null || UserHub === void 0 ? void 0 : UserHub.RepoBranch, \"/charts/\").concat(paramData.chart, \"/\").concat(paramData.experiment, \"/engine.yaml\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  })))));\n};\n\n_s(MyHub, \"sMPmpscQE6OYDVedZPKrsw452VQ=\", false, function () {\n  return [useStyles, useSelector, useQuery, useParams, useQuery, useTranslation];\n});\n\n_c = MyHub;\nexport default MyHub;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyHub\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/MyHub/MyHubExperiment/index.tsx"],"names":["React","useSelector","useParams","useQuery","useTranslation","Scaffold","useStyles","ExperimentHeader","DeveloperGuide","ExperimentInfo","UsefulLinks","InstallChaos","GET_EXPERIMENT_DATA","GET_HUB_STATUS","Loader","MyHub","classes","userData","state","variables","data","selectedProjectID","fetchPolicy","hubDetails","paramData","UserHub","getHubStatus","filter","myHub","hubname","HubName","ProjectID","ChartName","chart","ExperimentName","experiment","loading","experimentData","getHubExperiment","videoURL","video","Spec","Links","l","Name","Url","urltoIcon","RepoURL","RepoBranch","t","rootContainer","mainDiv","headerDiv","expMain","Metadata","CategoryDescription","split","developerDiv","detailDiv","expInfo","expInfoDiv","installExp","horizontalLine","note","linkText","info","Maintainers","Platforms","Maturity","installLinks"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useTranslation } from 'react-i18next';\nimport Scaffold from '../../../containers/layouts/Scaffold';\nimport useStyles from './styles';\nimport { RootState } from '../../../redux/reducers';\nimport ExperimentHeader from '../../../components/ExperimentHeader';\nimport DeveloperGuide from '../../../components/DeveloperGuide';\nimport ExperimentInfo from '../../../components/ExperimentInfo';\nimport UsefulLinks from '../../../components/UsefulLinks';\nimport InstallChaos from '../../../components/InstallChaos';\nimport { GET_EXPERIMENT_DATA, GET_HUB_STATUS } from '../../../graphql';\nimport { ExperimentDetail, HubStatus, Link } from '../../../models/redux/myhub';\nimport Loader from '../../../components/Loader';\n\ninterface URLParams {\n  chart: string;\n  experiment: string;\n  hubname: string;\n}\n\nconst MyHub = () => {\n  const classes = useStyles();\n\n  // User Data from Redux\n  const userData = useSelector((state: RootState) => state.userData);\n\n  // Get all MyHubs with status\n  const { data: hubDetails } = useQuery<HubStatus>(GET_HUB_STATUS, {\n    variables: { data: userData.selectedProjectID },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  // Get Parameters from URL\n  const paramData: URLParams = useParams();\n\n  // Filter the selected MyHub\n  const UserHub = hubDetails?.getHubStatus.filter((myHub) => {\n    return paramData.hubname === myHub.HubName;\n  })[0];\n\n  // Query to get charts of selected MyHub\n  const { data, loading } = useQuery<ExperimentDetail>(GET_EXPERIMENT_DATA, {\n    variables: {\n      data: {\n        HubName: paramData.hubname,\n        ProjectID: userData.selectedProjectID,\n        ChartName: paramData.chart,\n        ExperimentName: paramData.experiment,\n      },\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n  const experimentData = data?.getHubExperiment;\n\n  // State for default video URL\n  let videoURL: string = '';\n  const video = data?.getHubExperiment.Spec.Links.filter(\n    (l: Link) => l.Name === 'Video'\n  )[0];\n  videoURL = video ? video.Url : '';\n\n  // State for default icon URL\n  const urltoIcon = `${UserHub?.RepoURL}/raw/${UserHub?.RepoBranch}/charts/${paramData.chart}/icons/${paramData.experiment}.png`;\n\n  const { t } = useTranslation();\n\n  return (\n    <Scaffold>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className={classes.rootContainer}>\n          <div className={classes.mainDiv}>\n            <div className={classes.headerDiv}>\n              {/* Exp title + Description */}\n              <div className={classes.expMain}>\n                <ExperimentHeader\n                  title={experimentData?.Metadata.Name}\n                  description={\n                    experimentData?.Spec.CategoryDescription.split('.')[0]\n                  }\n                  urlToIcon={urltoIcon}\n                />\n              </div>\n            </div>\n          </div>\n          {/* Developer Guide Component */}\n          <div className={classes.developerDiv}>\n            <DeveloperGuide\n              expAvailable\n              header={t('myhub.experimentPage.congrats')}\n              description=\"\"\n            />\n          </div>\n          {/* Experiment Info */}\n          <div className={classes.detailDiv}>\n            <div className={classes.expInfo}>\n              <div className={classes.expInfoDiv}>\n                <ExperimentInfo\n                  description={experimentData?.Spec.CategoryDescription}\n                  videoURL={videoURL}\n                />\n                <div className={classes.installExp}>\n                  <hr className={classes.horizontalLine} />\n                  <div>\n                    <div className={classes.note}>PRE-REQUISITE:</div>\n                    <div className={classes.linkText}>\n                      <a\n                        href=\"https://docs.litmuschaos.io/docs/getstarted/\"\n                        target=\"_\"\n                      >\n                        Install Litmus Operator\n                      </a>\n                      : a tool for injecting Chaos Experiments\n                    </div>\n                  </div>\n                  <hr className={classes.horizontalLine} />\n                </div>\n              </div>\n              {/* Useful Links Section */}\n              <div className={classes.info}>\n                <UsefulLinks\n                  links={experimentData?.Spec.Links}\n                  maintainers={experimentData?.Spec.Maintainers}\n                  platforms={experimentData?.Spec.Platforms}\n                  maturity={experimentData?.Spec.Maturity}\n                />\n              </div>\n            </div>\n            {/* Install Chaos Section */}\n            <div className={classes.installLinks}>\n              <InstallChaos\n                title={t('myhub.experimentPage.installExp')}\n                description={t('myhub.experimentPage.installExpDesc')}\n                yamlLink={`${UserHub?.RepoURL}/raw/${UserHub?.RepoBranch}/charts/${paramData.chart}/${paramData.experiment}/experiment.yaml`}\n              />\n              <InstallChaos\n                title={t('myhub.experimentPage.installRBAC')}\n                description={t('myhub.experimentPage.installRBACDesc')}\n                yamlLink={`${UserHub?.RepoURL}/raw/${UserHub?.RepoBranch}/charts/${paramData.chart}/${paramData.experiment}/rbac.yaml`}\n              />\n              <InstallChaos\n                title={t('myhub.experimentPage.installEngine')}\n                description={t('myhub.experimentPage.installEngineDesc')}\n                yamlLink={`${UserHub?.RepoURL}/raw/${UserHub?.RepoBranch}/charts/${paramData.chart}/${paramData.experiment}/engine.yaml`}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </Scaffold>\n  );\n};\n\nexport default MyHub;\n"]},"metadata":{},"sourceType":"module"}