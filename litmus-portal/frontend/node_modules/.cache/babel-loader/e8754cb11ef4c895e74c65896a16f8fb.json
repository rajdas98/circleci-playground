{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar glPlot3d = require('gl-plot3d');\n\nvar createCamera = glPlot3d.createCamera;\nvar createPlot = glPlot3d.createScene;\n\nvar getContext = require('webgl-context');\n\nvar passiveSupported = require('has-passive-events');\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar Fx = require('../../components/fx');\n\nvar str2RGBAarray = require('../../lib/str2rgbarray');\n\nvar showNoWebGlMsg = require('../../lib/show_no_webgl_msg');\n\nvar project = require('./project');\n\nvar createAxesOptions = require('./layout/convert');\n\nvar createSpikeOptions = require('./layout/spikes');\n\nvar computeTickMarks = require('./layout/tick_marks');\n\nvar isMobile = require('is-mobile')({\n  tablet: true,\n  featureDetect: true\n});\n\nvar STATIC_CANVAS, STATIC_CONTEXT;\n\nfunction Scene(options, fullLayout) {\n  // create sub container for plot\n  var sceneContainer = document.createElement('div');\n  var plotContainer = options.container; // keep a ref to the graph div to fire hover+click events\n\n  this.graphDiv = options.graphDiv; // create SVG container for hover text\n\n  var svgContainer = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svgContainer.style.position = 'absolute';\n  svgContainer.style.top = svgContainer.style.left = '0px';\n  svgContainer.style.width = svgContainer.style.height = '100%';\n  svgContainer.style['z-index'] = 20;\n  svgContainer.style['pointer-events'] = 'none';\n  sceneContainer.appendChild(svgContainer);\n  this.svgContainer = svgContainer; // Tag the container with the sceneID\n\n  sceneContainer.id = options.id;\n  sceneContainer.style.position = 'absolute';\n  sceneContainer.style.top = sceneContainer.style.left = '0px';\n  sceneContainer.style.width = sceneContainer.style.height = '100%';\n  plotContainer.appendChild(sceneContainer);\n  this.fullLayout = fullLayout;\n  this.id = options.id || 'scene';\n  this.fullSceneLayout = fullLayout[this.id]; // Saved from last call to plot()\n\n  this.plotArgs = [[], {}, {}];\n  /*\n   * Move this to calc step? Why does it work here?\n   */\n\n  this.axesOptions = createAxesOptions(fullLayout, fullLayout[this.id]);\n  this.spikeOptions = createSpikeOptions(fullLayout[this.id]);\n  this.container = sceneContainer;\n  this.staticMode = !!options.staticPlot;\n  this.pixelRatio = this.pixelRatio || options.plotGlPixelRatio || 2; // Coordinate rescaling\n\n  this.dataScale = [1, 1, 1];\n  this.contourLevels = [[], [], []];\n  this.convertAnnotations = Registry.getComponentMethod('annotations3d', 'convert');\n  this.drawAnnotations = Registry.getComponentMethod('annotations3d', 'draw');\n  this.initializeGLPlot();\n}\n\nvar proto = Scene.prototype;\n\nproto.prepareOptions = function () {\n  var scene = this;\n  var opts = {\n    canvas: scene.canvas,\n    gl: scene.gl,\n    glOptions: {\n      preserveDrawingBuffer: isMobile,\n      premultipliedAlpha: true,\n      antialias: true\n    },\n    container: scene.container,\n    axes: scene.axesOptions,\n    spikes: scene.spikeOptions,\n    pickRadius: 10,\n    snapToData: true,\n    autoScale: true,\n    autoBounds: false,\n    cameraObject: scene.camera,\n    pixelRatio: scene.pixelRatio\n  }; // for static plots, we reuse the WebGL context\n  //  as WebKit doesn't collect them reliably\n\n  if (scene.staticMode) {\n    if (!STATIC_CONTEXT) {\n      STATIC_CANVAS = document.createElement('canvas');\n      STATIC_CONTEXT = getContext({\n        canvas: STATIC_CANVAS,\n        preserveDrawingBuffer: true,\n        premultipliedAlpha: true,\n        antialias: true\n      });\n\n      if (!STATIC_CONTEXT) {\n        throw new Error('error creating static canvas/context for image server');\n      }\n    }\n\n    opts.gl = STATIC_CONTEXT;\n    opts.canvas = STATIC_CANVAS;\n  }\n\n  return opts;\n};\n\nproto.tryCreatePlot = function () {\n  var scene = this;\n  var opts = scene.prepareOptions();\n  var success = true;\n\n  try {\n    scene.glplot = createPlot(opts);\n  } catch (e) {\n    if (scene.staticMode) {\n      success = false;\n    } else {\n      // try second time\n      try {\n        // invert preserveDrawingBuffer setup which could be resulted from is-mobile not detecting the right device\n        Lib.warn(['webgl setup failed possibly due to', isMobile ? 'disabling' : 'enabling', 'preserveDrawingBuffer config.', 'The device may not be supported by is-mobile module!', 'Inverting preserveDrawingBuffer option in second attempt to create webgl scene.'].join(' '));\n        isMobile = opts.glOptions.preserveDrawingBuffer = !opts.glOptions.preserveDrawingBuffer;\n        scene.glplot = createPlot(opts);\n      } catch (e) {\n        success = false;\n      }\n    }\n  }\n\n  return success;\n};\n\nproto.initializeGLCamera = function () {\n  var scene = this;\n  var cameraData = scene.fullSceneLayout.camera;\n  var isOrtho = cameraData.projection.type === 'orthographic';\n  scene.camera = createCamera(scene.container, {\n    center: [cameraData.center.x, cameraData.center.y, cameraData.center.z],\n    eye: [cameraData.eye.x, cameraData.eye.y, cameraData.eye.z],\n    up: [cameraData.up.x, cameraData.up.y, cameraData.up.z],\n    _ortho: isOrtho,\n    zoomMin: 0.01,\n    zoomMax: 100,\n    mode: 'orbit'\n  });\n};\n\nproto.initializeGLPlot = function () {\n  var scene = this;\n  scene.initializeGLCamera();\n  var success = scene.tryCreatePlot();\n  /*\n  * createPlot will throw when webgl is not enabled in the client.\n  * Lets return an instance of the module with all functions noop'd.\n  * The destroy method - which will remove the container from the DOM\n  * is overridden with a function that removes the container only.\n  */\n\n  if (!success) return showNoWebGlMsg(scene); // List of scene objects\n\n  scene.traces = {};\n  scene.make4thDimension();\n  var gd = scene.graphDiv;\n  var layout = gd.layout;\n\n  var makeUpdate = function makeUpdate() {\n    var update = {};\n\n    if (scene.isCameraChanged(layout)) {\n      // camera updates\n      update[scene.id + '.camera'] = scene.getCamera();\n    }\n\n    if (scene.isAspectChanged(layout)) {\n      // scene updates\n      update[scene.id + '.aspectratio'] = scene.glplot.getAspectratio();\n\n      if (layout[scene.id].aspectmode !== 'manual') {\n        scene.fullSceneLayout.aspectmode = layout[scene.id].aspectmode = update[scene.id + '.aspectmode'] = 'manual';\n      }\n    }\n\n    return update;\n  };\n\n  var relayoutCallback = function relayoutCallback(scene) {\n    if (scene.fullSceneLayout.dragmode === false) return;\n    var update = makeUpdate();\n    scene.saveLayout(layout);\n    scene.graphDiv.emit('plotly_relayout', update);\n  };\n\n  scene.glplot.canvas.addEventListener('mouseup', function () {\n    relayoutCallback(scene);\n  });\n  scene.glplot.canvas.addEventListener('wheel', function (e) {\n    if (gd._context._scrollZoom.gl3d) {\n      if (scene.camera._ortho) {\n        var s = e.deltaX > e.deltaY ? 1.1 : 1.0 / 1.1;\n        var o = scene.glplot.getAspectratio();\n        scene.glplot.setAspectratio({\n          x: s * o.x,\n          y: s * o.y,\n          z: s * o.z\n        });\n      }\n\n      relayoutCallback(scene);\n    }\n  }, passiveSupported ? {\n    passive: false\n  } : false);\n  scene.glplot.canvas.addEventListener('mousemove', function () {\n    if (scene.fullSceneLayout.dragmode === false) return;\n    if (scene.camera.mouseListener.buttons === 0) return;\n    var update = makeUpdate();\n    scene.graphDiv.emit('plotly_relayouting', update);\n  });\n\n  if (!scene.staticMode) {\n    scene.glplot.canvas.addEventListener('webglcontextlost', function (event) {\n      if (gd && gd.emit) {\n        gd.emit('plotly_webglcontextlost', {\n          event: event,\n          layer: scene.id\n        });\n      }\n    }, false);\n  }\n\n  scene.glplot.oncontextloss = function () {\n    scene.recoverContext();\n  };\n\n  scene.glplot.onrender = function () {\n    scene.render();\n  };\n\n  return true;\n};\n\nproto.render = function () {\n  var scene = this;\n  var gd = scene.graphDiv;\n  var trace; // update size of svg container\n\n  var svgContainer = scene.svgContainer;\n  var clientRect = scene.container.getBoundingClientRect();\n  var width = clientRect.width;\n  var height = clientRect.height;\n  svgContainer.setAttributeNS(null, 'viewBox', '0 0 ' + width + ' ' + height);\n  svgContainer.setAttributeNS(null, 'width', width);\n  svgContainer.setAttributeNS(null, 'height', height);\n  computeTickMarks(scene);\n  scene.glplot.axes.update(scene.axesOptions); // check if pick has changed\n\n  var keys = Object.keys(scene.traces);\n  var lastPicked = null;\n  var selection = scene.glplot.selection;\n\n  for (var i = 0; i < keys.length; ++i) {\n    trace = scene.traces[keys[i]];\n\n    if (trace.data.hoverinfo !== 'skip' && trace.handlePick(selection)) {\n      lastPicked = trace;\n    }\n\n    if (trace.setContourLevels) trace.setContourLevels();\n  }\n\n  function formatter(axisName, val) {\n    var axis = scene.fullSceneLayout[axisName];\n    return Axes.tickText(axis, axis.d2l(val), 'hover').text;\n  }\n\n  var oldEventData;\n\n  if (lastPicked !== null) {\n    var pdata = project(scene.glplot.cameraParams, selection.dataCoordinate);\n    trace = lastPicked.data;\n    var traceNow = gd._fullData[trace.index];\n    var ptNumber = selection.index;\n    var labels = {\n      xLabel: formatter('xaxis', selection.traceCoordinate[0]),\n      yLabel: formatter('yaxis', selection.traceCoordinate[1]),\n      zLabel: formatter('zaxis', selection.traceCoordinate[2])\n    };\n    var hoverinfo = Fx.castHoverinfo(traceNow, scene.fullLayout, ptNumber);\n    var hoverinfoParts = (hoverinfo || '').split('+');\n    var isHoverinfoAll = hoverinfo && hoverinfo === 'all';\n\n    if (!traceNow.hovertemplate && !isHoverinfoAll) {\n      if (hoverinfoParts.indexOf('x') === -1) labels.xLabel = undefined;\n      if (hoverinfoParts.indexOf('y') === -1) labels.yLabel = undefined;\n      if (hoverinfoParts.indexOf('z') === -1) labels.zLabel = undefined;\n      if (hoverinfoParts.indexOf('text') === -1) selection.textLabel = undefined;\n      if (hoverinfoParts.indexOf('name') === -1) lastPicked.name = undefined;\n    }\n\n    var tx;\n    var vectorTx = [];\n\n    if (trace.type === 'cone' || trace.type === 'streamtube') {\n      labels.uLabel = formatter('xaxis', selection.traceCoordinate[3]);\n\n      if (isHoverinfoAll || hoverinfoParts.indexOf('u') !== -1) {\n        vectorTx.push('u: ' + labels.uLabel);\n      }\n\n      labels.vLabel = formatter('yaxis', selection.traceCoordinate[4]);\n\n      if (isHoverinfoAll || hoverinfoParts.indexOf('v') !== -1) {\n        vectorTx.push('v: ' + labels.vLabel);\n      }\n\n      labels.wLabel = formatter('zaxis', selection.traceCoordinate[5]);\n\n      if (isHoverinfoAll || hoverinfoParts.indexOf('w') !== -1) {\n        vectorTx.push('w: ' + labels.wLabel);\n      }\n\n      labels.normLabel = selection.traceCoordinate[6].toPrecision(3);\n\n      if (isHoverinfoAll || hoverinfoParts.indexOf('norm') !== -1) {\n        vectorTx.push('norm: ' + labels.normLabel);\n      }\n\n      if (trace.type === 'streamtube') {\n        labels.divergenceLabel = selection.traceCoordinate[7].toPrecision(3);\n\n        if (isHoverinfoAll || hoverinfoParts.indexOf('divergence') !== -1) {\n          vectorTx.push('divergence: ' + labels.divergenceLabel);\n        }\n      }\n\n      if (selection.textLabel) {\n        vectorTx.push(selection.textLabel);\n      }\n\n      tx = vectorTx.join('<br>');\n    } else if (trace.type === 'isosurface' || trace.type === 'volume') {\n      labels.valueLabel = Axes.tickText(scene._mockAxis, scene._mockAxis.d2l(selection.traceCoordinate[3]), 'hover').text;\n      vectorTx.push('value: ' + labels.valueLabel);\n\n      if (selection.textLabel) {\n        vectorTx.push(selection.textLabel);\n      }\n\n      tx = vectorTx.join('<br>');\n    } else {\n      tx = selection.textLabel;\n    }\n\n    var pointData = {\n      x: selection.traceCoordinate[0],\n      y: selection.traceCoordinate[1],\n      z: selection.traceCoordinate[2],\n      data: traceNow._input,\n      fullData: traceNow,\n      curveNumber: traceNow.index,\n      pointNumber: ptNumber\n    };\n    Fx.appendArrayPointValue(pointData, traceNow, ptNumber);\n\n    if (trace._module.eventData) {\n      pointData = traceNow._module.eventData(pointData, selection, traceNow, {}, ptNumber);\n    }\n\n    var eventData = {\n      points: [pointData]\n    };\n\n    if (scene.fullSceneLayout.hovermode) {\n      Fx.loneHover({\n        trace: traceNow,\n        x: (0.5 + 0.5 * pdata[0] / pdata[3]) * width,\n        y: (0.5 - 0.5 * pdata[1] / pdata[3]) * height,\n        xLabel: labels.xLabel,\n        yLabel: labels.yLabel,\n        zLabel: labels.zLabel,\n        text: tx,\n        name: lastPicked.name,\n        color: Fx.castHoverOption(traceNow, ptNumber, 'bgcolor') || lastPicked.color,\n        borderColor: Fx.castHoverOption(traceNow, ptNumber, 'bordercolor'),\n        fontFamily: Fx.castHoverOption(traceNow, ptNumber, 'font.family'),\n        fontSize: Fx.castHoverOption(traceNow, ptNumber, 'font.size'),\n        fontColor: Fx.castHoverOption(traceNow, ptNumber, 'font.color'),\n        nameLength: Fx.castHoverOption(traceNow, ptNumber, 'namelength'),\n        textAlign: Fx.castHoverOption(traceNow, ptNumber, 'align'),\n        hovertemplate: Lib.castOption(traceNow, ptNumber, 'hovertemplate'),\n        hovertemplateLabels: Lib.extendFlat({}, pointData, labels),\n        eventData: [pointData]\n      }, {\n        container: svgContainer,\n        gd: gd\n      });\n    }\n\n    if (selection.buttons && selection.distance < 5) {\n      gd.emit('plotly_click', eventData);\n    } else {\n      gd.emit('plotly_hover', eventData);\n    }\n\n    oldEventData = eventData;\n  } else {\n    Fx.loneUnhover(svgContainer);\n    gd.emit('plotly_unhover', oldEventData);\n  }\n\n  scene.drawAnnotations(scene);\n};\n\nproto.recoverContext = function () {\n  var scene = this;\n  scene.glplot.dispose();\n\n  var tryRecover = function tryRecover() {\n    if (scene.glplot.gl.isContextLost()) {\n      requestAnimationFrame(tryRecover);\n      return;\n    }\n\n    if (!scene.initializeGLPlot()) {\n      Lib.error('Catastrophic and unrecoverable WebGL error. Context lost.');\n      return;\n    }\n\n    scene.plot.apply(scene, scene.plotArgs);\n  };\n\n  requestAnimationFrame(tryRecover);\n};\n\nvar axisProperties = ['xaxis', 'yaxis', 'zaxis'];\n\nfunction computeTraceBounds(scene, trace, bounds) {\n  var fullSceneLayout = scene.fullSceneLayout;\n\n  for (var d = 0; d < 3; d++) {\n    var axisName = axisProperties[d];\n    var axLetter = axisName.charAt(0);\n    var ax = fullSceneLayout[axisName];\n    var coords = trace[axLetter];\n    var calendar = trace[axLetter + 'calendar'];\n    var len = trace['_' + axLetter + 'length'];\n\n    if (!Lib.isArrayOrTypedArray(coords)) {\n      bounds[0][d] = Math.min(bounds[0][d], 0);\n      bounds[1][d] = Math.max(bounds[1][d], len - 1);\n    } else {\n      var v;\n\n      for (var i = 0; i < (len || coords.length); i++) {\n        if (Lib.isArrayOrTypedArray(coords[i])) {\n          for (var j = 0; j < coords[i].length; ++j) {\n            v = ax.d2l(coords[i][j], 0, calendar);\n\n            if (!isNaN(v) && isFinite(v)) {\n              bounds[0][d] = Math.min(bounds[0][d], v);\n              bounds[1][d] = Math.max(bounds[1][d], v);\n            }\n          }\n        } else {\n          v = ax.d2l(coords[i], 0, calendar);\n\n          if (!isNaN(v) && isFinite(v)) {\n            bounds[0][d] = Math.min(bounds[0][d], v);\n            bounds[1][d] = Math.max(bounds[1][d], v);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction computeAnnotationBounds(scene, bounds) {\n  var fullSceneLayout = scene.fullSceneLayout;\n  var annotations = fullSceneLayout.annotations || [];\n\n  for (var d = 0; d < 3; d++) {\n    var axisName = axisProperties[d];\n    var axLetter = axisName.charAt(0);\n    var ax = fullSceneLayout[axisName];\n\n    for (var j = 0; j < annotations.length; j++) {\n      var ann = annotations[j];\n\n      if (ann.visible) {\n        var pos = ax.r2l(ann[axLetter]);\n\n        if (!isNaN(pos) && isFinite(pos)) {\n          bounds[0][d] = Math.min(bounds[0][d], pos);\n          bounds[1][d] = Math.max(bounds[1][d], pos);\n        }\n      }\n    }\n  }\n}\n\nproto.plot = function (sceneData, fullLayout, layout) {\n  var scene = this; // Save parameters\n\n  scene.plotArgs = [sceneData, fullLayout, layout];\n  if (scene.glplot.contextLost) return;\n  var data, trace;\n  var i, j, axis, axisType;\n  var fullSceneLayout = fullLayout[scene.id];\n  var sceneLayout = layout[scene.id]; // Update layout\n\n  scene.fullLayout = fullLayout;\n  scene.fullSceneLayout = fullSceneLayout;\n  scene.axesOptions.merge(fullLayout, fullSceneLayout);\n  scene.spikeOptions.merge(fullSceneLayout); // Update camera and camera mode\n\n  scene.setViewport(fullSceneLayout);\n  scene.updateFx(fullSceneLayout.dragmode, fullSceneLayout.hovermode);\n  scene.camera.enableWheel = scene.graphDiv._context._scrollZoom.gl3d; // Update scene background\n\n  scene.glplot.setClearColor(str2RGBAarray(fullSceneLayout.bgcolor)); // Update axes functions BEFORE updating traces\n\n  scene.setConvert(axis); // Convert scene data\n\n  if (!sceneData) sceneData = [];else if (!Array.isArray(sceneData)) sceneData = [sceneData]; // Compute trace bounding box\n\n  var dataBounds = [[Infinity, Infinity, Infinity], [-Infinity, -Infinity, -Infinity]];\n\n  for (i = 0; i < sceneData.length; ++i) {\n    data = sceneData[i];\n    if (data.visible !== true || data._length === 0) continue;\n    computeTraceBounds(this, data, dataBounds);\n  }\n\n  computeAnnotationBounds(this, dataBounds);\n  var dataScale = [1, 1, 1];\n\n  for (j = 0; j < 3; ++j) {\n    if (dataBounds[1][j] === dataBounds[0][j]) {\n      dataScale[j] = 1.0;\n    } else {\n      dataScale[j] = 1.0 / (dataBounds[1][j] - dataBounds[0][j]);\n    }\n  } // Save scale\n\n\n  scene.dataScale = dataScale; // after computeTraceBounds where ax._categories are filled in\n\n  scene.convertAnnotations(this); // Update traces\n\n  for (i = 0; i < sceneData.length; ++i) {\n    data = sceneData[i];\n\n    if (data.visible !== true || data._length === 0) {\n      continue;\n    }\n\n    trace = scene.traces[data.uid];\n\n    if (trace) {\n      if (trace.data.type === data.type) {\n        trace.update(data);\n      } else {\n        trace.dispose();\n        trace = data._module.plot(this, data);\n        scene.traces[data.uid] = trace;\n      }\n    } else {\n      trace = data._module.plot(this, data);\n      scene.traces[data.uid] = trace;\n    }\n\n    trace.name = data.name;\n  } // Remove empty traces\n\n\n  var traceIds = Object.keys(scene.traces);\n\n  traceIdLoop: for (i = 0; i < traceIds.length; ++i) {\n    for (j = 0; j < sceneData.length; ++j) {\n      if (sceneData[j].uid === traceIds[i] && sceneData[j].visible === true && sceneData[j]._length !== 0) {\n        continue traceIdLoop;\n      }\n    }\n\n    trace = scene.traces[traceIds[i]];\n    trace.dispose();\n    delete scene.traces[traceIds[i]];\n  } // order object per trace index\n\n\n  scene.glplot.objects.sort(function (a, b) {\n    return a._trace.data.index - b._trace.data.index;\n  }); // Update ranges (needs to be called *after* objects are added due to updates)\n\n  var sceneBounds = [[0, 0, 0], [0, 0, 0]];\n  var axisDataRange = [];\n  var axisTypeRatios = {};\n\n  for (i = 0; i < 3; ++i) {\n    axis = fullSceneLayout[axisProperties[i]];\n    axisType = axis.type;\n\n    if (axisType in axisTypeRatios) {\n      axisTypeRatios[axisType].acc *= dataScale[i];\n      axisTypeRatios[axisType].count += 1;\n    } else {\n      axisTypeRatios[axisType] = {\n        acc: dataScale[i],\n        count: 1\n      };\n    }\n\n    if (axis.autorange) {\n      sceneBounds[0][i] = Infinity;\n      sceneBounds[1][i] = -Infinity;\n      var objects = scene.glplot.objects;\n      var annotations = scene.fullSceneLayout.annotations || [];\n\n      var axLetter = axis._name.charAt(0);\n\n      for (j = 0; j < objects.length; j++) {\n        var obj = objects[j];\n        var objBounds = obj.bounds;\n        var pad = obj._trace.data._pad || 0;\n\n        if (obj.constructor.name === 'ErrorBars' && axis._lowerLogErrorBound) {\n          sceneBounds[0][i] = Math.min(sceneBounds[0][i], axis._lowerLogErrorBound);\n        } else {\n          sceneBounds[0][i] = Math.min(sceneBounds[0][i], objBounds[0][i] / dataScale[i] - pad);\n        }\n\n        sceneBounds[1][i] = Math.max(sceneBounds[1][i], objBounds[1][i] / dataScale[i] + pad);\n      }\n\n      for (j = 0; j < annotations.length; j++) {\n        var ann = annotations[j]; // N.B. not taking into consideration the arrowhead\n\n        if (ann.visible) {\n          var pos = axis.r2l(ann[axLetter]);\n          sceneBounds[0][i] = Math.min(sceneBounds[0][i], pos);\n          sceneBounds[1][i] = Math.max(sceneBounds[1][i], pos);\n        }\n      }\n\n      if ('rangemode' in axis && axis.rangemode === 'tozero') {\n        sceneBounds[0][i] = Math.min(sceneBounds[0][i], 0);\n        sceneBounds[1][i] = Math.max(sceneBounds[1][i], 0);\n      }\n\n      if (sceneBounds[0][i] > sceneBounds[1][i]) {\n        sceneBounds[0][i] = -1;\n        sceneBounds[1][i] = 1;\n      } else {\n        var d = sceneBounds[1][i] - sceneBounds[0][i];\n        sceneBounds[0][i] -= d / 32.0;\n        sceneBounds[1][i] += d / 32.0;\n      }\n\n      if (axis.autorange === 'reversed') {\n        // swap bounds:\n        var tmp = sceneBounds[0][i];\n        sceneBounds[0][i] = sceneBounds[1][i];\n        sceneBounds[1][i] = tmp;\n      }\n    } else {\n      var range = axis.range;\n      sceneBounds[0][i] = axis.r2l(range[0]);\n      sceneBounds[1][i] = axis.r2l(range[1]);\n    }\n\n    if (sceneBounds[0][i] === sceneBounds[1][i]) {\n      sceneBounds[0][i] -= 1;\n      sceneBounds[1][i] += 1;\n    }\n\n    axisDataRange[i] = sceneBounds[1][i] - sceneBounds[0][i]; // Update plot bounds\n\n    scene.glplot.setBounds(i, {\n      min: sceneBounds[0][i] * dataScale[i],\n      max: sceneBounds[1][i] * dataScale[i]\n    });\n  }\n  /*\n   * Dynamically set the aspect ratio depending on the users aspect settings\n   */\n\n\n  var aspectRatio;\n  var aspectmode = fullSceneLayout.aspectmode;\n\n  if (aspectmode === 'cube') {\n    aspectRatio = [1, 1, 1];\n  } else if (aspectmode === 'manual') {\n    var userRatio = fullSceneLayout.aspectratio;\n    aspectRatio = [userRatio.x, userRatio.y, userRatio.z];\n  } else if (aspectmode === 'auto' || aspectmode === 'data') {\n    var axesScaleRatio = [1, 1, 1]; // Compute axis scale per category\n\n    for (i = 0; i < 3; ++i) {\n      axis = fullSceneLayout[axisProperties[i]];\n      axisType = axis.type;\n      var axisRatio = axisTypeRatios[axisType];\n      axesScaleRatio[i] = Math.pow(axisRatio.acc, 1.0 / axisRatio.count) / dataScale[i];\n    }\n\n    if (aspectmode === 'data') {\n      aspectRatio = axesScaleRatio;\n    } else {\n      // i.e. 'auto' option\n      if (Math.max.apply(null, axesScaleRatio) / Math.min.apply(null, axesScaleRatio) <= 4) {\n        // USE DATA MODE WHEN AXIS RANGE DIMENSIONS ARE RELATIVELY EQUAL\n        aspectRatio = axesScaleRatio;\n      } else {\n        // USE EQUAL MODE WHEN AXIS RANGE DIMENSIONS ARE HIGHLY UNEQUAL\n        aspectRatio = [1, 1, 1];\n      }\n    }\n  } else {\n    throw new Error('scene.js aspectRatio was not one of the enumerated types');\n  }\n  /*\n   * Write aspect Ratio back to user data and fullLayout so that it is modifies as user\n   * manipulates the aspectmode settings and the fullLayout is up-to-date.\n   */\n\n\n  fullSceneLayout.aspectratio.x = sceneLayout.aspectratio.x = aspectRatio[0];\n  fullSceneLayout.aspectratio.y = sceneLayout.aspectratio.y = aspectRatio[1];\n  fullSceneLayout.aspectratio.z = sceneLayout.aspectratio.z = aspectRatio[2];\n  /*\n   * Finally assign the computed aspecratio to the glplot module. This will have an effect\n   * on the next render cycle.\n   */\n\n  scene.glplot.setAspectratio(fullSceneLayout.aspectratio); // save 'initial' aspectratio & aspectmode view settings for modebar buttons\n\n  if (!scene.viewInitial.aspectratio) {\n    scene.viewInitial.aspectratio = {\n      x: fullSceneLayout.aspectratio.x,\n      y: fullSceneLayout.aspectratio.y,\n      z: fullSceneLayout.aspectratio.z\n    };\n  }\n\n  if (!scene.viewInitial.aspectmode) {\n    scene.viewInitial.aspectmode = fullSceneLayout.aspectmode;\n  } // Update frame position for multi plots\n\n\n  var domain = fullSceneLayout.domain || null;\n  var size = fullLayout._size || null;\n\n  if (domain && size) {\n    var containerStyle = scene.container.style;\n    containerStyle.position = 'absolute';\n    containerStyle.left = size.l + domain.x[0] * size.w + 'px';\n    containerStyle.top = size.t + (1 - domain.y[1]) * size.h + 'px';\n    containerStyle.width = size.w * (domain.x[1] - domain.x[0]) + 'px';\n    containerStyle.height = size.h * (domain.y[1] - domain.y[0]) + 'px';\n  } // force redraw so that promise is returned when rendering is completed\n\n\n  scene.glplot.redraw();\n};\n\nproto.destroy = function () {\n  var scene = this;\n  if (!scene.glplot) return;\n  scene.camera.mouseListener.enabled = false;\n  scene.container.removeEventListener('wheel', scene.camera.wheelListener);\n  scene.camera = null;\n  scene.glplot.dispose();\n  scene.container.parentNode.removeChild(scene.container);\n  scene.glplot = null;\n}; // getCameraArrays :: plotly_coords -> gl-plot3d_coords\n// inverse of getLayoutCamera\n\n\nfunction getCameraArrays(camera) {\n  return [[camera.eye.x, camera.eye.y, camera.eye.z], [camera.center.x, camera.center.y, camera.center.z], [camera.up.x, camera.up.y, camera.up.z]];\n} // getLayoutCamera :: gl-plot3d_coords -> plotly_coords\n// inverse of getCameraArrays\n\n\nfunction getLayoutCamera(camera) {\n  return {\n    up: {\n      x: camera.up[0],\n      y: camera.up[1],\n      z: camera.up[2]\n    },\n    center: {\n      x: camera.center[0],\n      y: camera.center[1],\n      z: camera.center[2]\n    },\n    eye: {\n      x: camera.eye[0],\n      y: camera.eye[1],\n      z: camera.eye[2]\n    },\n    projection: {\n      type: camera._ortho === true ? 'orthographic' : 'perspective'\n    }\n  };\n} // get camera position in plotly coords from 'gl-plot3d' coords\n\n\nproto.getCamera = function () {\n  var scene = this;\n  scene.camera.view.recalcMatrix(scene.camera.view.lastT());\n  return getLayoutCamera(scene.camera);\n}; // set gl-plot3d camera position and scene aspects with a set of plotly coords\n\n\nproto.setViewport = function (sceneLayout) {\n  var scene = this;\n  var cameraData = sceneLayout.camera;\n  scene.camera.lookAt.apply(this, getCameraArrays(cameraData));\n  scene.glplot.setAspectratio(sceneLayout.aspectratio);\n  var newOrtho = cameraData.projection.type === 'orthographic';\n  var oldOrtho = scene.camera._ortho;\n\n  if (newOrtho !== oldOrtho) {\n    scene.glplot.redraw(); // TODO: figure out why we need to redraw here?\n\n    scene.glplot.clearRGBA();\n    scene.glplot.dispose();\n    scene.initializeGLPlot();\n  }\n};\n\nproto.isCameraChanged = function (layout) {\n  var scene = this;\n  var cameraData = scene.getCamera();\n  var cameraNestedProp = Lib.nestedProperty(layout, scene.id + '.camera');\n  var cameraDataLastSave = cameraNestedProp.get();\n\n  function same(x, y, i, j) {\n    var vectors = ['up', 'center', 'eye'];\n    var components = ['x', 'y', 'z'];\n    return y[vectors[i]] && x[vectors[i]][components[j]] === y[vectors[i]][components[j]];\n  }\n\n  var changed = false;\n\n  if (cameraDataLastSave === undefined) {\n    changed = true;\n  } else {\n    for (var i = 0; i < 3; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (!same(cameraData, cameraDataLastSave, i, j)) {\n          changed = true;\n          break;\n        }\n      }\n    }\n\n    if (!cameraDataLastSave.projection || cameraData.projection && cameraData.projection.type !== cameraDataLastSave.projection.type) {\n      changed = true;\n    }\n  }\n\n  return changed;\n};\n\nproto.isAspectChanged = function (layout) {\n  var scene = this;\n  var aspectData = scene.glplot.getAspectratio();\n  var aspectNestedProp = Lib.nestedProperty(layout, scene.id + '.aspectratio');\n  var aspectDataLastSave = aspectNestedProp.get();\n  return aspectDataLastSave === undefined || aspectDataLastSave.x !== aspectData.x || aspectDataLastSave.y !== aspectData.y || aspectDataLastSave.z !== aspectData.z;\n}; // save camera to user layout (i.e. gd.layout)\n\n\nproto.saveLayout = function (layout) {\n  var scene = this;\n  var fullLayout = scene.fullLayout;\n  var cameraData;\n  var cameraNestedProp;\n  var cameraDataLastSave;\n  var aspectData;\n  var aspectNestedProp;\n  var aspectDataLastSave;\n  var cameraChanged = scene.isCameraChanged(layout);\n  var aspectChanged = scene.isAspectChanged(layout);\n  var hasChanged = cameraChanged || aspectChanged;\n\n  if (hasChanged) {\n    var preGUI = {};\n\n    if (cameraChanged) {\n      cameraData = scene.getCamera();\n      cameraNestedProp = Lib.nestedProperty(layout, scene.id + '.camera');\n      cameraDataLastSave = cameraNestedProp.get();\n      preGUI[scene.id + '.camera'] = cameraDataLastSave;\n    }\n\n    if (aspectChanged) {\n      aspectData = scene.glplot.getAspectratio();\n      aspectNestedProp = Lib.nestedProperty(layout, scene.id + '.aspectratio');\n      aspectDataLastSave = aspectNestedProp.get();\n      preGUI[scene.id + '.aspectratio'] = aspectDataLastSave;\n    }\n\n    Registry.call('_storeDirectGUIEdit', layout, fullLayout._preGUI, preGUI);\n\n    if (cameraChanged) {\n      cameraNestedProp.set(cameraData);\n      var cameraFullNP = Lib.nestedProperty(fullLayout, scene.id + '.camera');\n      cameraFullNP.set(cameraData);\n    }\n\n    if (aspectChanged) {\n      aspectNestedProp.set(aspectData);\n      var aspectFullNP = Lib.nestedProperty(fullLayout, scene.id + '.aspectratio');\n      aspectFullNP.set(aspectData);\n      scene.glplot.redraw();\n    }\n  }\n\n  return hasChanged;\n};\n\nproto.updateFx = function (dragmode, hovermode) {\n  var scene = this;\n  var camera = scene.camera;\n\n  if (camera) {\n    // rotate and orbital are synonymous\n    if (dragmode === 'orbit') {\n      camera.mode = 'orbit';\n      camera.keyBindingMode = 'rotate';\n    } else if (dragmode === 'turntable') {\n      camera.up = [0, 0, 1];\n      camera.mode = 'turntable';\n      camera.keyBindingMode = 'rotate'; // The setter for camera.mode animates the transition to z-up,\n      // but only if we *don't* explicitly set z-up earlier via the\n      // relayout. So push `up` back to layout & fullLayout manually now.\n\n      var gd = scene.graphDiv;\n      var fullLayout = gd._fullLayout;\n      var fullCamera = scene.fullSceneLayout.camera;\n      var x = fullCamera.up.x;\n      var y = fullCamera.up.y;\n      var z = fullCamera.up.z; // only push `up` back to (full)layout if it's going to change\n\n      if (z / Math.sqrt(x * x + y * y + z * z) < 0.999) {\n        var attr = scene.id + '.camera.up';\n        var zUp = {\n          x: 0,\n          y: 0,\n          z: 1\n        };\n        var edits = {};\n        edits[attr] = zUp;\n        var layout = gd.layout;\n        Registry.call('_storeDirectGUIEdit', layout, fullLayout._preGUI, edits);\n        fullCamera.up = zUp;\n        Lib.nestedProperty(layout, attr).set(zUp);\n      }\n    } else {\n      // none rotation modes [pan or zoom]\n      camera.keyBindingMode = dragmode;\n    }\n  } // to put dragmode and hovermode on the same grounds from relayout\n\n\n  scene.fullSceneLayout.hovermode = hovermode;\n};\n\nfunction flipPixels(pixels, w, h) {\n  for (var i = 0, q = h - 1; i < q; ++i, --q) {\n    for (var j = 0; j < w; ++j) {\n      for (var k = 0; k < 4; ++k) {\n        var a = 4 * (w * i + j) + k;\n        var b = 4 * (w * q + j) + k;\n        var tmp = pixels[a];\n        pixels[a] = pixels[b];\n        pixels[b] = tmp;\n      }\n    }\n  }\n}\n\nfunction correctRGB(pixels, w, h) {\n  for (var i = 0; i < h; ++i) {\n    for (var j = 0; j < w; ++j) {\n      var k = 4 * (w * i + j);\n      var a = pixels[k + 3]; // alpha\n\n      if (a > 0) {\n        var q = 255 / a;\n\n        for (var l = 0; l < 3; ++l) {\n          // RGB\n          pixels[k + l] = Math.min(q * pixels[k + l], 255);\n        }\n      }\n    }\n  }\n}\n\nproto.toImage = function (format) {\n  var scene = this;\n  if (!format) format = 'png';\n  if (scene.staticMode) scene.container.appendChild(STATIC_CANVAS); // Force redraw\n\n  scene.glplot.redraw(); // Grab context and yank out pixels\n\n  var gl = scene.glplot.gl;\n  var w = gl.drawingBufferWidth;\n  var h = gl.drawingBufferHeight;\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  var pixels = new Uint8Array(w * h * 4);\n  gl.readPixels(0, 0, w, h, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n  flipPixels(pixels, w, h);\n  correctRGB(pixels, w, h);\n  var canvas = document.createElement('canvas');\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  var imageData = context.createImageData(w, h);\n  imageData.data.set(pixels);\n  context.putImageData(imageData, 0, 0);\n  var dataURL;\n\n  switch (format) {\n    case 'jpeg':\n      dataURL = canvas.toDataURL('image/jpeg');\n      break;\n\n    case 'webp':\n      dataURL = canvas.toDataURL('image/webp');\n      break;\n\n    default:\n      dataURL = canvas.toDataURL('image/png');\n  }\n\n  if (scene.staticMode) scene.container.removeChild(STATIC_CANVAS);\n  return dataURL;\n};\n\nproto.setConvert = function () {\n  var scene = this;\n\n  for (var i = 0; i < 3; i++) {\n    var ax = scene.fullSceneLayout[axisProperties[i]];\n    Axes.setConvert(ax, scene.fullLayout);\n    ax.setScale = Lib.noop;\n  }\n};\n\nproto.make4thDimension = function () {\n  var scene = this;\n  var gd = scene.graphDiv;\n  var fullLayout = gd._fullLayout; // mock axis for hover formatting\n\n  scene._mockAxis = {\n    type: 'linear',\n    showexponent: 'all',\n    exponentformat: 'B'\n  };\n  Axes.setConvert(scene._mockAxis, fullLayout);\n};\n\nmodule.exports = Scene;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/plotly.js/src/plots/gl3d/scene.js"],"names":["glPlot3d","require","createCamera","createPlot","createScene","getContext","passiveSupported","Registry","Lib","Axes","Fx","str2RGBAarray","showNoWebGlMsg","project","createAxesOptions","createSpikeOptions","computeTickMarks","isMobile","tablet","featureDetect","STATIC_CANVAS","STATIC_CONTEXT","Scene","options","fullLayout","sceneContainer","document","createElement","plotContainer","container","graphDiv","svgContainer","createElementNS","style","position","top","left","width","height","appendChild","id","fullSceneLayout","plotArgs","axesOptions","spikeOptions","staticMode","staticPlot","pixelRatio","plotGlPixelRatio","dataScale","contourLevels","convertAnnotations","getComponentMethod","drawAnnotations","initializeGLPlot","proto","prototype","prepareOptions","scene","opts","canvas","gl","glOptions","preserveDrawingBuffer","premultipliedAlpha","antialias","axes","spikes","pickRadius","snapToData","autoScale","autoBounds","cameraObject","camera","Error","tryCreatePlot","success","glplot","e","warn","join","initializeGLCamera","cameraData","isOrtho","projection","type","center","x","y","z","eye","up","_ortho","zoomMin","zoomMax","mode","traces","make4thDimension","gd","layout","makeUpdate","update","isCameraChanged","getCamera","isAspectChanged","getAspectratio","aspectmode","relayoutCallback","dragmode","saveLayout","emit","addEventListener","_context","_scrollZoom","gl3d","s","deltaX","deltaY","o","setAspectratio","passive","mouseListener","buttons","event","layer","oncontextloss","recoverContext","onrender","render","trace","clientRect","getBoundingClientRect","setAttributeNS","keys","Object","lastPicked","selection","i","length","data","hoverinfo","handlePick","setContourLevels","formatter","axisName","val","axis","tickText","d2l","text","oldEventData","pdata","cameraParams","dataCoordinate","traceNow","_fullData","index","ptNumber","labels","xLabel","traceCoordinate","yLabel","zLabel","castHoverinfo","hoverinfoParts","split","isHoverinfoAll","hovertemplate","indexOf","undefined","textLabel","name","tx","vectorTx","uLabel","push","vLabel","wLabel","normLabel","toPrecision","divergenceLabel","valueLabel","_mockAxis","pointData","_input","fullData","curveNumber","pointNumber","appendArrayPointValue","_module","eventData","points","hovermode","loneHover","color","castHoverOption","borderColor","fontFamily","fontSize","fontColor","nameLength","textAlign","castOption","hovertemplateLabels","extendFlat","distance","loneUnhover","dispose","tryRecover","isContextLost","requestAnimationFrame","error","plot","apply","axisProperties","computeTraceBounds","bounds","d","axLetter","charAt","ax","coords","calendar","len","isArrayOrTypedArray","Math","min","max","v","j","isNaN","isFinite","computeAnnotationBounds","annotations","ann","visible","pos","r2l","sceneData","contextLost","axisType","sceneLayout","merge","setViewport","updateFx","enableWheel","setClearColor","bgcolor","setConvert","Array","isArray","dataBounds","Infinity","_length","uid","traceIds","traceIdLoop","objects","sort","a","b","_trace","sceneBounds","axisDataRange","axisTypeRatios","acc","count","autorange","_name","obj","objBounds","pad","_pad","constructor","_lowerLogErrorBound","rangemode","tmp","range","setBounds","aspectRatio","userRatio","aspectratio","axesScaleRatio","axisRatio","pow","viewInitial","domain","size","_size","containerStyle","l","w","t","h","redraw","destroy","enabled","removeEventListener","wheelListener","parentNode","removeChild","getCameraArrays","getLayoutCamera","view","recalcMatrix","lastT","lookAt","newOrtho","oldOrtho","clearRGBA","cameraNestedProp","nestedProperty","cameraDataLastSave","get","same","vectors","components","changed","aspectData","aspectNestedProp","aspectDataLastSave","cameraChanged","aspectChanged","hasChanged","preGUI","call","_preGUI","set","cameraFullNP","aspectFullNP","keyBindingMode","_fullLayout","fullCamera","sqrt","attr","zUp","edits","flipPixels","pixels","q","k","correctRGB","toImage","format","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","context","imageData","createImageData","putImageData","dataURL","toDataURL","setScale","noop","showexponent","exponentformat","module","exports"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar glPlot3d = require('gl-plot3d');\nvar createCamera = glPlot3d.createCamera;\nvar createPlot = glPlot3d.createScene;\n\nvar getContext = require('webgl-context');\nvar passiveSupported = require('has-passive-events');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\n\nvar Axes = require('../../plots/cartesian/axes');\nvar Fx = require('../../components/fx');\n\nvar str2RGBAarray = require('../../lib/str2rgbarray');\nvar showNoWebGlMsg = require('../../lib/show_no_webgl_msg');\n\nvar project = require('./project');\nvar createAxesOptions = require('./layout/convert');\nvar createSpikeOptions = require('./layout/spikes');\nvar computeTickMarks = require('./layout/tick_marks');\n\nvar isMobile = require('is-mobile')({ tablet: true, featureDetect: true });\n\n\nvar STATIC_CANVAS, STATIC_CONTEXT;\n\nfunction Scene(options, fullLayout) {\n    // create sub container for plot\n    var sceneContainer = document.createElement('div');\n    var plotContainer = options.container;\n\n    // keep a ref to the graph div to fire hover+click events\n    this.graphDiv = options.graphDiv;\n\n    // create SVG container for hover text\n    var svgContainer = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'svg');\n    svgContainer.style.position = 'absolute';\n    svgContainer.style.top = svgContainer.style.left = '0px';\n    svgContainer.style.width = svgContainer.style.height = '100%';\n    svgContainer.style['z-index'] = 20;\n    svgContainer.style['pointer-events'] = 'none';\n    sceneContainer.appendChild(svgContainer);\n    this.svgContainer = svgContainer;\n\n    // Tag the container with the sceneID\n    sceneContainer.id = options.id;\n    sceneContainer.style.position = 'absolute';\n    sceneContainer.style.top = sceneContainer.style.left = '0px';\n    sceneContainer.style.width = sceneContainer.style.height = '100%';\n    plotContainer.appendChild(sceneContainer);\n\n    this.fullLayout = fullLayout;\n    this.id = options.id || 'scene';\n    this.fullSceneLayout = fullLayout[this.id];\n\n    // Saved from last call to plot()\n    this.plotArgs = [ [], {}, {} ];\n\n    /*\n     * Move this to calc step? Why does it work here?\n     */\n    this.axesOptions = createAxesOptions(fullLayout, fullLayout[this.id]);\n    this.spikeOptions = createSpikeOptions(fullLayout[this.id]);\n    this.container = sceneContainer;\n    this.staticMode = !!options.staticPlot;\n    this.pixelRatio = this.pixelRatio || options.plotGlPixelRatio || 2;\n\n    // Coordinate rescaling\n    this.dataScale = [1, 1, 1];\n\n    this.contourLevels = [ [], [], [] ];\n\n    this.convertAnnotations = Registry.getComponentMethod('annotations3d', 'convert');\n    this.drawAnnotations = Registry.getComponentMethod('annotations3d', 'draw');\n\n    this.initializeGLPlot();\n}\n\nvar proto = Scene.prototype;\n\nproto.prepareOptions = function() {\n    var scene = this;\n\n    var opts = {\n        canvas: scene.canvas,\n        gl: scene.gl,\n        glOptions: {\n            preserveDrawingBuffer: isMobile,\n            premultipliedAlpha: true,\n            antialias: true\n        },\n        container: scene.container,\n        axes: scene.axesOptions,\n        spikes: scene.spikeOptions,\n        pickRadius: 10,\n        snapToData: true,\n        autoScale: true,\n        autoBounds: false,\n        cameraObject: scene.camera,\n        pixelRatio: scene.pixelRatio\n    };\n\n    // for static plots, we reuse the WebGL context\n    //  as WebKit doesn't collect them reliably\n    if(scene.staticMode) {\n        if(!STATIC_CONTEXT) {\n            STATIC_CANVAS = document.createElement('canvas');\n            STATIC_CONTEXT = getContext({\n                canvas: STATIC_CANVAS,\n                preserveDrawingBuffer: true,\n                premultipliedAlpha: true,\n                antialias: true\n            });\n            if(!STATIC_CONTEXT) {\n                throw new Error('error creating static canvas/context for image server');\n            }\n        }\n\n        opts.gl = STATIC_CONTEXT;\n        opts.canvas = STATIC_CANVAS;\n    }\n\n    return opts;\n};\n\nproto.tryCreatePlot = function() {\n    var scene = this;\n\n    var opts = scene.prepareOptions();\n\n    var success = true;\n\n    try {\n        scene.glplot = createPlot(opts);\n    } catch(e) {\n        if(scene.staticMode) {\n            success = false;\n        } else { // try second time\n            try {\n                // invert preserveDrawingBuffer setup which could be resulted from is-mobile not detecting the right device\n                Lib.warn([\n                    'webgl setup failed possibly due to',\n                    isMobile ? 'disabling' : 'enabling',\n                    'preserveDrawingBuffer config.',\n                    'The device may not be supported by is-mobile module!',\n                    'Inverting preserveDrawingBuffer option in second attempt to create webgl scene.'\n                ].join(' '));\n                isMobile = opts.glOptions.preserveDrawingBuffer = !opts.glOptions.preserveDrawingBuffer;\n\n                scene.glplot = createPlot(opts);\n            } catch(e) {\n                success = false;\n            }\n        }\n    }\n\n    return success;\n};\n\nproto.initializeGLCamera = function() {\n    var scene = this;\n    var cameraData = scene.fullSceneLayout.camera;\n    var isOrtho = (cameraData.projection.type === 'orthographic');\n\n    scene.camera = createCamera(scene.container, {\n        center: [cameraData.center.x, cameraData.center.y, cameraData.center.z],\n        eye: [cameraData.eye.x, cameraData.eye.y, cameraData.eye.z],\n        up: [cameraData.up.x, cameraData.up.y, cameraData.up.z],\n        _ortho: isOrtho,\n        zoomMin: 0.01,\n        zoomMax: 100,\n        mode: 'orbit'\n    });\n};\n\nproto.initializeGLPlot = function() {\n    var scene = this;\n\n    scene.initializeGLCamera();\n\n    var success = scene.tryCreatePlot();\n    /*\n    * createPlot will throw when webgl is not enabled in the client.\n    * Lets return an instance of the module with all functions noop'd.\n    * The destroy method - which will remove the container from the DOM\n    * is overridden with a function that removes the container only.\n    */\n    if(!success) return showNoWebGlMsg(scene);\n\n    // List of scene objects\n    scene.traces = {};\n\n    scene.make4thDimension();\n\n    var gd = scene.graphDiv;\n    var layout = gd.layout;\n\n    var makeUpdate = function() {\n        var update = {};\n\n        if(scene.isCameraChanged(layout)) {\n            // camera updates\n            update[scene.id + '.camera'] = scene.getCamera();\n        }\n\n        if(scene.isAspectChanged(layout)) {\n            // scene updates\n            update[scene.id + '.aspectratio'] = scene.glplot.getAspectratio();\n\n            if(layout[scene.id].aspectmode !== 'manual') {\n                scene.fullSceneLayout.aspectmode =\n                layout[scene.id].aspectmode =\n                update[scene.id + '.aspectmode'] = 'manual';\n            }\n        }\n\n        return update;\n    };\n\n    var relayoutCallback = function(scene) {\n        if(scene.fullSceneLayout.dragmode === false) return;\n\n        var update = makeUpdate();\n        scene.saveLayout(layout);\n        scene.graphDiv.emit('plotly_relayout', update);\n    };\n\n    scene.glplot.canvas.addEventListener('mouseup', function() {\n        relayoutCallback(scene);\n    });\n\n    scene.glplot.canvas.addEventListener('wheel', function(e) {\n        if(gd._context._scrollZoom.gl3d) {\n            if(scene.camera._ortho) {\n                var s = (e.deltaX > e.deltaY) ? 1.1 : 1.0 / 1.1;\n                var o = scene.glplot.getAspectratio();\n                scene.glplot.setAspectratio({\n                    x: s * o.x,\n                    y: s * o.y,\n                    z: s * o.z\n                });\n            }\n\n            relayoutCallback(scene);\n        }\n    }, passiveSupported ? {passive: false} : false);\n\n    scene.glplot.canvas.addEventListener('mousemove', function() {\n        if(scene.fullSceneLayout.dragmode === false) return;\n        if(scene.camera.mouseListener.buttons === 0) return;\n\n        var update = makeUpdate();\n        scene.graphDiv.emit('plotly_relayouting', update);\n    });\n\n    if(!scene.staticMode) {\n        scene.glplot.canvas.addEventListener('webglcontextlost', function(event) {\n            if(gd && gd.emit) {\n                gd.emit('plotly_webglcontextlost', {\n                    event: event,\n                    layer: scene.id\n                });\n            }\n        }, false);\n    }\n\n    scene.glplot.oncontextloss = function() {\n        scene.recoverContext();\n    };\n\n    scene.glplot.onrender = function() {\n        scene.render();\n    };\n\n    return true;\n};\n\nproto.render = function() {\n    var scene = this;\n    var gd = scene.graphDiv;\n    var trace;\n\n    // update size of svg container\n    var svgContainer = scene.svgContainer;\n    var clientRect = scene.container.getBoundingClientRect();\n    var width = clientRect.width;\n    var height = clientRect.height;\n    svgContainer.setAttributeNS(null, 'viewBox', '0 0 ' + width + ' ' + height);\n    svgContainer.setAttributeNS(null, 'width', width);\n    svgContainer.setAttributeNS(null, 'height', height);\n\n    computeTickMarks(scene);\n    scene.glplot.axes.update(scene.axesOptions);\n\n    // check if pick has changed\n    var keys = Object.keys(scene.traces);\n    var lastPicked = null;\n    var selection = scene.glplot.selection;\n    for(var i = 0; i < keys.length; ++i) {\n        trace = scene.traces[keys[i]];\n        if(trace.data.hoverinfo !== 'skip' && trace.handlePick(selection)) {\n            lastPicked = trace;\n        }\n\n        if(trace.setContourLevels) trace.setContourLevels();\n    }\n\n    function formatter(axisName, val) {\n        var axis = scene.fullSceneLayout[axisName];\n\n        return Axes.tickText(axis, axis.d2l(val), 'hover').text;\n    }\n\n    var oldEventData;\n\n    if(lastPicked !== null) {\n        var pdata = project(scene.glplot.cameraParams, selection.dataCoordinate);\n        trace = lastPicked.data;\n        var traceNow = gd._fullData[trace.index];\n        var ptNumber = selection.index;\n\n        var labels = {\n            xLabel: formatter('xaxis', selection.traceCoordinate[0]),\n            yLabel: formatter('yaxis', selection.traceCoordinate[1]),\n            zLabel: formatter('zaxis', selection.traceCoordinate[2])\n        };\n\n        var hoverinfo = Fx.castHoverinfo(traceNow, scene.fullLayout, ptNumber);\n        var hoverinfoParts = (hoverinfo || '').split('+');\n        var isHoverinfoAll = hoverinfo && hoverinfo === 'all';\n\n        if(!traceNow.hovertemplate && !isHoverinfoAll) {\n            if(hoverinfoParts.indexOf('x') === -1) labels.xLabel = undefined;\n            if(hoverinfoParts.indexOf('y') === -1) labels.yLabel = undefined;\n            if(hoverinfoParts.indexOf('z') === -1) labels.zLabel = undefined;\n            if(hoverinfoParts.indexOf('text') === -1) selection.textLabel = undefined;\n            if(hoverinfoParts.indexOf('name') === -1) lastPicked.name = undefined;\n        }\n\n        var tx;\n        var vectorTx = [];\n\n        if(trace.type === 'cone' || trace.type === 'streamtube') {\n            labels.uLabel = formatter('xaxis', selection.traceCoordinate[3]);\n            if(isHoverinfoAll || hoverinfoParts.indexOf('u') !== -1) {\n                vectorTx.push('u: ' + labels.uLabel);\n            }\n\n            labels.vLabel = formatter('yaxis', selection.traceCoordinate[4]);\n            if(isHoverinfoAll || hoverinfoParts.indexOf('v') !== -1) {\n                vectorTx.push('v: ' + labels.vLabel);\n            }\n\n            labels.wLabel = formatter('zaxis', selection.traceCoordinate[5]);\n            if(isHoverinfoAll || hoverinfoParts.indexOf('w') !== -1) {\n                vectorTx.push('w: ' + labels.wLabel);\n            }\n\n            labels.normLabel = selection.traceCoordinate[6].toPrecision(3);\n            if(isHoverinfoAll || hoverinfoParts.indexOf('norm') !== -1) {\n                vectorTx.push('norm: ' + labels.normLabel);\n            }\n            if(trace.type === 'streamtube') {\n                labels.divergenceLabel = selection.traceCoordinate[7].toPrecision(3);\n                if(isHoverinfoAll || hoverinfoParts.indexOf('divergence') !== -1) {\n                    vectorTx.push('divergence: ' + labels.divergenceLabel);\n                }\n            }\n            if(selection.textLabel) {\n                vectorTx.push(selection.textLabel);\n            }\n            tx = vectorTx.join('<br>');\n        } else if(trace.type === 'isosurface' || trace.type === 'volume') {\n            labels.valueLabel = Axes.tickText(scene._mockAxis, scene._mockAxis.d2l(selection.traceCoordinate[3]), 'hover').text;\n            vectorTx.push('value: ' + labels.valueLabel);\n            if(selection.textLabel) {\n                vectorTx.push(selection.textLabel);\n            }\n            tx = vectorTx.join('<br>');\n        } else {\n            tx = selection.textLabel;\n        }\n\n        var pointData = {\n            x: selection.traceCoordinate[0],\n            y: selection.traceCoordinate[1],\n            z: selection.traceCoordinate[2],\n            data: traceNow._input,\n            fullData: traceNow,\n            curveNumber: traceNow.index,\n            pointNumber: ptNumber\n        };\n\n        Fx.appendArrayPointValue(pointData, traceNow, ptNumber);\n\n        if(trace._module.eventData) {\n            pointData = traceNow._module.eventData(pointData, selection, traceNow, {}, ptNumber);\n        }\n\n        var eventData = {points: [pointData]};\n\n        if(scene.fullSceneLayout.hovermode) {\n            Fx.loneHover({\n                trace: traceNow,\n                x: (0.5 + 0.5 * pdata[0] / pdata[3]) * width,\n                y: (0.5 - 0.5 * pdata[1] / pdata[3]) * height,\n                xLabel: labels.xLabel,\n                yLabel: labels.yLabel,\n                zLabel: labels.zLabel,\n                text: tx,\n                name: lastPicked.name,\n                color: Fx.castHoverOption(traceNow, ptNumber, 'bgcolor') || lastPicked.color,\n                borderColor: Fx.castHoverOption(traceNow, ptNumber, 'bordercolor'),\n                fontFamily: Fx.castHoverOption(traceNow, ptNumber, 'font.family'),\n                fontSize: Fx.castHoverOption(traceNow, ptNumber, 'font.size'),\n                fontColor: Fx.castHoverOption(traceNow, ptNumber, 'font.color'),\n                nameLength: Fx.castHoverOption(traceNow, ptNumber, 'namelength'),\n                textAlign: Fx.castHoverOption(traceNow, ptNumber, 'align'),\n                hovertemplate: Lib.castOption(traceNow, ptNumber, 'hovertemplate'),\n                hovertemplateLabels: Lib.extendFlat({}, pointData, labels),\n                eventData: [pointData]\n            }, {\n                container: svgContainer,\n                gd: gd\n            });\n        }\n\n        if(selection.buttons && selection.distance < 5) {\n            gd.emit('plotly_click', eventData);\n        } else {\n            gd.emit('plotly_hover', eventData);\n        }\n\n        oldEventData = eventData;\n    } else {\n        Fx.loneUnhover(svgContainer);\n        gd.emit('plotly_unhover', oldEventData);\n    }\n\n    scene.drawAnnotations(scene);\n};\n\nproto.recoverContext = function() {\n    var scene = this;\n\n    scene.glplot.dispose();\n\n    var tryRecover = function() {\n        if(scene.glplot.gl.isContextLost()) {\n            requestAnimationFrame(tryRecover);\n            return;\n        }\n        if(!scene.initializeGLPlot()) {\n            Lib.error('Catastrophic and unrecoverable WebGL error. Context lost.');\n            return;\n        }\n        scene.plot.apply(scene, scene.plotArgs);\n    };\n\n    requestAnimationFrame(tryRecover);\n};\n\nvar axisProperties = [ 'xaxis', 'yaxis', 'zaxis' ];\n\nfunction computeTraceBounds(scene, trace, bounds) {\n    var fullSceneLayout = scene.fullSceneLayout;\n\n    for(var d = 0; d < 3; d++) {\n        var axisName = axisProperties[d];\n        var axLetter = axisName.charAt(0);\n        var ax = fullSceneLayout[axisName];\n        var coords = trace[axLetter];\n        var calendar = trace[axLetter + 'calendar'];\n        var len = trace['_' + axLetter + 'length'];\n\n        if(!Lib.isArrayOrTypedArray(coords)) {\n            bounds[0][d] = Math.min(bounds[0][d], 0);\n            bounds[1][d] = Math.max(bounds[1][d], len - 1);\n        } else {\n            var v;\n\n            for(var i = 0; i < (len || coords.length); i++) {\n                if(Lib.isArrayOrTypedArray(coords[i])) {\n                    for(var j = 0; j < coords[i].length; ++j) {\n                        v = ax.d2l(coords[i][j], 0, calendar);\n                        if(!isNaN(v) && isFinite(v)) {\n                            bounds[0][d] = Math.min(bounds[0][d], v);\n                            bounds[1][d] = Math.max(bounds[1][d], v);\n                        }\n                    }\n                } else {\n                    v = ax.d2l(coords[i], 0, calendar);\n                    if(!isNaN(v) && isFinite(v)) {\n                        bounds[0][d] = Math.min(bounds[0][d], v);\n                        bounds[1][d] = Math.max(bounds[1][d], v);\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction computeAnnotationBounds(scene, bounds) {\n    var fullSceneLayout = scene.fullSceneLayout;\n    var annotations = fullSceneLayout.annotations || [];\n\n    for(var d = 0; d < 3; d++) {\n        var axisName = axisProperties[d];\n        var axLetter = axisName.charAt(0);\n        var ax = fullSceneLayout[axisName];\n\n        for(var j = 0; j < annotations.length; j++) {\n            var ann = annotations[j];\n\n            if(ann.visible) {\n                var pos = ax.r2l(ann[axLetter]);\n                if(!isNaN(pos) && isFinite(pos)) {\n                    bounds[0][d] = Math.min(bounds[0][d], pos);\n                    bounds[1][d] = Math.max(bounds[1][d], pos);\n                }\n            }\n        }\n    }\n}\n\nproto.plot = function(sceneData, fullLayout, layout) {\n    var scene = this;\n\n    // Save parameters\n    scene.plotArgs = [sceneData, fullLayout, layout];\n\n    if(scene.glplot.contextLost) return;\n\n    var data, trace;\n    var i, j, axis, axisType;\n    var fullSceneLayout = fullLayout[scene.id];\n    var sceneLayout = layout[scene.id];\n\n    // Update layout\n    scene.fullLayout = fullLayout;\n    scene.fullSceneLayout = fullSceneLayout;\n\n    scene.axesOptions.merge(fullLayout, fullSceneLayout);\n    scene.spikeOptions.merge(fullSceneLayout);\n\n    // Update camera and camera mode\n    scene.setViewport(fullSceneLayout);\n    scene.updateFx(fullSceneLayout.dragmode, fullSceneLayout.hovermode);\n    scene.camera.enableWheel = scene.graphDiv._context._scrollZoom.gl3d;\n\n    // Update scene background\n    scene.glplot.setClearColor(str2RGBAarray(fullSceneLayout.bgcolor));\n\n    // Update axes functions BEFORE updating traces\n    scene.setConvert(axis);\n\n    // Convert scene data\n    if(!sceneData) sceneData = [];\n    else if(!Array.isArray(sceneData)) sceneData = [sceneData];\n\n    // Compute trace bounding box\n    var dataBounds = [\n        [Infinity, Infinity, Infinity],\n        [-Infinity, -Infinity, -Infinity]\n    ];\n\n    for(i = 0; i < sceneData.length; ++i) {\n        data = sceneData[i];\n        if(data.visible !== true || data._length === 0) continue;\n\n        computeTraceBounds(this, data, dataBounds);\n    }\n    computeAnnotationBounds(this, dataBounds);\n\n    var dataScale = [1, 1, 1];\n    for(j = 0; j < 3; ++j) {\n        if(dataBounds[1][j] === dataBounds[0][j]) {\n            dataScale[j] = 1.0;\n        } else {\n            dataScale[j] = 1.0 / (dataBounds[1][j] - dataBounds[0][j]);\n        }\n    }\n\n    // Save scale\n    scene.dataScale = dataScale;\n\n    // after computeTraceBounds where ax._categories are filled in\n    scene.convertAnnotations(this);\n\n    // Update traces\n    for(i = 0; i < sceneData.length; ++i) {\n        data = sceneData[i];\n        if(data.visible !== true || data._length === 0) {\n            continue;\n        }\n        trace = scene.traces[data.uid];\n        if(trace) {\n            if(trace.data.type === data.type) {\n                trace.update(data);\n            } else {\n                trace.dispose();\n                trace = data._module.plot(this, data);\n                scene.traces[data.uid] = trace;\n            }\n        } else {\n            trace = data._module.plot(this, data);\n            scene.traces[data.uid] = trace;\n        }\n        trace.name = data.name;\n    }\n\n    // Remove empty traces\n    var traceIds = Object.keys(scene.traces);\n\n    traceIdLoop:\n    for(i = 0; i < traceIds.length; ++i) {\n        for(j = 0; j < sceneData.length; ++j) {\n            if(sceneData[j].uid === traceIds[i] &&\n                (sceneData[j].visible === true && sceneData[j]._length !== 0)) {\n                continue traceIdLoop;\n            }\n        }\n        trace = scene.traces[traceIds[i]];\n        trace.dispose();\n        delete scene.traces[traceIds[i]];\n    }\n\n    // order object per trace index\n    scene.glplot.objects.sort(function(a, b) {\n        return a._trace.data.index - b._trace.data.index;\n    });\n\n    // Update ranges (needs to be called *after* objects are added due to updates)\n    var sceneBounds = [[0, 0, 0], [0, 0, 0]];\n    var axisDataRange = [];\n    var axisTypeRatios = {};\n\n    for(i = 0; i < 3; ++i) {\n        axis = fullSceneLayout[axisProperties[i]];\n        axisType = axis.type;\n\n        if(axisType in axisTypeRatios) {\n            axisTypeRatios[axisType].acc *= dataScale[i];\n            axisTypeRatios[axisType].count += 1;\n        } else {\n            axisTypeRatios[axisType] = {\n                acc: dataScale[i],\n                count: 1\n            };\n        }\n\n        if(axis.autorange) {\n            sceneBounds[0][i] = Infinity;\n            sceneBounds[1][i] = -Infinity;\n\n            var objects = scene.glplot.objects;\n            var annotations = scene.fullSceneLayout.annotations || [];\n            var axLetter = axis._name.charAt(0);\n\n            for(j = 0; j < objects.length; j++) {\n                var obj = objects[j];\n                var objBounds = obj.bounds;\n                var pad = obj._trace.data._pad || 0;\n\n                if(obj.constructor.name === 'ErrorBars' && axis._lowerLogErrorBound) {\n                    sceneBounds[0][i] = Math.min(sceneBounds[0][i], axis._lowerLogErrorBound);\n                } else {\n                    sceneBounds[0][i] = Math.min(sceneBounds[0][i], objBounds[0][i] / dataScale[i] - pad);\n                }\n                sceneBounds[1][i] = Math.max(sceneBounds[1][i], objBounds[1][i] / dataScale[i] + pad);\n            }\n\n            for(j = 0; j < annotations.length; j++) {\n                var ann = annotations[j];\n\n                // N.B. not taking into consideration the arrowhead\n                if(ann.visible) {\n                    var pos = axis.r2l(ann[axLetter]);\n                    sceneBounds[0][i] = Math.min(sceneBounds[0][i], pos);\n                    sceneBounds[1][i] = Math.max(sceneBounds[1][i], pos);\n                }\n            }\n\n            if('rangemode' in axis && axis.rangemode === 'tozero') {\n                sceneBounds[0][i] = Math.min(sceneBounds[0][i], 0);\n                sceneBounds[1][i] = Math.max(sceneBounds[1][i], 0);\n            }\n            if(sceneBounds[0][i] > sceneBounds[1][i]) {\n                sceneBounds[0][i] = -1;\n                sceneBounds[1][i] = 1;\n            } else {\n                var d = sceneBounds[1][i] - sceneBounds[0][i];\n                sceneBounds[0][i] -= d / 32.0;\n                sceneBounds[1][i] += d / 32.0;\n            }\n\n            if(axis.autorange === 'reversed') {\n                // swap bounds:\n                var tmp = sceneBounds[0][i];\n                sceneBounds[0][i] = sceneBounds[1][i];\n                sceneBounds[1][i] = tmp;\n            }\n        } else {\n            var range = axis.range;\n            sceneBounds[0][i] = axis.r2l(range[0]);\n            sceneBounds[1][i] = axis.r2l(range[1]);\n        }\n        if(sceneBounds[0][i] === sceneBounds[1][i]) {\n            sceneBounds[0][i] -= 1;\n            sceneBounds[1][i] += 1;\n        }\n        axisDataRange[i] = sceneBounds[1][i] - sceneBounds[0][i];\n\n        // Update plot bounds\n        scene.glplot.setBounds(i, {\n            min: sceneBounds[0][i] * dataScale[i],\n            max: sceneBounds[1][i] * dataScale[i]\n        });\n    }\n\n    /*\n     * Dynamically set the aspect ratio depending on the users aspect settings\n     */\n    var aspectRatio;\n    var aspectmode = fullSceneLayout.aspectmode;\n    if(aspectmode === 'cube') {\n        aspectRatio = [1, 1, 1];\n    } else if(aspectmode === 'manual') {\n        var userRatio = fullSceneLayout.aspectratio;\n        aspectRatio = [userRatio.x, userRatio.y, userRatio.z];\n    } else if(aspectmode === 'auto' || aspectmode === 'data') {\n        var axesScaleRatio = [1, 1, 1];\n        // Compute axis scale per category\n        for(i = 0; i < 3; ++i) {\n            axis = fullSceneLayout[axisProperties[i]];\n            axisType = axis.type;\n            var axisRatio = axisTypeRatios[axisType];\n            axesScaleRatio[i] = Math.pow(axisRatio.acc, 1.0 / axisRatio.count) / dataScale[i];\n        }\n\n        if(aspectmode === 'data') {\n            aspectRatio = axesScaleRatio;\n        } else { // i.e. 'auto' option\n            if(\n                Math.max.apply(null, axesScaleRatio) /\n                Math.min.apply(null, axesScaleRatio) <= 4\n            ) {\n                // USE DATA MODE WHEN AXIS RANGE DIMENSIONS ARE RELATIVELY EQUAL\n                aspectRatio = axesScaleRatio;\n            } else {\n                // USE EQUAL MODE WHEN AXIS RANGE DIMENSIONS ARE HIGHLY UNEQUAL\n                aspectRatio = [1, 1, 1];\n            }\n        }\n    } else {\n        throw new Error('scene.js aspectRatio was not one of the enumerated types');\n    }\n\n    /*\n     * Write aspect Ratio back to user data and fullLayout so that it is modifies as user\n     * manipulates the aspectmode settings and the fullLayout is up-to-date.\n     */\n    fullSceneLayout.aspectratio.x = sceneLayout.aspectratio.x = aspectRatio[0];\n    fullSceneLayout.aspectratio.y = sceneLayout.aspectratio.y = aspectRatio[1];\n    fullSceneLayout.aspectratio.z = sceneLayout.aspectratio.z = aspectRatio[2];\n\n    /*\n     * Finally assign the computed aspecratio to the glplot module. This will have an effect\n     * on the next render cycle.\n     */\n    scene.glplot.setAspectratio(fullSceneLayout.aspectratio);\n\n    // save 'initial' aspectratio & aspectmode view settings for modebar buttons\n    if(!scene.viewInitial.aspectratio) {\n        scene.viewInitial.aspectratio = {\n            x: fullSceneLayout.aspectratio.x,\n            y: fullSceneLayout.aspectratio.y,\n            z: fullSceneLayout.aspectratio.z\n        };\n    }\n    if(!scene.viewInitial.aspectmode) {\n        scene.viewInitial.aspectmode = fullSceneLayout.aspectmode;\n    }\n\n    // Update frame position for multi plots\n    var domain = fullSceneLayout.domain || null;\n    var size = fullLayout._size || null;\n\n    if(domain && size) {\n        var containerStyle = scene.container.style;\n        containerStyle.position = 'absolute';\n        containerStyle.left = (size.l + domain.x[0] * size.w) + 'px';\n        containerStyle.top = (size.t + (1 - domain.y[1]) * size.h) + 'px';\n        containerStyle.width = (size.w * (domain.x[1] - domain.x[0])) + 'px';\n        containerStyle.height = (size.h * (domain.y[1] - domain.y[0])) + 'px';\n    }\n\n    // force redraw so that promise is returned when rendering is completed\n    scene.glplot.redraw();\n};\n\nproto.destroy = function() {\n    var scene = this;\n\n    if(!scene.glplot) return;\n    scene.camera.mouseListener.enabled = false;\n    scene.container.removeEventListener('wheel', scene.camera.wheelListener);\n    scene.camera = null;\n    scene.glplot.dispose();\n    scene.container.parentNode.removeChild(scene.container);\n    scene.glplot = null;\n};\n\n// getCameraArrays :: plotly_coords -> gl-plot3d_coords\n// inverse of getLayoutCamera\nfunction getCameraArrays(camera) {\n    return [\n        [camera.eye.x, camera.eye.y, camera.eye.z],\n        [camera.center.x, camera.center.y, camera.center.z],\n        [camera.up.x, camera.up.y, camera.up.z]\n    ];\n}\n\n// getLayoutCamera :: gl-plot3d_coords -> plotly_coords\n// inverse of getCameraArrays\nfunction getLayoutCamera(camera) {\n    return {\n        up: {x: camera.up[0], y: camera.up[1], z: camera.up[2]},\n        center: {x: camera.center[0], y: camera.center[1], z: camera.center[2]},\n        eye: {x: camera.eye[0], y: camera.eye[1], z: camera.eye[2]},\n        projection: {type: (camera._ortho === true) ? 'orthographic' : 'perspective'}\n    };\n}\n\n// get camera position in plotly coords from 'gl-plot3d' coords\nproto.getCamera = function() {\n    var scene = this;\n    scene.camera.view.recalcMatrix(scene.camera.view.lastT());\n    return getLayoutCamera(scene.camera);\n};\n\n// set gl-plot3d camera position and scene aspects with a set of plotly coords\nproto.setViewport = function(sceneLayout) {\n    var scene = this;\n    var cameraData = sceneLayout.camera;\n\n    scene.camera.lookAt.apply(this, getCameraArrays(cameraData));\n    scene.glplot.setAspectratio(sceneLayout.aspectratio);\n\n    var newOrtho = (cameraData.projection.type === 'orthographic');\n    var oldOrtho = scene.camera._ortho;\n\n    if(newOrtho !== oldOrtho) {\n        scene.glplot.redraw(); // TODO: figure out why we need to redraw here?\n        scene.glplot.clearRGBA();\n        scene.glplot.dispose();\n        scene.initializeGLPlot();\n    }\n};\n\nproto.isCameraChanged = function(layout) {\n    var scene = this;\n    var cameraData = scene.getCamera();\n    var cameraNestedProp = Lib.nestedProperty(layout, scene.id + '.camera');\n    var cameraDataLastSave = cameraNestedProp.get();\n\n    function same(x, y, i, j) {\n        var vectors = ['up', 'center', 'eye'];\n        var components = ['x', 'y', 'z'];\n        return y[vectors[i]] && (x[vectors[i]][components[j]] === y[vectors[i]][components[j]]);\n    }\n\n    var changed = false;\n    if(cameraDataLastSave === undefined) {\n        changed = true;\n    } else {\n        for(var i = 0; i < 3; i++) {\n            for(var j = 0; j < 3; j++) {\n                if(!same(cameraData, cameraDataLastSave, i, j)) {\n                    changed = true;\n                    break;\n                }\n            }\n        }\n\n        if(!cameraDataLastSave.projection || (\n            cameraData.projection &&\n            cameraData.projection.type !== cameraDataLastSave.projection.type)) {\n            changed = true;\n        }\n    }\n\n    return changed;\n};\n\nproto.isAspectChanged = function(layout) {\n    var scene = this;\n    var aspectData = scene.glplot.getAspectratio();\n    var aspectNestedProp = Lib.nestedProperty(layout, scene.id + '.aspectratio');\n    var aspectDataLastSave = aspectNestedProp.get();\n\n    return (\n        aspectDataLastSave === undefined || (\n        aspectDataLastSave.x !== aspectData.x ||\n        aspectDataLastSave.y !== aspectData.y ||\n        aspectDataLastSave.z !== aspectData.z\n    ));\n};\n\n// save camera to user layout (i.e. gd.layout)\nproto.saveLayout = function(layout) {\n    var scene = this;\n    var fullLayout = scene.fullLayout;\n\n    var cameraData;\n    var cameraNestedProp;\n    var cameraDataLastSave;\n\n    var aspectData;\n    var aspectNestedProp;\n    var aspectDataLastSave;\n\n    var cameraChanged = scene.isCameraChanged(layout);\n    var aspectChanged = scene.isAspectChanged(layout);\n\n    var hasChanged = cameraChanged || aspectChanged;\n    if(hasChanged) {\n        var preGUI = {};\n        if(cameraChanged) {\n            cameraData = scene.getCamera();\n            cameraNestedProp = Lib.nestedProperty(layout, scene.id + '.camera');\n            cameraDataLastSave = cameraNestedProp.get();\n\n            preGUI[scene.id + '.camera'] = cameraDataLastSave;\n        }\n        if(aspectChanged) {\n            aspectData = scene.glplot.getAspectratio();\n            aspectNestedProp = Lib.nestedProperty(layout, scene.id + '.aspectratio');\n            aspectDataLastSave = aspectNestedProp.get();\n\n            preGUI[scene.id + '.aspectratio'] = aspectDataLastSave;\n        }\n        Registry.call('_storeDirectGUIEdit', layout, fullLayout._preGUI, preGUI);\n\n        if(cameraChanged) {\n            cameraNestedProp.set(cameraData);\n\n            var cameraFullNP = Lib.nestedProperty(fullLayout, scene.id + '.camera');\n            cameraFullNP.set(cameraData);\n        }\n\n        if(aspectChanged) {\n            aspectNestedProp.set(aspectData);\n\n            var aspectFullNP = Lib.nestedProperty(fullLayout, scene.id + '.aspectratio');\n            aspectFullNP.set(aspectData);\n\n            scene.glplot.redraw();\n        }\n    }\n\n    return hasChanged;\n};\n\nproto.updateFx = function(dragmode, hovermode) {\n    var scene = this;\n    var camera = scene.camera;\n    if(camera) {\n        // rotate and orbital are synonymous\n        if(dragmode === 'orbit') {\n            camera.mode = 'orbit';\n            camera.keyBindingMode = 'rotate';\n        } else if(dragmode === 'turntable') {\n            camera.up = [0, 0, 1];\n            camera.mode = 'turntable';\n            camera.keyBindingMode = 'rotate';\n\n            // The setter for camera.mode animates the transition to z-up,\n            // but only if we *don't* explicitly set z-up earlier via the\n            // relayout. So push `up` back to layout & fullLayout manually now.\n            var gd = scene.graphDiv;\n            var fullLayout = gd._fullLayout;\n            var fullCamera = scene.fullSceneLayout.camera;\n            var x = fullCamera.up.x;\n            var y = fullCamera.up.y;\n            var z = fullCamera.up.z;\n            // only push `up` back to (full)layout if it's going to change\n            if(z / Math.sqrt(x * x + y * y + z * z) < 0.999) {\n                var attr = scene.id + '.camera.up';\n                var zUp = {x: 0, y: 0, z: 1};\n                var edits = {};\n                edits[attr] = zUp;\n                var layout = gd.layout;\n                Registry.call('_storeDirectGUIEdit', layout, fullLayout._preGUI, edits);\n                fullCamera.up = zUp;\n                Lib.nestedProperty(layout, attr).set(zUp);\n            }\n        } else {\n            // none rotation modes [pan or zoom]\n            camera.keyBindingMode = dragmode;\n        }\n    }\n\n    // to put dragmode and hovermode on the same grounds from relayout\n    scene.fullSceneLayout.hovermode = hovermode;\n};\n\nfunction flipPixels(pixels, w, h) {\n    for(var i = 0, q = h - 1; i < q; ++i, --q) {\n        for(var j = 0; j < w; ++j) {\n            for(var k = 0; k < 4; ++k) {\n                var a = 4 * (w * i + j) + k;\n                var b = 4 * (w * q + j) + k;\n                var tmp = pixels[a];\n                pixels[a] = pixels[b];\n                pixels[b] = tmp;\n            }\n        }\n    }\n}\n\nfunction correctRGB(pixels, w, h) {\n    for(var i = 0; i < h; ++i) {\n        for(var j = 0; j < w; ++j) {\n            var k = 4 * (w * i + j);\n\n            var a = pixels[k + 3]; // alpha\n            if(a > 0) {\n                var q = 255 / a;\n\n                for(var l = 0; l < 3; ++l) { // RGB\n                    pixels[k + l] = Math.min(q * pixels[k + l], 255);\n                }\n            }\n        }\n    }\n}\n\nproto.toImage = function(format) {\n    var scene = this;\n\n    if(!format) format = 'png';\n    if(scene.staticMode) scene.container.appendChild(STATIC_CANVAS);\n\n    // Force redraw\n    scene.glplot.redraw();\n\n    // Grab context and yank out pixels\n    var gl = scene.glplot.gl;\n    var w = gl.drawingBufferWidth;\n    var h = gl.drawingBufferHeight;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    var pixels = new Uint8Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    flipPixels(pixels, w, h);\n    correctRGB(pixels, w, h);\n\n    var canvas = document.createElement('canvas');\n    canvas.width = w;\n    canvas.height = h;\n    var context = canvas.getContext('2d');\n    var imageData = context.createImageData(w, h);\n    imageData.data.set(pixels);\n    context.putImageData(imageData, 0, 0);\n\n    var dataURL;\n\n    switch(format) {\n        case 'jpeg':\n            dataURL = canvas.toDataURL('image/jpeg');\n            break;\n        case 'webp':\n            dataURL = canvas.toDataURL('image/webp');\n            break;\n        default:\n            dataURL = canvas.toDataURL('image/png');\n    }\n\n    if(scene.staticMode) scene.container.removeChild(STATIC_CANVAS);\n\n    return dataURL;\n};\n\nproto.setConvert = function() {\n    var scene = this;\n    for(var i = 0; i < 3; i++) {\n        var ax = scene.fullSceneLayout[axisProperties[i]];\n        Axes.setConvert(ax, scene.fullLayout);\n        ax.setScale = Lib.noop;\n    }\n};\n\nproto.make4thDimension = function() {\n    var scene = this;\n    var gd = scene.graphDiv;\n    var fullLayout = gd._fullLayout;\n\n    // mock axis for hover formatting\n    scene._mockAxis = {\n        type: 'linear',\n        showexponent: 'all',\n        exponentformat: 'B'\n    };\n    Axes.setConvert(scene._mockAxis, fullLayout);\n};\n\nmodule.exports = Scene;\n"]},"metadata":{},"sourceType":"script"}