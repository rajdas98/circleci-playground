{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ToggleComponent/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\nvar ToggleComponent = function ToggleComponent() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // Default Props are false\n\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentState = _React$useState2[0],\n      setCurrentState = _React$useState2[1]; // Toggle Handlers\n\n\n  var passToggler = function passToggler() {\n    if (currentState === false) {\n      setCurrentState(true);\n    }\n  };\n\n  var failToggler = function failToggler() {\n    if (currentState === true) {\n      setCurrentState(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: passToggler,\n    \"aria-label\": \"left aligned\",\n    className: classes.toggleBtn,\n    style: {\n      backgroundColor: currentState ? '#109B67' : 'rgba(0, 0, 0, 0.1)',\n      color: currentState ? '#FFFFFF' : 'rgba(0, 0, 0, 0.4)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, currentState ? /*#__PURE__*/React.createElement(\"img\", {\n    src: \"icons/Pass.png\",\n    alt: \"Pass\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: \"icons/NotPass.png\",\n    alt: \"Not Pass\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typography,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, t('createWorkflow.toggleComponent.pass'))), /*#__PURE__*/React.createElement(Button, {\n    onClick: failToggler,\n    \"aria-label\": \"left aligned\",\n    className: classes.toggleBtn,\n    style: {\n      backgroundColor: currentState !== true ? '#CA2C2C' : 'rgba(0, 0, 0, 0.1)',\n      color: currentState !== true ? '#FFFFFF' : 'rgba(0, 0, 0, 0.4)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, currentState !== true ? /*#__PURE__*/React.createElement(\"img\", {\n    src: \"icons/Fail.png\",\n    alt: \"Fail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: \"icons/NotFail.png\",\n    alt: \"Not Fail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typography,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, t('createWorkflow.toggleComponent.fail'))));\n};\n\n_s(ToggleComponent, \"Ji+JUisNmGg8+RaD6j23yG0JBD4=\", false, function () {\n  return [useStyles, useTranslation];\n});\n\n_c = ToggleComponent;\nexport default ToggleComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleComponent\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/CreateWorkflow/ToggleComponent/index.tsx"],"names":["React","Typography","Button","useTranslation","useStyles","ToggleComponent","classes","t","useState","currentState","setCurrentState","passToggler","failToggler","root","toggleBtn","backgroundColor","color","typography"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\nconst ToggleComponent = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  // Default Props are false\n  const [currentState, setCurrentState] = React.useState<boolean>(true);\n\n  // Toggle Handlers\n  const passToggler = () => {\n    if (currentState === false) {\n      setCurrentState(true);\n    }\n  };\n\n  const failToggler = () => {\n    if (currentState === true) {\n      setCurrentState(false);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      {/* Pass Button */}\n      <Button\n        onClick={passToggler}\n        aria-label=\"left aligned\"\n        className={classes.toggleBtn}\n        style={{\n          backgroundColor: currentState ? '#109B67' : 'rgba(0, 0, 0, 0.1)',\n          color: currentState ? '#FFFFFF' : 'rgba(0, 0, 0, 0.4)',\n        }}\n      >\n        {currentState ? (\n          <img src=\"icons/Pass.png\" alt=\"Pass\" />\n        ) : (\n          <img src=\"icons/NotPass.png\" alt=\"Not Pass\" />\n        )}\n        <Typography className={classes.typography}>\n          {t('createWorkflow.toggleComponent.pass')}\n        </Typography>\n      </Button>\n\n      {/* Failed Button */}\n      <Button\n        onClick={failToggler}\n        aria-label=\"left aligned\"\n        className={classes.toggleBtn}\n        style={{\n          backgroundColor:\n            currentState !== true ? '#CA2C2C' : 'rgba(0, 0, 0, 0.1)',\n          color: currentState !== true ? '#FFFFFF' : 'rgba(0, 0, 0, 0.4)',\n        }}\n      >\n        {currentState !== true ? (\n          <img src=\"icons/Fail.png\" alt=\"Fail\" />\n        ) : (\n          <img src=\"icons/NotFail.png\" alt=\"Not Fail\" />\n        )}\n        <Typography className={classes.typography}>\n          {t('createWorkflow.toggleComponent.fail')}\n        </Typography>\n      </Button>\n    </div>\n  );\n};\n\nexport default ToggleComponent;\n"]},"metadata":{},"sourceType":"module"}