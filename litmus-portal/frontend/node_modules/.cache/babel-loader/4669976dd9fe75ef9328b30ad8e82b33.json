{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/WorkflowDetails/NodeLogs/index.tsx\";\n\nimport { useSubscription } from '@apollo/client';\nimport { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Unimodal from '../../../containers/layouts/Unimodal';\nimport { WORKFLOW_LOGS } from '../../../graphql';\nimport useStyles from './styles';\n\nvar NodeLogs = function NodeLogs(_ref) {\n  var logsOpen = _ref.logsOpen,\n      handleClose = _ref.handleClose,\n      cluster_id = _ref.cluster_id,\n      workflow_run_id = _ref.workflow_run_id,\n      pod_namespace = _ref.pod_namespace,\n      pod_name = _ref.pod_name,\n      pod_type = _ref.pod_type;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useSubscription = useSubscription(WORKFLOW_LOGS, {\n    variables: {\n      podDetails: {\n        cluster_id,\n        workflow_run_id,\n        pod_name,\n        pod_namespace,\n        pod_type\n      }\n    }\n  }),\n      data = _useSubscription.data;\n\n  return /*#__PURE__*/React.createElement(Unimodal, {\n    open: logsOpen,\n    handleClose: handleClose,\n    hasCloseBtn: true,\n    textAlign: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, data !== undefined ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, data.getPodLog.log) : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, t('workflowDetailsView.nodeLogs.fetching'))));\n};\n\nexport default NodeLogs;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/WorkflowDetails/NodeLogs/index.tsx"],"names":["useSubscription","Typography","React","useTranslation","Unimodal","WORKFLOW_LOGS","useStyles","NodeLogs","logsOpen","handleClose","cluster_id","workflow_run_id","pod_namespace","pod_name","pod_type","classes","t","variables","podDetails","data","root","undefined","getPodLog","log"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,gBAAhC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAMA,OAAOC,SAAP,MAAsB,UAAtB;;AAOA,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,OAQpC;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,WAMI,QANJA,WAMI;AAAA,MALJC,UAKI,QALJA,UAKI;AAAA,MAJJC,eAII,QAJJA,eAII;AAAA,MAHJC,aAGI,QAHJA,aAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,QACI,QADJA,QACI;AACJ,MAAMC,OAAO,GAAGT,SAAS,EAAzB;;AADI,wBAEUH,cAAc,EAFxB;AAAA,MAEIa,CAFJ,mBAEIA,CAFJ;;AAAA,yBAIahB,eAAe,CAAqBK,aAArB,EAAoC;AAClEY,IAAAA,SAAS,EAAE;AACTC,MAAAA,UAAU,EAAE;AACVR,QAAAA,UADU;AAEVC,QAAAA,eAFU;AAGVE,QAAAA,QAHU;AAIVD,QAAAA,aAJU;AAKVE,QAAAA;AALU;AADH;AADuD,GAApC,CAJ5B;AAAA,MAIIK,IAJJ,oBAIIA,IAJJ;;AAgBJ,sBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEX,QADR;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,SAAS,EAAC,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAEM,OAAO,CAACK,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,KAAKE,SAAT,gBACC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BF,IAAI,CAACG,SAAL,CAAeC,GAAzC,CADD,gBAGC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,CAAC,CAAC,uCAAD,CADJ,CAJJ,CANF,CADF;AAkBD,CA1CD;;AA4CA,eAAeT,QAAf","sourcesContent":["import { useSubscription } from '@apollo/client';\nimport { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Unimodal from '../../../containers/layouts/Unimodal';\nimport { WORKFLOW_LOGS } from '../../../graphql';\nimport {\n  PodLog,\n  PodLogRequest,\n  PodLogVars,\n} from '../../../models/graphql/podLog';\nimport useStyles from './styles';\n\ninterface NodeLogsProps extends PodLogRequest {\n  logsOpen: boolean;\n  handleClose: () => void;\n}\n\nconst NodeLogs: React.FC<NodeLogsProps> = ({\n  logsOpen,\n  handleClose,\n  cluster_id,\n  workflow_run_id,\n  pod_namespace,\n  pod_name,\n  pod_type,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const { data } = useSubscription<PodLog, PodLogVars>(WORKFLOW_LOGS, {\n    variables: {\n      podDetails: {\n        cluster_id,\n        workflow_run_id,\n        pod_name,\n        pod_namespace,\n        pod_type,\n      },\n    },\n  });\n\n  return (\n    <Unimodal\n      open={logsOpen}\n      handleClose={handleClose}\n      hasCloseBtn\n      textAlign=\"left\"\n    >\n      <div className={classes.root}>\n        {data !== undefined ? (\n          <Typography variant=\"h5\">{data.getPodLog.log}</Typography>\n        ) : (\n          <Typography variant=\"h5\">\n            {t('workflowDetailsView.nodeLogs.fetching')}\n          </Typography>\n        )}\n      </div>\n    </Unimodal>\n  );\n};\n\nexport default NodeLogs;\n"]},"metadata":{},"sourceType":"module"}