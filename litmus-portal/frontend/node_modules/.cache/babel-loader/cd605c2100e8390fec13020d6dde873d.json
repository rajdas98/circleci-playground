{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/MyHub/MyHubCharts/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Backdrop, Card, CardContent, Link, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport Scaffold from '../../../containers/layouts/Scaffold';\nimport useStyles from './styles';\nimport { GET_CHARTS_DATA, GET_HUB_STATUS } from '../../../graphql';\nimport Loader from '../../../components/Loader';\nimport Center from '../../../containers/layouts/Center';\nimport HeaderSection from './headerSection';\nimport { history } from '../../../redux/configureStore';\n\nvar MyHub = function MyHub() {\n  _s();\n\n  // User Data from Redux\n  var userData = useSelector(function (state) {\n    return state.userData;\n  }); // Get all MyHubs with status\n\n  var _useQuery = useQuery(GET_HUB_STATUS, {\n    variables: {\n      data: userData.selectedProjectID\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      hubDetails = _useQuery.data; // Get Parameters from URL\n\n\n  var paramData = useParams(); // Filter the selected MyHub\n\n  var UserHub = hubDetails === null || hubDetails === void 0 ? void 0 : hubDetails.getHubStatus.filter(function (myHub) {\n    return paramData.hubname === myHub.HubName;\n  })[0];\n  var classes = useStyles();\n  var experimentDefaultImagePath = \"\".concat(UserHub === null || UserHub === void 0 ? void 0 : UserHub.RepoURL, \"/raw/\").concat(UserHub === null || UserHub === void 0 ? void 0 : UserHub.RepoBranch, \"/charts/\");\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // Query to get charts of selected MyHub\n\n\n  var _useQuery2 = useQuery(GET_CHARTS_DATA, {\n    variables: {\n      HubName: paramData.hubname,\n      projectID: userData.selectedProjectID\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      data = _useQuery2.data,\n      loading = _useQuery2.loading; // State for searching charts\n\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var changeSearch = function changeSearch(event) {\n    setSearch(event.target.value);\n  };\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      totalExp = _useState4[0],\n      setTotalExperiment = _useState4[1];\n\n  var exp = [];\n  useEffect(function () {\n    if (data !== undefined) {\n      var chartList = data.getCharts;\n      chartList.forEach(function (expData) {\n        expData.Spec.Experiments.forEach(function (expName) {\n          exp.push({\n            ChaosName: expData.Metadata.Name,\n            ExperimentName: expName\n          });\n        });\n      });\n      setTotalExperiment(exp);\n    }\n  }, [data]);\n  return loading ? /*#__PURE__*/React.createElement(Backdrop, {\n    open: true,\n    className: classes.backdrop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Center, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, t('myhub.myhubChart.syncingRepo')))) : /*#__PURE__*/React.createElement(Scaffold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    gutterBottom: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, t('myhub.myhubChart.header')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, UserHub === null || UserHub === void 0 ? void 0 : UserHub.HubName, \"/\", UserHub === null || UserHub === void 0 ? void 0 : UserHub.RepoURL.split('/')[4], \"/\", UserHub === null || UserHub === void 0 ? void 0 : UserHub.RepoBranch))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderSection, {\n    searchValue: search,\n    changeSearch: changeSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chartsGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, totalExp && totalExp.length > 0 ? totalExp.filter(function (data) {\n    return data.ChaosName.toLowerCase().includes(search.trim()) || data.ExperimentName.toLowerCase().includes(search.trim());\n  }).map(function (expName) {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: expName.ExperimentName,\n      elevation: 3,\n      className: classes.cardDiv,\n      onClick: function onClick() {\n        return history.push(\"\".concat(UserHub === null || UserHub === void 0 ? void 0 : UserHub.HubName, \"/\").concat(expName.ChaosName, \"/\").concat(expName.ExperimentName));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.cardContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"\".concat(experimentDefaultImagePath).concat(expName.ChaosName, \"/icons/\").concat(expName.ExperimentName, \".png\"),\n      alt: expName.ExperimentName,\n      className: classes.cardImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      href: \"#\",\n      onClick: function onClick(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        setSearch(expName.ChaosName);\n      },\n      className: classes.categoryName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }, expName.ChaosName, \"/\"), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.expName,\n      variant: \"h6\",\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 23\n      }\n    }, expName.ExperimentName)));\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null))));\n};\n\n_s(MyHub, \"m+L+c258jPUixBy2+uZ7Q9pFrPs=\", false, function () {\n  return [useSelector, useQuery, useParams, useStyles, useTranslation, useQuery];\n});\n\n_c = MyHub;\nexport default MyHub;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyHub\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/MyHub/MyHubCharts/index.tsx"],"names":["Backdrop","Card","CardContent","Link","Typography","React","useEffect","useState","useQuery","useSelector","useTranslation","useParams","Scaffold","useStyles","GET_CHARTS_DATA","GET_HUB_STATUS","Loader","Center","HeaderSection","history","MyHub","userData","state","variables","data","selectedProjectID","fetchPolicy","hubDetails","paramData","UserHub","getHubStatus","filter","myHub","hubname","HubName","classes","experimentDefaultImagePath","RepoURL","RepoBranch","t","projectID","loading","search","setSearch","changeSearch","event","target","value","totalExp","setTotalExperiment","exp","undefined","chartList","getCharts","forEach","expData","Spec","Experiments","expName","push","ChaosName","Metadata","Name","ExperimentName","backdrop","header","split","mainDiv","chartsGroup","length","toLowerCase","includes","trim","map","cardDiv","cardContent","cardImage","e","preventDefault","stopPropagation","categoryName"],"mappings":";;;;;;AAAA,SACEA,QADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,IAJF,EAKEC,UALF,QAMO,mBANP;AAOA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AAGA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,+BAAxB;;AAWA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAClB;AACA,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,UAACa,KAAD;AAAA,WAAsBA,KAAK,CAACD,QAA5B;AAAA,GAAD,CAA5B,CAFkB,CAIlB;;AAJkB,kBAKWb,QAAQ,CAAYO,cAAZ,EAA4B;AAC/DQ,IAAAA,SAAS,EAAE;AAAEC,MAAAA,IAAI,EAAEH,QAAQ,CAACI;AAAjB,KADoD;AAE/DC,IAAAA,WAAW,EAAE;AAFkD,GAA5B,CALnB;AAAA,MAKJC,UALI,aAKVH,IALU,EAUlB;;;AACA,MAAMI,SAAoB,GAAGjB,SAAS,EAAtC,CAXkB,CAalB;;AACA,MAAMkB,OAAO,GAAGF,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEG,YAAZ,CAAyBC,MAAzB,CAAgC,UAACC,KAAD,EAAW;AACzD,WAAOJ,SAAS,CAACK,OAAV,KAAsBD,KAAK,CAACE,OAAnC;AACD,GAFe,EAEb,CAFa,CAAhB;AAIA,MAAMC,OAAO,GAAGtB,SAAS,EAAzB;AAEA,MAAMuB,0BAA0B,aAAMP,OAAN,aAAMA,OAAN,uBAAMA,OAAO,CAAEQ,OAAf,kBAA8BR,OAA9B,aAA8BA,OAA9B,uBAA8BA,OAAO,CAAES,UAAvC,aAAhC;;AApBkB,wBAqBJ5B,cAAc,EArBV;AAAA,MAqBV6B,CArBU,mBAqBVA,CArBU,EAuBlB;;;AAvBkB,mBAwBQ/B,QAAQ,CAASM,eAAT,EAA0B;AAC1DS,IAAAA,SAAS,EAAE;AACTW,MAAAA,OAAO,EAAEN,SAAS,CAACK,OADV;AAETO,MAAAA,SAAS,EAAEnB,QAAQ,CAACI;AAFX,KAD+C;AAK1DC,IAAAA,WAAW,EAAE;AAL6C,GAA1B,CAxBhB;AAAA,MAwBVF,IAxBU,cAwBVA,IAxBU;AAAA,MAwBJiB,OAxBI,cAwBJA,OAxBI,EAgClB;;;AAhCkB,kBAiCUlC,QAAQ,CAAC,EAAD,CAjClB;AAAA;AAAA,MAiCXmC,MAjCW;AAAA,MAiCHC,SAjCG;;AAkClB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CACnBC,KADmB,EAEhB;AACHF,IAAAA,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD,GAJD;;AAlCkB,mBAuCqBxC,QAAQ,CAAc,EAAd,CAvC7B;AAAA;AAAA,MAuCXyC,QAvCW;AAAA,MAuCDC,kBAvCC;;AAwClB,MAAMC,GAAgB,GAAG,EAAzB;AAEA5C,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIkB,IAAI,KAAK2B,SAAb,EAAwB;AACtB,UAAMC,SAAS,GAAG5B,IAAI,CAAC6B,SAAvB;AACAD,MAAAA,SAAS,CAACE,OAAV,CAAkB,UAACC,OAAD,EAAoB;AACpCA,QAAAA,OAAO,CAACC,IAAR,CAAaC,WAAb,CAAyBH,OAAzB,CAAiC,UAACI,OAAD,EAAa;AAC5CR,UAAAA,GAAG,CAACS,IAAJ,CAAS;AACPC,YAAAA,SAAS,EAAEL,OAAO,CAACM,QAAR,CAAiBC,IADrB;AAEPC,YAAAA,cAAc,EAAEL;AAFT,WAAT;AAID,SALD;AAMD,OAPD;AAQAT,MAAAA,kBAAkB,CAACC,GAAD,CAAlB;AACD;AACF,GAbQ,EAaN,CAAC1B,IAAD,CAbM,CAAT;AAeA,SAAOiB,OAAO,gBACZ,oBAAC,QAAD;AAAU,IAAA,IAAI,MAAd;AAAe,IAAA,SAAS,EAAEN,OAAO,CAAC6B,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,CAAC,CAAC,8BAAD,CADJ,CADF,CAFF,CADY,gBAUZ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAAC8B,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,YAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,CAAC,CAAC,yBAAD,CADJ,CADF,eAIE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,OADH,aACGA,OADH,uBACGA,OAAO,CAAEK,OADZ,OACsBL,OADtB,aACsBA,OADtB,uBACsBA,OAAO,CAAEQ,OAAT,CAAiB6B,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CADtB,OAEGrC,OAFH,aAEGA,OAFH,uBAEGA,OAAO,CAAES,UAFZ,CADF,CAJF,CADF,eAYE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACgC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,WAAW,EAAEzB,MAA5B;AAAoC,IAAA,YAAY,EAAEE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACiC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,QAAQ,IAAIA,QAAQ,CAACqB,MAAT,GAAkB,CAA9B,GACCrB,QAAQ,CACLjB,MADH,CAEI,UAACP,IAAD;AAAA,WACEA,IAAI,CAACoC,SAAL,CAAeU,WAAf,GAA6BC,QAA7B,CAAsC7B,MAAM,CAAC8B,IAAP,EAAtC,KACAhD,IAAI,CAACuC,cAAL,CAAoBO,WAApB,GAAkCC,QAAlC,CAA2C7B,MAAM,CAAC8B,IAAP,EAA3C,CAFF;AAAA,GAFJ,EAMGC,GANH,CAMO,UAACf,OAAD,EAAwB;AAC3B,wBACE,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACK,cADf;AAEE,MAAA,SAAS,EAAE,CAFb;AAGE,MAAA,SAAS,EAAE5B,OAAO,CAACuC,OAHrB;AAIE,MAAA,OAAO,EAAE;AAAA,eACPvD,OAAO,CAACwC,IAAR,WACK9B,OADL,aACKA,OADL,uBACKA,OAAO,CAAEK,OADd,cACyBwB,OAAO,CAACE,SADjC,cAC8CF,OAAO,CAACK,cADtD,EADO;AAAA,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAE5B,OAAO,CAACwC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,YAAKvC,0BAAL,SAAkCsB,OAAO,CAACE,SAA1C,oBAA6DF,OAAO,CAACK,cAArE,SADL;AAEE,MAAA,GAAG,EAAEL,OAAO,CAACK,cAFf;AAGE,MAAA,SAAS,EAAE5B,OAAO,CAACyC,SAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,IAAD;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,OAAO,EAAE,iBAACC,CAAD,EAAY;AACnBA,QAAAA,CAAC,CAACC,cAAF;AACAD,QAAAA,CAAC,CAACE,eAAF;AACApC,QAAAA,SAAS,CAACe,OAAO,CAACE,SAAT,CAAT;AACD,OANH;AAOE,MAAA,SAAS,EAAEzB,OAAO,CAAC6C,YAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASGtB,OAAO,CAACE,SATX,MANF,eAiBE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAEzB,OAAO,CAACuB,OADrB;AAEE,MAAA,OAAO,EAAC,IAFV;AAGE,MAAA,KAAK,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGA,OAAO,CAACK,cALX,CAjBF,CAVF,CADF;AAsCD,GA7CH,CADD,gBAgDC,yCAjDJ,CAFF,CAZF,CAVF;AA+ED,CAxID;;GAAM3C,K;UAEaX,W,EAGYD,Q,EAMAG,S,EAObE,S,EAGFH,c,EAGYF,Q;;;KAxBtBY,K;AA0IN,eAAeA,KAAf","sourcesContent":["import {\n  Backdrop,\n  Card,\n  CardContent,\n  Link,\n  Typography,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport Scaffold from '../../../containers/layouts/Scaffold';\nimport useStyles from './styles';\nimport { GET_CHARTS_DATA, GET_HUB_STATUS } from '../../../graphql';\nimport { RootState } from '../../../redux/reducers';\nimport { Chart, Charts, HubStatus } from '../../../models/redux/myhub';\nimport Loader from '../../../components/Loader';\nimport Center from '../../../containers/layouts/Center';\nimport HeaderSection from './headerSection';\nimport { history } from '../../../redux/configureStore';\n\ninterface ChartName {\n  ChaosName: string;\n  ExperimentName: string;\n}\n\ninterface URLParams {\n  hubname: string;\n}\n\nconst MyHub = () => {\n  // User Data from Redux\n  const userData = useSelector((state: RootState) => state.userData);\n\n  // Get all MyHubs with status\n  const { data: hubDetails } = useQuery<HubStatus>(GET_HUB_STATUS, {\n    variables: { data: userData.selectedProjectID },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  // Get Parameters from URL\n  const paramData: URLParams = useParams();\n\n  // Filter the selected MyHub\n  const UserHub = hubDetails?.getHubStatus.filter((myHub) => {\n    return paramData.hubname === myHub.HubName;\n  })[0];\n\n  const classes = useStyles();\n\n  const experimentDefaultImagePath = `${UserHub?.RepoURL}/raw/${UserHub?.RepoBranch}/charts/`;\n  const { t } = useTranslation();\n\n  // Query to get charts of selected MyHub\n  const { data, loading } = useQuery<Charts>(GET_CHARTS_DATA, {\n    variables: {\n      HubName: paramData.hubname,\n      projectID: userData.selectedProjectID,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  // State for searching charts\n  const [search, setSearch] = useState('');\n  const changeSearch = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setSearch(event.target.value as string);\n  };\n  const [totalExp, setTotalExperiment] = useState<ChartName[]>([]);\n  const exp: ChartName[] = [];\n\n  useEffect(() => {\n    if (data !== undefined) {\n      const chartList = data.getCharts;\n      chartList.forEach((expData: Chart) => {\n        expData.Spec.Experiments.forEach((expName) => {\n          exp.push({\n            ChaosName: expData.Metadata.Name,\n            ExperimentName: expName,\n          });\n        });\n      });\n      setTotalExperiment(exp);\n    }\n  }, [data]);\n\n  return loading ? (\n    <Backdrop open className={classes.backdrop}>\n      <Loader />\n      <Center>\n        <Typography variant=\"h4\" align=\"center\">\n          {t('myhub.myhubChart.syncingRepo')}\n        </Typography>\n      </Center>\n    </Backdrop>\n  ) : (\n    <Scaffold>\n      <div className={classes.header}>\n        <Typography variant=\"h3\" gutterBottom>\n          {t('myhub.myhubChart.header')}\n        </Typography>\n        <Typography variant=\"h4\">\n          <strong>\n            {UserHub?.HubName}/{UserHub?.RepoURL.split('/')[4]}/\n            {UserHub?.RepoBranch}\n          </strong>\n        </Typography>\n      </div>\n      <div className={classes.mainDiv}>\n        <HeaderSection searchValue={search} changeSearch={changeSearch} />\n        <div className={classes.chartsGroup}>\n          {totalExp && totalExp.length > 0 ? (\n            totalExp\n              .filter(\n                (data) =>\n                  data.ChaosName.toLowerCase().includes(search.trim()) ||\n                  data.ExperimentName.toLowerCase().includes(search.trim())\n              )\n              .map((expName: ChartName) => {\n                return (\n                  <Card\n                    key={expName.ExperimentName}\n                    elevation={3}\n                    className={classes.cardDiv}\n                    onClick={() =>\n                      history.push(\n                        `${UserHub?.HubName}/${expName.ChaosName}/${expName.ExperimentName}`\n                      )\n                    }\n                  >\n                    <CardContent className={classes.cardContent}>\n                      <img\n                        src={`${experimentDefaultImagePath}${expName.ChaosName}/icons/${expName.ExperimentName}.png`}\n                        alt={expName.ExperimentName}\n                        className={classes.cardImage}\n                      />\n                      <Link\n                        href=\"#\"\n                        onClick={(e: any) => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          setSearch(expName.ChaosName);\n                        }}\n                        className={classes.categoryName}\n                      >\n                        {expName.ChaosName}/\n                      </Link>\n                      <Typography\n                        className={classes.expName}\n                        variant=\"h6\"\n                        align=\"center\"\n                      >\n                        {expName.ExperimentName}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                );\n              })\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n    </Scaffold>\n  );\n};\n\nexport default MyHub;\n"]},"metadata":{},"sourceType":"module"}