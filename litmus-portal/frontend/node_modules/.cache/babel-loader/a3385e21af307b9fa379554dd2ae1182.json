{"ast":null,"code":"import _toConsumableArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/Home/ResilienceScoreComparisonPlot/index.tsx\";\n\n/* eslint-disable max-len */\nimport { FormControl, IconButton, InputLabel, MenuItem, Select, Tooltip } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport AssessmentOutlinedIcon from '@material-ui/icons/AssessmentOutlined';\nimport Plotly from 'plotly.js';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport useActions from '../../../redux/actions';\nimport * as TabActions from '../../../redux/actions/tabs';\nimport { history } from '../../../redux/configureStore';\nimport Score from './Score';\nimport useStyles from './style';\nvar Plot = createPlotlyComponent(Plotly);\n\nvar ResilienceScoreComparisonPlot = function ResilienceScoreComparisonPlot(_ref) {\n  var xData = _ref.xData,\n      yData = _ref.yData,\n      labels = _ref.labels;\n  var classes = useStyles();\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var tabs = useActions(TabActions);\n\n  var _React$useState = React.useState({\n    name: 'Daily'\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentGranularity = _React$useState2[0],\n      setCurrentGranularity = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      plotData = _React$useState4[0],\n      setPlotData = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    highScore: 0,\n    lowScore: 0,\n    highColor: '',\n    lowColor: '',\n    highName: '',\n    lowName: ''\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      edgeData = _React$useState6[0],\n      setEdgeData = _React$useState6[1];\n\n  var _React$useState7 = React.useState({}),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      plotLayout = _React$useState8[0],\n      setPlotLayout = _React$useState8[1];\n\n  var handleChangeInGranularity = function handleChangeInGranularity(event) {\n    var name = event.target.name;\n\n    if (name !== currentGranularity.name) {\n      setCurrentGranularity(_objectSpread(_objectSpread({}, currentGranularity), {}, {\n        [name]: event.target.value\n      }));\n    }\n  };\n\n  var processData = function processData() {\n    var dataX = [['']];\n    var dataY = [[0]];\n\n    if (currentGranularity.name === 'Hourly') {\n      dataX = xData.Hourly;\n      dataY = yData.Hourly;\n    }\n\n    if (currentGranularity.name === 'Daily') {\n      dataX = xData.Daily;\n      dataY = yData.Daily;\n    }\n\n    if (currentGranularity.name === 'Monthly') {\n      dataX = xData.Monthly;\n      dataY = yData.Monthly;\n    }\n\n    var colors = [palette.secondary.main, palette.warning.main, palette.primary.dark, palette.error.dark];\n    var lineSize = [3, 3, 3, 3];\n    var data = [];\n    var series = Array(labels.length).fill(0);\n    var lengths = Array(labels.length).fill(0);\n\n    for (var i = 0; i < dataX.length; i += 1) {\n      var result = {\n        x: dataX[i],\n        y: dataY[i],\n        type: 'scatter',\n        mode: 'lines + text',\n        line: {\n          shape: 'spline',\n          color: colors[i],\n          width: lineSize[i]\n        },\n        text: labels[i],\n        textposition: 'top center',\n        textfont: {\n          family: 'Ubuntu',\n          size: 12,\n          fontWeight: 500,\n          color: colors[i]\n        },\n        name: ''\n      };\n      data.push(result);\n\n      for (var j = 0; j < dataY[i].length; j += 1) {\n        series[i] += dataY[i][j];\n      }\n\n      lengths[i] = dataY[i].length;\n    }\n\n    var normalized = Array(labels.length).fill(0);\n\n    for (var k = 0; k < lengths.length; k += 1) {\n      normalized[k] = series[k] / lengths[k];\n    }\n\n    var max = Math.max.apply(Math, _toConsumableArray(normalized));\n    var maxID = normalized.indexOf(max);\n    var min = Math.min.apply(Math, _toConsumableArray(normalized));\n    var minID = normalized.indexOf(min);\n    setEdgeData({\n      highScore: max,\n      lowScore: min,\n      highColor: colors[maxID],\n      lowColor: colors[minID],\n      highName: labels[maxID],\n      lowName: labels[minID]\n    });\n    setPlotData(data);\n  };\n\n  var selectorOptions = {\n    buttons: [{\n      step: 'day',\n      stepmode: 'backward',\n      count: 1,\n      label: '1 Day'\n    }, {\n      step: 'day',\n      stepmode: 'backward',\n      count: 7,\n      label: '1 Week'\n    }, {\n      step: 'day',\n      stepmode: 'backward',\n      count: 14,\n      label: '2 Weeks'\n    }, {\n      step: 'month',\n      stepmode: 'backward',\n      count: 1,\n      label: '1 Month'\n    }, {\n      step: 'month',\n      stepmode: 'backward',\n      count: 3,\n      label: '3 Months'\n    }, {\n      step: 'month',\n      stepmode: 'backward',\n      count: 6,\n      label: '6 Months'\n    }, {\n      step: 'year',\n      stepmode: 'backward',\n      count: 1,\n      label: '1 Year'\n    }, {\n      step: 'year',\n      stepmode: 'backward',\n      count: 2,\n      label: '2 Years'\n    }, {\n      step: 'all',\n      label: 'default'\n    }]\n  };\n\n  var processLayout = function processLayout() {\n    var layout = {\n      showlegend: false,\n      height: 405,\n      width: 610,\n      xaxis: {\n        showgrid: true,\n        showline: false,\n        showticklabels: true,\n        linecolor: palette.graphAnnotationsColor,\n        linewidth: 0.5,\n        ticks: 'outside',\n        tickcolor: palette.graphAnnotationsColor,\n        tickwidth: 2,\n        ticklen: 5,\n        tickfont: {\n          family: 'Ubuntu',\n          color: palette.customColors.black(0.4)\n        },\n        mirror: true,\n        rangeselector: selectorOptions,\n        rangeslider: {\n          visible: true\n        }\n      },\n      yaxis: {\n        showgrid: true,\n        zeroline: false,\n        showline: false,\n        showticklabels: true,\n        linecolor: palette.graphAnnotationsColor,\n        linewidth: 0.5,\n        ticks: 'outside',\n        tickcolor: palette.graphAnnotationsColor,\n        tickwidth: 2,\n        ticklen: 5,\n        tickfont: {\n          family: 'Ubuntu',\n          color: palette.customColors.black(0.4)\n        },\n        mirror: true,\n        tickmode: 'array',\n        tickvals: [0, 20, 40, 60, 80, 100],\n        ticktext: ['0', '20', '40', '60', '80', '100'],\n        range: [-10, 110]\n      },\n      cliponaxis: true,\n      layer: 'below_traces',\n      autosize: false,\n      margin: {\n        autoexpand: false,\n        l: 30,\n        r: 30,\n        t: 30,\n        b: 105\n      },\n      font: {\n        family: 'Ubuntu, monospace',\n        color: palette.customColors.black(0.4)\n      }\n    };\n    setPlotLayout(layout);\n  };\n\n  var redirect = function redirect() {\n    tabs.changeWorkflowsTabs(3);\n    history.push('/workflows');\n  };\n\n  useEffect(function () {\n    processData();\n    processLayout();\n  }, [currentGranularity]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      alignContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexDisplay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.adjust,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Score, {\n    score: edgeData.highScore,\n    high: true,\n    color: edgeData.highColor,\n    name: edgeData.highName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Score, {\n    score: edgeData.lowScore,\n    high: false,\n    color: edgeData.lowColor,\n    name: edgeData.lowName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    color: \"secondary\",\n    focused: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-selection-granularity\",\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, t('home.resilienceScoreComparisonOptions.granularity')), /*#__PURE__*/React.createElement(Select, {\n    value: currentGranularity.name,\n    onChange: handleChangeInGranularity,\n    label: \"Granularity\",\n    inputProps: {\n      name: 'name',\n      id: 'outlined-selection-granularity'\n    },\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Hourly\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }, t('home.resilienceScoreComparisonOptions.option1')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Daily\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, t('home.resilienceScoreComparisonOptions.option2')), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Monthly\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  }, t('home.resilienceScoreComparisonOptions.option3')))), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Analytics\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"Analytics\",\n    onClick: redirect,\n    className: classes.analyticsBtnPos,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AssessmentOutlinedIcon, {\n    color: \"secondary\",\n    className: classes.analyticsButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.plot,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Plot, {\n    data: plotData,\n    layout: plotLayout,\n    useResizeHandler: true,\n    style: {\n      width: 'fit-content',\n      margin: 'auto'\n    },\n    config: {\n      displaylogo: false,\n      autosizable: true,\n      responsive: true,\n      frameMargins: 0.2,\n      showAxisDragHandles: true,\n      showAxisRangeEntryBoxes: true,\n      showTips: true,\n      displayModeBar: false,\n      toImageButtonOptions: {\n        format: 'png',\n        filename: \"Top4_ResilienceScores_Comparison-\".concat(new Date().toString()),\n        width: 1920,\n        height: 1080,\n        scale: 2\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ResilienceScoreComparisonPlot;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/Home/ResilienceScoreComparisonPlot/index.tsx"],"names":["FormControl","IconButton","InputLabel","MenuItem","Select","Tooltip","useTheme","AssessmentOutlinedIcon","Plotly","React","useEffect","useTranslation","createPlotlyComponent","useActions","TabActions","history","Score","useStyles","Plot","ResilienceScoreComparisonPlot","xData","yData","labels","classes","palette","t","tabs","useState","name","currentGranularity","setCurrentGranularity","plotData","setPlotData","highScore","lowScore","highColor","lowColor","highName","lowName","edgeData","setEdgeData","plotLayout","setPlotLayout","handleChangeInGranularity","event","target","value","processData","dataX","dataY","Hourly","Daily","Monthly","colors","secondary","main","warning","primary","dark","error","lineSize","data","series","Array","length","fill","lengths","i","result","x","y","type","mode","line","shape","color","width","text","textposition","textfont","family","size","fontWeight","push","j","normalized","k","max","Math","maxID","indexOf","min","minID","selectorOptions","buttons","step","stepmode","count","label","processLayout","layout","showlegend","height","xaxis","showgrid","showline","showticklabels","linecolor","graphAnnotationsColor","linewidth","ticks","tickcolor","tickwidth","ticklen","tickfont","customColors","black","mirror","rangeselector","rangeslider","visible","yaxis","zeroline","tickmode","tickvals","ticktext","range","cliponaxis","layer","autosize","margin","autoexpand","l","r","b","font","redirect","changeWorkflowsTabs","alignContent","flexDisplay","adjust","formControl","root","id","analyticsBtnPos","analyticsButton","plot","displaylogo","autosizable","responsive","frameMargins","showAxisDragHandles","showAxisRangeEntryBoxes","showTips","displayModeBar","toImageButtonOptions","format","filename","Date","toString","scale"],"mappings":"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","sourcesContent":["/* eslint-disable max-len */\nimport {\n  FormControl,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Select,\n  Tooltip,\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport AssessmentOutlinedIcon from '@material-ui/icons/AssessmentOutlined';\nimport Plotly from 'plotly.js';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport useActions from '../../../redux/actions';\nimport * as TabActions from '../../../redux/actions/tabs';\nimport { history } from '../../../redux/configureStore';\nimport Score from './Score';\nimport useStyles from './style';\n\nconst Plot = createPlotlyComponent(Plotly);\n\ninterface ResilienceScoreComparisonPlotProps {\n  xData: { Hourly: string[][]; Daily: string[][]; Monthly: string[][] };\n  yData: { Hourly: number[][]; Daily: number[][]; Monthly: number[][] };\n  labels: string[];\n}\n\nconst ResilienceScoreComparisonPlot: React.FC<ResilienceScoreComparisonPlotProps> = ({\n  xData,\n  yData,\n  labels,\n}) => {\n  const classes = useStyles();\n  const { palette } = useTheme();\n  const { t } = useTranslation();\n  const tabs = useActions(TabActions);\n  const [currentGranularity, setCurrentGranularity] = React.useState<{\n    name: string;\n  }>({\n    name: 'Daily',\n  });\n  const [plotData, setPlotData] = React.useState<any[]>([]);\n  const [edgeData, setEdgeData] = React.useState({\n    highScore: 0,\n    lowScore: 0,\n    highColor: '',\n    lowColor: '',\n    highName: '',\n    lowName: '',\n  });\n  const [plotLayout, setPlotLayout] = React.useState<any>({});\n\n  const handleChangeInGranularity = (\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) => {\n    const name = event.target.name as keyof typeof currentGranularity;\n    if (name !== currentGranularity.name) {\n      setCurrentGranularity({\n        ...currentGranularity,\n        [name]: event.target.value as string,\n      });\n    }\n  };\n\n  const processData = () => {\n    let dataX = [['']];\n    let dataY = [[0]];\n    if (currentGranularity.name === 'Hourly') {\n      dataX = xData.Hourly;\n      dataY = yData.Hourly;\n    }\n    if (currentGranularity.name === 'Daily') {\n      dataX = xData.Daily;\n      dataY = yData.Daily;\n    }\n    if (currentGranularity.name === 'Monthly') {\n      dataX = xData.Monthly;\n      dataY = yData.Monthly;\n    }\n    const colors = [\n      palette.secondary.main,\n      palette.warning.main,\n      palette.primary.dark,\n      palette.error.dark,\n    ];\n    const lineSize = [3, 3, 3, 3];\n    const data = [];\n    const series: number[] = Array(labels.length).fill(0);\n    const lengths: number[] = Array(labels.length).fill(0);\n    for (let i = 0; i < dataX.length; i += 1) {\n      const result = {\n        x: dataX[i],\n        y: dataY[i],\n        type: 'scatter',\n        mode: 'lines + text',\n        line: {\n          shape: 'spline',\n          color: colors[i],\n          width: lineSize[i],\n        },\n        text: labels[i],\n        textposition: 'top center',\n        textfont: {\n          family: 'Ubuntu',\n          size: 12,\n          fontWeight: 500,\n          color: colors[i],\n        },\n        name: '',\n      };\n      data.push(result);\n      for (let j = 0; j < dataY[i].length; j += 1) {\n        series[i] += dataY[i][j];\n      }\n      lengths[i] = dataY[i].length;\n    }\n\n    const normalized: number[] = Array(labels.length).fill(0);\n    for (let k = 0; k < lengths.length; k += 1) {\n      normalized[k] = series[k] / lengths[k];\n    }\n    const max = Math.max(...normalized);\n    const maxID = normalized.indexOf(max);\n    const min = Math.min(...normalized);\n    const minID = normalized.indexOf(min);\n\n    setEdgeData({\n      highScore: max,\n      lowScore: min,\n      highColor: colors[maxID],\n      lowColor: colors[minID],\n      highName: labels[maxID],\n      lowName: labels[minID],\n    });\n    setPlotData(data);\n  };\n\n  const selectorOptions = {\n    buttons: [\n      {\n        step: 'day',\n        stepmode: 'backward',\n        count: 1,\n        label: '1 Day',\n      },\n      {\n        step: 'day',\n        stepmode: 'backward',\n        count: 7,\n        label: '1 Week',\n      },\n      {\n        step: 'day',\n        stepmode: 'backward',\n        count: 14,\n        label: '2 Weeks',\n      },\n      {\n        step: 'month',\n        stepmode: 'backward',\n        count: 1,\n        label: '1 Month',\n      },\n      {\n        step: 'month',\n        stepmode: 'backward',\n        count: 3,\n        label: '3 Months',\n      },\n      {\n        step: 'month',\n        stepmode: 'backward',\n        count: 6,\n        label: '6 Months',\n      },\n      {\n        step: 'year',\n        stepmode: 'backward',\n        count: 1,\n        label: '1 Year',\n      },\n      {\n        step: 'year',\n        stepmode: 'backward',\n        count: 2,\n        label: '2 Years',\n      },\n      {\n        step: 'all',\n        label: 'default',\n      },\n    ],\n  };\n\n  const processLayout = () => {\n    const layout = {\n      showlegend: false,\n      height: 405,\n      width: 610,\n      xaxis: {\n        showgrid: true,\n        showline: false,\n        showticklabels: true,\n        linecolor: palette.graphAnnotationsColor,\n        linewidth: 0.5,\n        ticks: 'outside',\n        tickcolor: palette.graphAnnotationsColor,\n        tickwidth: 2,\n        ticklen: 5,\n        tickfont: {\n          family: 'Ubuntu',\n          color: palette.customColors.black(0.4),\n        },\n        mirror: true,\n        rangeselector: selectorOptions as any,\n        rangeslider: { visible: true },\n      },\n      yaxis: {\n        showgrid: true,\n        zeroline: false,\n        showline: false,\n        showticklabels: true,\n        linecolor: palette.graphAnnotationsColor,\n        linewidth: 0.5,\n        ticks: 'outside',\n        tickcolor: palette.graphAnnotationsColor,\n        tickwidth: 2,\n        ticklen: 5,\n        tickfont: {\n          family: 'Ubuntu',\n          color: palette.customColors.black(0.4),\n        },\n        mirror: true,\n        tickmode: 'array',\n        tickvals: [0, 20, 40, 60, 80, 100],\n        ticktext: ['0', '20', '40', '60', '80', '100'],\n        range: [-10, 110],\n      },\n      cliponaxis: true,\n      layer: 'below_traces',\n      autosize: false,\n      margin: {\n        autoexpand: false,\n        l: 30,\n        r: 30,\n        t: 30,\n        b: 105,\n      },\n      font: {\n        family: 'Ubuntu, monospace',\n        color: palette.customColors.black(0.4),\n      },\n    };\n    setPlotLayout(layout);\n  };\n\n  const redirect = () => {\n    tabs.changeWorkflowsTabs(3);\n    history.push('/workflows');\n  };\n\n  useEffect(() => {\n    processData();\n    processLayout();\n  }, [currentGranularity]);\n\n  return (\n    <div style={{ alignContent: 'center' }}>\n      <div className={classes.flexDisplay}>\n        <div className={classes.adjust}>\n          <Score\n            score={edgeData.highScore}\n            high\n            color={edgeData.highColor}\n            name={edgeData.highName}\n          />\n        </div>\n        <Score\n          score={edgeData.lowScore}\n          high={false}\n          color={edgeData.lowColor}\n          name={edgeData.lowName}\n        />\n        <FormControl\n          variant=\"outlined\"\n          className={classes.formControl}\n          color=\"secondary\"\n          focused\n        >\n          <InputLabel\n            htmlFor=\"outlined-selection-granularity\"\n            className={classes.root}\n          >\n            {t('home.resilienceScoreComparisonOptions.granularity')}\n          </InputLabel>\n          <Select\n            value={currentGranularity.name}\n            onChange={handleChangeInGranularity}\n            label=\"Granularity\"\n            inputProps={{\n              name: 'name',\n              id: 'outlined-selection-granularity',\n            }}\n            className={classes.root}\n          >\n            <MenuItem value=\"Hourly\">\n              {t('home.resilienceScoreComparisonOptions.option1')}\n            </MenuItem>\n            <MenuItem value=\"Daily\">\n              {t('home.resilienceScoreComparisonOptions.option2')}\n            </MenuItem>\n            <MenuItem value=\"Monthly\">\n              {t('home.resilienceScoreComparisonOptions.option3')}\n            </MenuItem>\n          </Select>\n        </FormControl>\n        <Tooltip title=\"Analytics\">\n          <IconButton\n            aria-label=\"Analytics\"\n            onClick={redirect}\n            className={classes.analyticsBtnPos}\n          >\n            <AssessmentOutlinedIcon\n              color=\"secondary\"\n              className={classes.analyticsButton}\n            />\n          </IconButton>\n        </Tooltip>\n      </div>\n      <div className={classes.plot}>\n        <Plot\n          data={plotData}\n          layout={plotLayout}\n          useResizeHandler\n          style={{\n            width: 'fit-content',\n            margin: 'auto',\n          }}\n          config={{\n            displaylogo: false,\n            autosizable: true,\n            responsive: true,\n            frameMargins: 0.2,\n            showAxisDragHandles: true,\n            showAxisRangeEntryBoxes: true,\n            showTips: true,\n            displayModeBar: false,\n            toImageButtonOptions: {\n              format: 'png',\n              filename: `Top4_ResilienceScores_Comparison-${new Date().toString()}`,\n              width: 1920,\n              height: 1080,\n              scale: 2,\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ResilienceScoreComparisonPlot;\n"]},"metadata":{},"sourceType":"module"}