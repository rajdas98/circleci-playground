{"ast":null,"code":"module.exports = intersectRect;\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y; // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n  var sx, sy;\n\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n\n  return {\n    x: x + sx,\n    y: y + sy\n  };\n}","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/dagre-d3/lib/intersect/intersect-rect.js"],"names":["module","exports","intersectRect","node","point","x","y","dx","dy","w","width","h","height","sx","sy","Math","abs"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,aAAjB;;AAEA,SAASA,aAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoC;AAClC,MAAIC,CAAC,GAAGF,IAAI,CAACE,CAAb;AACA,MAAIC,CAAC,GAAGH,IAAI,CAACG,CAAb,CAFkC,CAIlC;AACA;;AACA,MAAIC,EAAE,GAAGH,KAAK,CAACC,CAAN,GAAUA,CAAnB;AACA,MAAIG,EAAE,GAAGJ,KAAK,CAACE,CAAN,GAAUA,CAAnB;AACA,MAAIG,CAAC,GAAGN,IAAI,CAACO,KAAL,GAAa,CAArB;AACA,MAAIC,CAAC,GAAGR,IAAI,CAACS,MAAL,GAAc,CAAtB;AAEA,MAAIC,EAAJ,EAAQC,EAAR;;AACA,MAAIC,IAAI,CAACC,GAAL,CAASR,EAAT,IAAeC,CAAf,GAAmBM,IAAI,CAACC,GAAL,CAAST,EAAT,IAAeI,CAAtC,EAAyC;AACvC;AACA,QAAIH,EAAE,GAAG,CAAT,EAAY;AACVG,MAAAA,CAAC,GAAG,CAACA,CAAL;AACD;;AACDE,IAAAA,EAAE,GAAGL,EAAE,KAAK,CAAP,GAAW,CAAX,GAAeG,CAAC,GAAGJ,EAAJ,GAASC,EAA7B;AACAM,IAAAA,EAAE,GAAGH,CAAL;AACD,GAPD,MAOO;AACL;AACA,QAAIJ,EAAE,GAAG,CAAT,EAAY;AACVE,MAAAA,CAAC,GAAG,CAACA,CAAL;AACD;;AACDI,IAAAA,EAAE,GAAGJ,CAAL;AACAK,IAAAA,EAAE,GAAGP,EAAE,KAAK,CAAP,GAAW,CAAX,GAAeE,CAAC,GAAGD,EAAJ,GAASD,EAA7B;AACD;;AAED,SAAO;AAACF,IAAAA,CAAC,EAAEA,CAAC,GAAGQ,EAAR;AAAYP,IAAAA,CAAC,EAAEA,CAAC,GAAGQ;AAAnB,GAAP;AACD","sourcesContent":["module.exports = intersectRect;\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n\n  return {x: x + sx, y: y + sy};\n}\n"]},"metadata":{},"sourceType":"script"}