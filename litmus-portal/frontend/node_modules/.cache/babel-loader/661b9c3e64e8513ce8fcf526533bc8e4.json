{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/WorkflowDetails/WorkflowNodeInfo/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport { Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport ButtonOutline from '../../../components/Button/ButtonOutline';\nimport timeDifference from '../../../utils/datesModifier';\nimport NodeLogs from '../NodeLogs';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\nvar WorkflowNodeInfo = function WorkflowNodeInfo(_ref) {\n  _s();\n\n  var cluster_id = _ref.cluster_id,\n      workflow_run_id = _ref.workflow_run_id,\n      pod_namespace = _ref.pod_namespace;\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      logsOpen = _useState2[0],\n      setLogsOpen = _useState2[1]; // Get the nelected node from redux\n\n\n  var _useSelector = useSelector(function (state) {\n    return state.selectedNode;\n  }),\n      name = _useSelector.name,\n      phase = _useSelector.phase,\n      pod_name = _useSelector.pod_name,\n      type = _useSelector.type,\n      startedAt = _useSelector.startedAt,\n      finishedAt = _useSelector.finishedAt;\n\n  var handleClose = function handleClose() {\n    setLogsOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, logsOpen ? /*#__PURE__*/React.createElement(NodeLogs, {\n    logsOpen: logsOpen,\n    handleClose: handleClose,\n    cluster_id: cluster_id,\n    workflow_run_id: workflow_run_id,\n    pod_namespace: pod_namespace,\n    pod_name: pod_name,\n    pod_type: type,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heightMaintainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.nodeSpacing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, t('workflowDetailsView.workflowNodeInfo.name'), \":\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), pod_name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heightMaintainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.nodeSpacing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, t('workflowDetailsView.workflowNodeInfo.type'), \":\"), ' ', type)), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.nodeSpacing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heightMaintainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, t('workflowDetailsView.workflowNodeInfo.phase'), \":\"), ' ', phase))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.nodeSpacing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heightMaintainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, t('workflowDetailsView.workflowNodeInfo.startTime'), \":\"), ' ', timeDifference(startedAt)), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, t('workflowDetailsView.workflowNodeInfo.endTime'), \":\"), ' ', finishedAt !== '' ? timeDifference(finishedAt) : 'Not yet finished'), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, t('workflowDetailsView.workflowNodeInfo.duration'), \":\", ' '), ' ', finishedAt !== '' ? ((parseInt(finishedAt, 10) - parseInt(startedAt, 10)) / 60).toFixed(1) : ((new Date().getTime() / 1000 - parseInt(startedAt, 10)) / 60).toFixed(1), ' ', \"minutes\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.nodeSpacing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heightMaintainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bold,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, t('workflowDetailsView.workflowNodeInfo.nodeName'), \":\"), ' ', name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.footerButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutline, {\n    isDisabled: false,\n    handleClick: function handleClick() {\n      return setLogsOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, t('workflowDetailsView.workflowNodeInfo.button.logs'))));\n};\n\n_s(WorkflowNodeInfo, \"9a229M9P6ToMu2xzfQBspQBpK/M=\", false, function () {\n  return [useStyles, useTranslation, useSelector];\n});\n\n_c = WorkflowNodeInfo;\nexport default WorkflowNodeInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkflowNodeInfo\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/WorkflowDetails/WorkflowNodeInfo/index.tsx"],"names":["Typography","React","useState","useSelector","ButtonOutline","timeDifference","NodeLogs","useTranslation","useStyles","WorkflowNodeInfo","cluster_id","workflow_run_id","pod_namespace","classes","t","logsOpen","setLogsOpen","state","selectedNode","name","phase","pod_name","type","startedAt","finishedAt","handleClose","root","heightMaintainer","nodeSpacing","bold","parseInt","toFixed","Date","getTime","footerButton"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport ButtonOutline from '../../../components/Button/ButtonOutline';\nimport { RootState } from '../../../redux/reducers';\nimport timeDifference from '../../../utils/datesModifier';\nimport NodeLogs from '../NodeLogs';\nimport { useTranslation } from 'react-i18next';\nimport useStyles from './styles';\n\ninterface WorkflowNodeInfoProps {\n  cluster_id: string;\n  workflow_run_id: string;\n  pod_namespace: string;\n}\n\nconst WorkflowNodeInfo: React.FC<WorkflowNodeInfoProps> = ({\n  cluster_id,\n  workflow_run_id,\n  pod_namespace,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [logsOpen, setLogsOpen] = useState<boolean>(false);\n\n  // Get the nelected node from redux\n  const { name, phase, pod_name, type, startedAt, finishedAt } = useSelector(\n    (state: RootState) => state.selectedNode\n  );\n\n  const handleClose = () => {\n    setLogsOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      {/* Logs Modal */}\n      {logsOpen ? (\n        <NodeLogs\n          logsOpen={logsOpen}\n          handleClose={handleClose}\n          cluster_id={cluster_id}\n          workflow_run_id={workflow_run_id}\n          pod_namespace={pod_namespace}\n          pod_name={pod_name}\n          pod_type={type}\n        />\n      ) : (\n        <></>\n      )}\n\n      {/* Node Name */}\n      <div className={classes.heightMaintainer}>\n        <Typography className={classes.nodeSpacing}>\n          <span className={classes.bold}>\n            {t('workflowDetailsView.workflowNodeInfo.name')}:\n          </span>\n          <br />\n          {pod_name}\n        </Typography>\n      </div>\n      {/* Node Type */}\n      <div className={classes.heightMaintainer}>\n        <Typography className={classes.nodeSpacing}>\n          <span className={classes.bold}>\n            {t('workflowDetailsView.workflowNodeInfo.type')}:\n          </span>{' '}\n          {type}\n        </Typography>\n      </div>\n      <hr />\n\n      {/* Node Phase */}\n      <div className={classes.nodeSpacing}>\n        <div className={classes.heightMaintainer}>\n          <Typography>\n            <span className={classes.bold}>\n              {t('workflowDetailsView.workflowNodeInfo.phase')}:\n            </span>{' '}\n            {phase}\n          </Typography>\n        </div>\n      </div>\n      <hr />\n\n      {/* Node Durations */}\n      <div className={classes.nodeSpacing}>\n        <div className={classes.heightMaintainer}>\n          <Typography>\n            <span className={classes.bold}>\n              {t('workflowDetailsView.workflowNodeInfo.startTime')}:\n            </span>{' '}\n            {timeDifference(startedAt)}\n          </Typography>\n          <Typography>\n            <span className={classes.bold}>\n              {t('workflowDetailsView.workflowNodeInfo.endTime')}:\n            </span>{' '}\n            {finishedAt !== ''\n              ? timeDifference(finishedAt)\n              : 'Not yet finished'}\n          </Typography>\n          <Typography>\n            <span className={classes.bold}>\n              {t('workflowDetailsView.workflowNodeInfo.duration')}:{' '}\n            </span>{' '}\n            {finishedAt !== ''\n              ? (\n                  (parseInt(finishedAt, 10) - parseInt(startedAt, 10)) /\n                  60\n                ).toFixed(1)\n              : (\n                  (new Date().getTime() / 1000 - parseInt(startedAt, 10)) /\n                  60\n                ).toFixed(1)}{' '}\n            minutes\n          </Typography>\n        </div>\n      </div>\n      <hr />\n      {/* Node Name */}\n      <div className={classes.nodeSpacing}>\n        <div className={classes.heightMaintainer}>\n          <Typography>\n            <span className={classes.bold}>\n              {t('workflowDetailsView.workflowNodeInfo.nodeName')}:\n            </span>{' '}\n            {name}\n          </Typography>\n        </div>\n      </div>\n      <div className={classes.footerButton}>\n        <ButtonOutline isDisabled={false} handleClick={() => setLogsOpen(true)}>\n          {t('workflowDetailsView.workflowNodeInfo.button.logs')}\n        </ButtonOutline>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkflowNodeInfo;\n"]},"metadata":{},"sourceType":"module"}