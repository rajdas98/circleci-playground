{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar extendFlat = require('../../lib').extendFlat;\n\nvar scatterAttrs = require('../scatter/attributes');\n\nvar dash = require('../../components/drawing/attributes').dash;\n\nvar fxAttrs = require('../../components/fx/attributes');\n\nvar delta = require('../../constants/delta.js');\n\nvar INCREASING_COLOR = delta.INCREASING.COLOR;\nvar DECREASING_COLOR = delta.DECREASING.COLOR;\nvar lineAttrs = scatterAttrs.line;\n\nfunction directionAttrs(lineColorDefault) {\n  return {\n    line: {\n      color: extendFlat({}, lineAttrs.color, {\n        dflt: lineColorDefault\n      }),\n      width: lineAttrs.width,\n      dash: dash,\n      editType: 'style'\n    },\n    editType: 'style'\n  };\n}\n\nmodule.exports = {\n  x: {\n    valType: 'data_array',\n    editType: 'calc+clearAxisTypes',\n    description: ['Sets the x coordinates.', 'If absent, linear coordinate will be generated.'].join(' ')\n  },\n  open: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: 'Sets the open values.'\n  },\n  high: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: 'Sets the high values.'\n  },\n  low: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: 'Sets the low values.'\n  },\n  close: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: 'Sets the close values.'\n  },\n  line: {\n    width: extendFlat({}, lineAttrs.width, {\n      description: [lineAttrs.width, 'Note that this style setting can also be set per', 'direction via `increasing.line.width` and', '`decreasing.line.width`.'].join(' ')\n    }),\n    dash: extendFlat({}, dash, {\n      description: [dash.description, 'Note that this style setting can also be set per', 'direction via `increasing.line.dash` and', '`decreasing.line.dash`.'].join(' ')\n    }),\n    editType: 'style'\n  },\n  increasing: directionAttrs(INCREASING_COLOR),\n  decreasing: directionAttrs(DECREASING_COLOR),\n  text: {\n    valType: 'string',\n    role: 'info',\n    dflt: '',\n    arrayOk: true,\n    editType: 'calc',\n    description: ['Sets hover text elements associated with each sample point.', 'If a single string, the same string appears over', 'all the data points.', 'If an array of string, the items are mapped in order to', 'this trace\\'s sample points.'].join(' ')\n  },\n  hovertext: {\n    valType: 'string',\n    role: 'info',\n    dflt: '',\n    arrayOk: true,\n    editType: 'calc',\n    description: 'Same as `text`.'\n  },\n  tickwidth: {\n    valType: 'number',\n    min: 0,\n    max: 0.5,\n    dflt: 0.3,\n    role: 'style',\n    editType: 'calc',\n    description: ['Sets the width of the open/close tick marks', 'relative to the *x* minimal interval.'].join(' ')\n  },\n  hoverlabel: extendFlat({}, fxAttrs.hoverlabel, {\n    split: {\n      valType: 'boolean',\n      role: 'info',\n      dflt: false,\n      editType: 'style',\n      description: ['Show hover information (open, close, high, low) in', 'separate labels.'].join(' ')\n    }\n  })\n};","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/plotly.js/src/traces/ohlc/attributes.js"],"names":["extendFlat","require","scatterAttrs","dash","fxAttrs","delta","INCREASING_COLOR","INCREASING","COLOR","DECREASING_COLOR","DECREASING","lineAttrs","line","directionAttrs","lineColorDefault","color","dflt","width","editType","module","exports","x","valType","description","join","open","high","low","close","increasing","decreasing","text","role","arrayOk","hovertext","tickwidth","min","max","hoverlabel","split"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar extendFlat = require('../../lib').extendFlat;\nvar scatterAttrs = require('../scatter/attributes');\nvar dash = require('../../components/drawing/attributes').dash;\nvar fxAttrs = require('../../components/fx/attributes');\nvar delta = require('../../constants/delta.js');\n\nvar INCREASING_COLOR = delta.INCREASING.COLOR;\nvar DECREASING_COLOR = delta.DECREASING.COLOR;\n\nvar lineAttrs = scatterAttrs.line;\n\nfunction directionAttrs(lineColorDefault) {\n    return {\n        line: {\n            color: extendFlat({}, lineAttrs.color, {dflt: lineColorDefault}),\n            width: lineAttrs.width,\n            dash: dash,\n            editType: 'style'\n        },\n        editType: 'style'\n    };\n}\n\nmodule.exports = {\n\n    x: {\n        valType: 'data_array',\n        editType: 'calc+clearAxisTypes',\n        description: [\n            'Sets the x coordinates.',\n            'If absent, linear coordinate will be generated.'\n        ].join(' ')\n    },\n\n    open: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: 'Sets the open values.'\n    },\n\n    high: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: 'Sets the high values.'\n    },\n\n    low: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: 'Sets the low values.'\n    },\n\n    close: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: 'Sets the close values.'\n    },\n\n    line: {\n        width: extendFlat({}, lineAttrs.width, {\n            description: [\n                lineAttrs.width,\n                'Note that this style setting can also be set per',\n                'direction via `increasing.line.width` and',\n                '`decreasing.line.width`.'\n            ].join(' ')\n        }),\n        dash: extendFlat({}, dash, {\n            description: [\n                dash.description,\n                'Note that this style setting can also be set per',\n                'direction via `increasing.line.dash` and',\n                '`decreasing.line.dash`.'\n            ].join(' ')\n        }),\n        editType: 'style'\n    },\n\n    increasing: directionAttrs(INCREASING_COLOR),\n\n    decreasing: directionAttrs(DECREASING_COLOR),\n\n    text: {\n        valType: 'string',\n        role: 'info',\n        dflt: '',\n        arrayOk: true,\n        editType: 'calc',\n        description: [\n            'Sets hover text elements associated with each sample point.',\n            'If a single string, the same string appears over',\n            'all the data points.',\n            'If an array of string, the items are mapped in order to',\n            'this trace\\'s sample points.'\n        ].join(' ')\n    },\n    hovertext: {\n        valType: 'string',\n        role: 'info',\n        dflt: '',\n        arrayOk: true,\n        editType: 'calc',\n        description: 'Same as `text`.'\n    },\n\n    tickwidth: {\n        valType: 'number',\n        min: 0,\n        max: 0.5,\n        dflt: 0.3,\n        role: 'style',\n        editType: 'calc',\n        description: [\n            'Sets the width of the open/close tick marks',\n            'relative to the *x* minimal interval.'\n        ].join(' ')\n    },\n\n    hoverlabel: extendFlat({}, fxAttrs.hoverlabel, {\n        split: {\n            valType: 'boolean',\n            role: 'info',\n            dflt: false,\n            editType: 'style',\n            description: [\n                'Show hover information (open, close, high, low) in',\n                'separate labels.'\n            ].join(' ')\n        }\n    }),\n};\n"]},"metadata":{},"sourceType":"script"}