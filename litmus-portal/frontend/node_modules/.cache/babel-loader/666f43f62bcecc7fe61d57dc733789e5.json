{"ast":null,"code":"var util = require(\"../util\");\n\nmodule.exports = addTextLabel;\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\n\nfunction addTextLabel(root, node) {\n  var domNode = root.append(\"text\");\n  var lines = processEscapeSequences(node.label).split(\"\\n\");\n\n  for (var i = 0; i < lines.length; i++) {\n    domNode.append(\"tspan\").attr(\"xml:space\", \"preserve\").attr(\"dy\", \"1em\").attr(\"x\", \"1\").text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = \"\";\n  var escaped = false;\n  var ch;\n\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n\n    if (escaped) {\n      switch (ch) {\n        case \"n\":\n          newText += \"\\n\";\n          break;\n\n        default:\n          newText += ch;\n      }\n\n      escaped = false;\n    } else if (ch === \"\\\\\") {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n\n  return newText;\n}","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/dagre-d3/lib/label/add-text-label.js"],"names":["util","require","module","exports","addTextLabel","root","node","domNode","append","lines","processEscapeSequences","label","split","i","length","attr","text","applyStyle","labelStyle","newText","escaped","ch"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,YAAjB;AAEA;;;;AAGA,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;AAChC,MAAIC,OAAO,GAAGF,IAAI,CAACG,MAAL,CAAY,MAAZ,CAAd;AAEA,MAAIC,KAAK,GAAGC,sBAAsB,CAACJ,IAAI,CAACK,KAAN,CAAtB,CAAmCC,KAAnC,CAAyC,IAAzC,CAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCN,IAAAA,OAAO,CAACC,MAAR,CAAe,OAAf,EACGO,IADH,CACQ,WADR,EACqB,UADrB,EAEGA,IAFH,CAEQ,IAFR,EAEc,KAFd,EAGGA,IAHH,CAGQ,GAHR,EAGa,GAHb,EAIGC,IAJH,CAIQP,KAAK,CAACI,CAAD,CAJb;AAKD;;AAEDb,EAAAA,IAAI,CAACiB,UAAL,CAAgBV,OAAhB,EAAyBD,IAAI,CAACY,UAA9B;AAEA,SAAOX,OAAP;AACD;;AAED,SAASG,sBAAT,CAAgCM,IAAhC,EAAsC;AACpC,MAAIG,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,KAAd;AACA,MAAIC,EAAJ;;AACA,OAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,IAAI,CAACF,MAAzB,EAAiC,EAAED,CAAnC,EAAsC;AACpCQ,IAAAA,EAAE,GAAGL,IAAI,CAACH,CAAD,CAAT;;AACA,QAAIO,OAAJ,EAAa;AACX,cAAOC,EAAP;AACA,aAAK,GAAL;AAAUF,UAAAA,OAAO,IAAI,IAAX;AAAiB;;AAC3B;AAASA,UAAAA,OAAO,IAAIE,EAAX;AAFT;;AAIAD,MAAAA,OAAO,GAAG,KAAV;AACD,KAND,MAMO,IAAIC,EAAE,KAAK,IAAX,EAAiB;AACtBD,MAAAA,OAAO,GAAG,IAAV;AACD,KAFM,MAEA;AACLD,MAAAA,OAAO,IAAIE,EAAX;AACD;AACF;;AACD,SAAOF,OAAP;AACD","sourcesContent":["var util = require(\"../util\");\n\nmodule.exports = addTextLabel;\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append(\"text\");\n\n  var lines = processEscapeSequences(node.label).split(\"\\n\");\n  for (var i = 0; i < lines.length; i++) {\n    domNode.append(\"tspan\")\n      .attr(\"xml:space\", \"preserve\")\n      .attr(\"dy\", \"1em\")\n      .attr(\"x\", \"1\")\n      .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = \"\";\n  var escaped = false;\n  var ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch(ch) {\n      case \"n\": newText += \"\\n\"; break;\n      default: newText += ch;\n      }\n      escaped = false;\n    } else if (ch === \"\\\\\") {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n"]},"metadata":{},"sourceType":"script"}