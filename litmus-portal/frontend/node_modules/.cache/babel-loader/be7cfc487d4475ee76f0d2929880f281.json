{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseSchedule/TableData.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, IconButton, Menu, MenuItem, Popover, TableCell, Typography } from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport moment from 'moment';\nimport React from 'react';\nimport cronstrue from 'cronstrue';\nimport YAML from 'yaml';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport ExperimentPoints from './ExperimentPoints';\n\nvar TableData = function TableData(_ref) {\n  _s();\n\n  var data = _ref.data,\n      deleteRow = _ref.deleteRow;\n  var classes = useStyles(); // States for PopOver to display Experiment Weights\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      popAnchorEl = _React$useState4[0],\n      setPopAnchorEl = _React$useState4[1];\n\n  var open = Boolean(anchorEl);\n  var isOpen = Boolean(popAnchorEl);\n  var id = isOpen ? 'simple-popover' : undefined;\n\n  var handlePopOverClose = function handlePopOverClose() {\n    setPopAnchorEl(null);\n  };\n\n  var userData = useSelector(function (state) {\n    return state.userData;\n  });\n\n  var handlePopOverClick = function handlePopOverClick(event) {\n    setPopAnchorEl(event.currentTarget);\n  };\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  }; // Function to download the manifest\n\n\n  var downloadYAML = function downloadYAML(manifest, name) {\n    var parsedYAML = YAML.parse(manifest);\n    var doc = new YAML.Document();\n    doc.contents = parsedYAML;\n    var element = document.createElement('a');\n    var file = new Blob([YAML.stringify(doc)], {\n      type: 'text/yaml'\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"\".concat(name, \".yaml\");\n    document.body.appendChild(element);\n    element.click();\n  }; // Function to convert UNIX time in format of DD MMM YYY\n\n\n  var formatDate = function formatDate(date) {\n    var updated = new Date(parseInt(date, 10) * 1000).toString();\n    var resDate = moment(updated).format('DD MMM YYYY');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.workflowNameData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, data.workflow_name))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.clusterStartDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, formatDate(data.created_at))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.regularityData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/calender.svg\",\n    alt: \"Calender\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      paddingLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, data.cronSyntax === '' ? 'Once' : cronstrue.toString(data.cronSyntax))))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, data.cluster_name)), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handlePopOverClick,\n    style: {\n      textTransform: 'none'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, isOpen ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.expInfoActive,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Show Experiment\")), /*#__PURE__*/React.createElement(KeyboardArrowDownIcon, {\n    className: classes.expInfoActiveIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.expInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Show Experiment\")), /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: isOpen,\n    anchorEl: popAnchorEl,\n    onClose: handlePopOverClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.weightDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, data.weightages.map(function (expData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ExperimentPoints, {\n      expName: expData.experiment_name,\n      weight: expData.weightage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }));\n  })))), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.menuCell,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"more\",\n    \"aria-controls\": \"long-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    className: classes.optionBtn,\n    \"data-cy\": \"browseScheduleOptions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Menu, {\n    id: \"long-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Download\",\n    onClick: function onClick() {\n      return downloadYAML(data.workflow_manifest, data.workflow_name);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GetAppIcon, {\n    className: classes.downloadBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"downloadManifest\",\n    className: classes.downloadText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"Download Manifest\"))), userData.userRole !== 'Viewer' ? /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Analysis\",\n    onClick: function onClick() {\n      return deleteRow(data.workflow_id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.expDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/icons/deleteSchedule.svg\",\n    alt: \"Delete Schedule\",\n    className: classes.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"deleteSchedule\",\n    className: classes.btnText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, \"Delete Schedule\"))) : null)));\n};\n\n_s(TableData, \"pkhcgCHfTTPsiskmVRED+aeC9KM=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = TableData;\nexport default TableData;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableData\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/ChaosWorkflows/BrowseSchedule/TableData.tsx"],"names":["Button","IconButton","Menu","MenuItem","Popover","TableCell","Typography","ChevronRightIcon","KeyboardArrowDownIcon","MoreVertIcon","moment","React","cronstrue","YAML","GetAppIcon","useSelector","useStyles","ExperimentPoints","TableData","data","deleteRow","classes","useState","anchorEl","setAnchorEl","popAnchorEl","setPopAnchorEl","open","Boolean","isOpen","id","undefined","handlePopOverClose","userData","state","handlePopOverClick","event","currentTarget","handleClick","handleClose","downloadYAML","manifest","name","parsedYAML","parse","doc","Document","contents","element","document","createElement","file","Blob","stringify","type","href","URL","createObjectURL","download","body","appendChild","click","formatDate","date","updated","Date","parseInt","toString","resDate","format","workflowNameData","workflow_name","clusterStartDate","created_at","regularityData","expDiv","paddingLeft","cronSyntax","cluster_name","textTransform","expInfoActive","expInfoActiveIcon","expInfo","vertical","horizontal","marginTop","weightDiv","weightages","map","expData","marginBottom","experiment_name","weightage","menuCell","optionBtn","workflow_manifest","downloadBtn","downloadText","userRole","workflow_id","btnImg","btnText"],"mappings":"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","sourcesContent":["import {\n  Button,\n  IconButton,\n  Menu,\n  MenuItem,\n  Popover,\n  TableCell,\n  Typography,\n} from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport moment from 'moment';\nimport React from 'react';\nimport cronstrue from 'cronstrue';\nimport YAML from 'yaml';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { useSelector } from 'react-redux';\nimport { ScheduleWorkflow } from '../../../models/graphql/scheduleData';\nimport useStyles from './styles';\nimport ExperimentPoints from './ExperimentPoints';\nimport { RootState } from '../../../redux/reducers';\n\ninterface TableDataProps {\n  data: ScheduleWorkflow;\n  deleteRow: (wfid: string) => void;\n}\n\nconst TableData: React.FC<TableDataProps> = ({ data, deleteRow }) => {\n  const classes = useStyles();\n  // States for PopOver to display Experiment Weights\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [popAnchorEl, setPopAnchorEl] = React.useState<null | HTMLElement>(\n    null\n  );\n  const open = Boolean(anchorEl);\n  const isOpen = Boolean(popAnchorEl);\n  const id = isOpen ? 'simple-popover' : undefined;\n  const handlePopOverClose = () => {\n    setPopAnchorEl(null);\n  };\n\n  const userData = useSelector((state: RootState) => state.userData);\n\n  const handlePopOverClick = (event: React.MouseEvent<HTMLElement>) => {\n    setPopAnchorEl(event.currentTarget);\n  };\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  // Function to download the manifest\n  const downloadYAML = (manifest: string, name: string) => {\n    const parsedYAML = YAML.parse(manifest);\n    const doc = new YAML.Document();\n    doc.contents = parsedYAML;\n    const element = document.createElement('a');\n    const file = new Blob([YAML.stringify(doc)], {\n      type: 'text/yaml',\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = `${name}.yaml`;\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  // Function to convert UNIX time in format of DD MMM YYY\n  const formatDate = (date: string) => {\n    const updated = new Date(parseInt(date, 10) * 1000).toString();\n    const resDate = moment(updated).format('DD MMM YYYY');\n    if (date) return resDate;\n    return 'Date not available';\n  };\n\n  return (\n    <>\n      <TableCell className={classes.workflowNameData}>\n        <Typography>\n          <strong>{data.workflow_name}</strong>\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <Typography className={classes.clusterStartDate}>\n          {formatDate(data.created_at)}\n        </Typography>\n      </TableCell>\n      <TableCell>\n        <div className={classes.regularityData}>\n          <div className={classes.expDiv}>\n            <img src=\"/icons/calender.svg\" alt=\"Calender\" />\n            <Typography style={{ paddingLeft: 10 }}>\n              {data.cronSyntax === ''\n                ? 'Once'\n                : cronstrue.toString(data.cronSyntax)}\n            </Typography>\n          </div>\n        </div>\n      </TableCell>\n      <TableCell>\n        <Typography>{data.cluster_name}</Typography>\n      </TableCell>\n      <TableCell>\n        <Button onClick={handlePopOverClick} style={{ textTransform: 'none' }}>\n          {isOpen ? (\n            <div className={classes.expDiv}>\n              <Typography className={classes.expInfoActive}>\n                <strong>Show Experiment</strong>\n              </Typography>\n              <KeyboardArrowDownIcon className={classes.expInfoActiveIcon} />\n            </div>\n          ) : (\n            <div className={classes.expDiv}>\n              <Typography className={classes.expInfo}>\n                <strong>Show Experiment</strong>\n              </Typography>\n              <ChevronRightIcon />\n            </div>\n          )}\n        </Button>\n        <Popover\n          id={id}\n          open={isOpen}\n          anchorEl={popAnchorEl}\n          onClose={handlePopOverClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          style={{\n            marginTop: 10,\n          }}\n        >\n          <div className={classes.weightDiv}>\n            {data.weightages.map((expData) => {\n              return (\n                <div style={{ marginBottom: 8 }}>\n                  <ExperimentPoints\n                    expName={expData.experiment_name}\n                    weight={expData.weightage}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </Popover>\n      </TableCell>\n      <TableCell className={classes.menuCell}>\n        <IconButton\n          aria-label=\"more\"\n          aria-controls=\"long-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n          className={classes.optionBtn}\n          data-cy=\"browseScheduleOptions\"\n        >\n          <MoreVertIcon />\n        </IconButton>\n        <Menu\n          id=\"long-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={open}\n          onClose={handleClose}\n        >\n          <MenuItem\n            value=\"Download\"\n            onClick={() =>\n              downloadYAML(data.workflow_manifest, data.workflow_name)\n            }\n          >\n            <div className={classes.expDiv}>\n              <GetAppIcon className={classes.downloadBtn} />\n              <Typography\n                data-cy=\"downloadManifest\"\n                className={classes.downloadText}\n              >\n                Download Manifest\n              </Typography>\n            </div>\n          </MenuItem>\n          {userData.userRole !== 'Viewer' ? (\n            <MenuItem\n              value=\"Analysis\"\n              onClick={() => deleteRow(data.workflow_id)}\n            >\n              <div className={classes.expDiv}>\n                <img\n                  src=\"/icons/deleteSchedule.svg\"\n                  alt=\"Delete Schedule\"\n                  className={classes.btnImg}\n                />\n                <Typography\n                  data-cy=\"deleteSchedule\"\n                  className={classes.btnText}\n                >\n                  Delete Schedule\n                </Typography>\n              </div>\n            </MenuItem>\n          ) : null}\n        </Menu>\n      </TableCell>\n    </>\n  );\n};\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}