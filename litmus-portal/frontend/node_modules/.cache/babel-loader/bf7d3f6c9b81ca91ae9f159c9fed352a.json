{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/Targets/ConnectTarget/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Typography } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation, useLazyQuery } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport { history } from '../../../redux/configureStore';\nimport ButtonOutline from '../../Button/ButtonOutline';\nimport TargetCopy from '../TargetCopy';\nimport useStyles from './styles';\nimport Scaffold from '../../../containers/layouts/Scaffold';\nimport { USER_CLUSTER_REG, GET_CLUSTER } from '../../../graphql';\nimport Loader from '../../Loader';\nimport ButtonFilled from '../../Button/ButtonFilled';\nimport Unimodal from '../../../containers/layouts/Unimodal';\nimport BackButton from '../../Button/BackButton';\n\nvar ConnectTarget = function ConnectTarget() {\n  _s();\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      link = _React$useState4[0],\n      setLink = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      id = _React$useState6[0],\n      setID = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      modal = _React$useState8[0],\n      setModal = _React$useState8[1];\n\n  var selectedProjectID = useSelector(function (state) {\n    return state.userData.selectedProjectID;\n  });\n\n  var _useMutation = useMutation(USER_CLUSTER_REG, {\n    onCompleted: function onCompleted(data) {\n      var ID = data.userClusterReg.cluster_id;\n      var linkYaml = data.userClusterReg.token;\n      setLink(linkYaml);\n      setID(ID);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createClusterReg = _useMutation2[0];\n\n  var _useLazyQuery = useLazyQuery(GET_CLUSTER, {\n    onCompleted: function onCompleted(data) {\n      if (data && data.getCluster.length !== 0) {\n        data.getCluster.forEach(function (e) {\n          if (id === e.cluster_id) {\n            if (e.is_cluster_confirmed === true) {\n              setOpen(false);\n              setModal(true);\n            }\n          }\n        });\n      }\n    },\n    fetchPolicy: 'cache-and-network',\n    pollInterval: 5000\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 1),\n      getCluster = _useLazyQuery2[0];\n\n  useEffect(function () {\n    var createClusterInput = {\n      cluster_name: Math.random().toString(36).substring(7),\n      description: 'external agent',\n      platform_name: '',\n      project_id: selectedProjectID,\n      cluster_type: 'external',\n      agent_scope: 'cluster',\n      agent_namespace: 'litmus',\n      serviceaccount: '',\n      agent_sa_exists: false,\n      agent_ns_exists: false\n    };\n    createClusterReg({\n      variables: {\n        ClusterInput: createClusterInput\n      }\n    });\n    getCluster({\n      variables: {\n        project_id: selectedProjectID\n      }\n    });\n  }, []);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  return /*#__PURE__*/React.createElement(Scaffold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"Header section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.backBotton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    isDisabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, t('targets.connectHome.connectText'))))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"Connect new target\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.connectTarget,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stepsDiv,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.connectdevice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, t('targets.newTarget.head')), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, t('targets.newTarget.head1')), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, t('targets.newTarget.head2')), /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, t('targets.newTarget.head3'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rightMargin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"icons/targetsC.svg\",\n    alt: \"down arrow icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.rightMargin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, link && /*#__PURE__*/React.createElement(TargetCopy, {\n    yamlLink: link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 22\n    }\n  })), open ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loaderMargin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, t('targets.newTarget.conformation')))) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Unimodal, {\n    open: modal,\n    handleClose: function handleClose() {\n      history.push('/targets');\n    },\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    hasCloseBtn: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"icons/finish.svg\",\n    className: classes.mark,\n    alt: \"mark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, t('ConnectTargets.title'), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }), t('ConnectTargets.head')), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headWorkflow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, t('ConnectTargets.info'), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 42\n    }\n  }), t('ConnectTargets.mainLine')), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutline, {\n    isDisabled: false,\n    handleClick: function handleClick() {\n      history.push('/targets');\n      setOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, t('ConnectTargets.button.buttonBack'))), /*#__PURE__*/React.createElement(ButtonFilled, {\n    \"data-cy\": \"connectTarget\",\n    isPrimary: false,\n    handleClick: function handleClick() {\n      history.push('/create-workflow');\n      setOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, \" \", t('ConnectTargets.button.buttonSchedule'))))))));\n};\n\n_s(ConnectTarget, \"Yi28l7Qb5f7ey4qZ9IP6Tj5tsRk=\", false, function () {\n  return [useStyles, useSelector, useMutation, useLazyQuery, useTranslation];\n});\n\n_c = ConnectTarget;\nexport default ConnectTarget;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectTarget\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/Targets/ConnectTarget/index.tsx"],"names":["Typography","React","useEffect","useTranslation","useMutation","useLazyQuery","useSelector","history","ButtonOutline","TargetCopy","useStyles","Scaffold","USER_CLUSTER_REG","GET_CLUSTER","Loader","ButtonFilled","Unimodal","BackButton","ConnectTarget","classes","useState","open","setOpen","link","setLink","id","setID","modal","setModal","selectedProjectID","state","userData","onCompleted","data","ID","userClusterReg","cluster_id","linkYaml","token","createClusterReg","getCluster","length","forEach","e","is_cluster_confirmed","fetchPolicy","pollInterval","createClusterInput","cluster_name","Math","random","toString","substring","description","platform_name","project_id","cluster_type","agent_scope","agent_namespace","serviceaccount","agent_sa_exists","agent_ns_exists","variables","ClusterInput","t","backBotton","header","mainDiv","connectTarget","stepsDiv","connectdevice","rightMargin","loader","loaderMargin","push","body","mark","heading","headWorkflow","buttonModal"],"mappings":"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","sourcesContent":["import { Typography } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation, useLazyQuery } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport { history } from '../../../redux/configureStore';\nimport ButtonOutline from '../../Button/ButtonOutline';\nimport TargetCopy from '../TargetCopy';\nimport useStyles from './styles';\nimport Scaffold from '../../../containers/layouts/Scaffold';\nimport {\n  CreateClusterInput,\n  CreateClusterInputResponse,\n  Cluster,\n} from '../../../models/graphql/clusterData';\nimport { USER_CLUSTER_REG, GET_CLUSTER } from '../../../graphql';\nimport { RootState } from '../../../redux/reducers';\nimport Loader from '../../Loader';\nimport ButtonFilled from '../../Button/ButtonFilled';\nimport Unimodal from '../../../containers/layouts/Unimodal';\nimport BackButton from '../../Button/BackButton';\n\nconst ConnectTarget = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [link, setLink] = React.useState('');\n  const [id, setID] = React.useState('');\n  const [modal, setModal] = React.useState(false);\n\n  const selectedProjectID = useSelector(\n    (state: RootState) => state.userData.selectedProjectID\n  );\n\n  const [createClusterReg] = useMutation<\n    CreateClusterInputResponse,\n    CreateClusterInput\n  >(USER_CLUSTER_REG, {\n    onCompleted: (data) => {\n      const ID: string = data.userClusterReg.cluster_id;\n      const linkYaml: string = data.userClusterReg.token;\n      setLink(linkYaml);\n      setID(ID);\n    },\n  });\n\n  const [getCluster] = useLazyQuery(GET_CLUSTER, {\n    onCompleted: (data) => {\n      if (data && data.getCluster.length !== 0) {\n        data.getCluster.forEach((e: Cluster) => {\n          if (id === e.cluster_id) {\n            if (e.is_cluster_confirmed === true) {\n              setOpen(false);\n              setModal(true);\n            }\n          }\n        });\n      }\n    },\n    fetchPolicy: 'cache-and-network',\n    pollInterval: 5000,\n  });\n\n  useEffect(() => {\n    const createClusterInput = {\n      cluster_name: Math.random().toString(36).substring(7),\n      description: 'external agent',\n      platform_name: '',\n      project_id: selectedProjectID,\n      cluster_type: 'external',\n      agent_scope: 'cluster',\n      agent_namespace: 'litmus',\n      serviceaccount: '',\n      agent_sa_exists: false,\n      agent_ns_exists: false,\n    };\n    createClusterReg({\n      variables: { ClusterInput: createClusterInput },\n    });\n\n    getCluster({\n      variables: { project_id: selectedProjectID },\n    });\n  }, []);\n\n  const { t } = useTranslation();\n\n  return (\n    <Scaffold>\n      <section className=\"Header section\">\n        <div className={classes.backBotton}>\n          <BackButton isDisabled={false}>\n            <Typography>Back</Typography>\n          </BackButton>\n          <div className={classes.header}>\n            <Typography variant=\"h4\">\n              {t('targets.connectHome.connectText')}\n            </Typography>\n          </div>\n        </div>\n      </section>\n      <section className=\"Connect new target\">\n        <div className={classes.mainDiv}>\n          <div className={classes.connectTarget}>\n            <div className={classes.stepsDiv}>\n              <Typography className={classes.connectdevice}>\n                {t('targets.newTarget.head')}\n              </Typography>\n              <Typography>{t('targets.newTarget.head1')}</Typography>\n              <Typography>{t('targets.newTarget.head2')}</Typography>\n              <Typography>{t('targets.newTarget.head3')}</Typography>\n              {/*\n              <Typography>\n                {t('targets.newTarget.head4')}{' '}\n                <strong>{t('targets.newTarget.head5')}</strong>\n              </Typography>\n              */}\n            </div>\n            <div className={classes.rightMargin}>\n              <img src=\"icons/targetsC.svg\" alt=\"down arrow icon\" />\n            </div>\n          </div>\n          <div className={classes.rightMargin}>\n            {link && <TargetCopy yamlLink={link} />}\n          </div>\n          {open ? (\n            <div className={classes.loader}>\n              <div className={classes.loaderMargin}>\n                <Loader size={20} />\n              </div>\n              <div>\n                <Typography>{t('targets.newTarget.conformation')}</Typography>\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </section>\n      <div>\n        <Unimodal\n          open={modal}\n          handleClose={() => {\n            history.push('/targets');\n          }}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          hasCloseBtn\n        >\n          <div className={classes.body}>\n            <img src=\"icons/finish.svg\" className={classes.mark} alt=\"mark\" />\n            <Typography className={classes.heading}>\n              {t('ConnectTargets.title')}\n              <br />\n              {t('ConnectTargets.head')}\n            </Typography>\n            <Typography className={classes.headWorkflow}>\n              {t('ConnectTargets.info')} <br />\n              {t('ConnectTargets.mainLine')}\n            </Typography>\n            <div className={classes.buttonModal}>\n              <ButtonOutline\n                isDisabled={false}\n                handleClick={() => {\n                  history.push('/targets');\n                  setOpen(false);\n                }}\n              >\n                <div>{t('ConnectTargets.button.buttonBack')}</div>\n              </ButtonOutline>\n\n              <ButtonFilled\n                data-cy=\"connectTarget\"\n                isPrimary={false}\n                handleClick={() => {\n                  history.push('/create-workflow');\n                  setOpen(false);\n                }}\n              >\n                <div> {t('ConnectTargets.button.buttonSchedule')}</div>\n              </ButtonFilled>\n            </div>\n          </div>\n        </Unimodal>\n      </div>\n    </Scaffold>\n  );\n};\nexport default ConnectTarget;\n"]},"metadata":{},"sourceType":"module"}