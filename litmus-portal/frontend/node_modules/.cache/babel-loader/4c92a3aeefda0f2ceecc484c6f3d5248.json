{"ast":null,"code":"var _ = require(\"./lodash\");\n\nvar d3 = require(\"./d3\");\n\nvar layout = require(\"./dagre\").layout;\n\nmodule.exports = render; // This design is based on http://bost.ocks.org/mike/chart/.\n\nfunction render() {\n  var createNodes = require(\"./create-nodes\");\n\n  var createClusters = require(\"./create-clusters\");\n\n  var createEdgeLabels = require(\"./create-edge-labels\");\n\n  var createEdgePaths = require(\"./create-edge-paths\");\n\n  var positionNodes = require(\"./position-nodes\");\n\n  var positionEdgeLabels = require(\"./position-edge-labels\");\n\n  var positionClusters = require(\"./position-clusters\");\n\n  var shapes = require(\"./shapes\");\n\n  var arrows = require(\"./arrows\");\n\n  var fn = function fn(svg, g) {\n    preProcessGraph(g);\n    var outputGroup = createOrSelectGroup(svg, \"output\");\n    var clustersGroup = createOrSelectGroup(outputGroup, \"clusters\");\n    var edgePathsGroup = createOrSelectGroup(outputGroup, \"edgePaths\");\n    var edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, \"edgeLabels\"), g);\n    var nodes = createNodes(createOrSelectGroup(outputGroup, \"nodes\"), g, shapes);\n    layout(g);\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function (value) {\n    if (!arguments.length) return createNodes;\n    createNodes = value;\n    return fn;\n  };\n\n  fn.createClusters = function (value) {\n    if (!arguments.length) return createClusters;\n    createClusters = value;\n    return fn;\n  };\n\n  fn.createEdgeLabels = function (value) {\n    if (!arguments.length) return createEdgeLabels;\n    createEdgeLabels = value;\n    return fn;\n  };\n\n  fn.createEdgePaths = function (value) {\n    if (!arguments.length) return createEdgePaths;\n    createEdgePaths = value;\n    return fn;\n  };\n\n  fn.shapes = function (value) {\n    if (!arguments.length) return shapes;\n    shapes = value;\n    return fn;\n  };\n\n  fn.arrows = function (value) {\n    if (!arguments.length) return arrows;\n    arrows = value;\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: \"rect\"\n};\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: \"normal\",\n  curve: d3.curveLinear\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function (v) {\n    var node = g.node(v);\n\n    if (!_.has(node, \"label\") && !g.children(v).length) {\n      node.label = v;\n    }\n\n    if (_.has(node, \"paddingX\")) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX\n      });\n    }\n\n    if (_.has(node, \"paddingY\")) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY\n      });\n    }\n\n    if (_.has(node, \"padding\")) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each([\"paddingLeft\", \"paddingRight\", \"paddingTop\", \"paddingBottom\"], function (k) {\n      node[k] = Number(node[k]);\n    }); // Save dimensions for restore during post-processing\n\n\n    if (_.has(node, \"width\")) {\n      node._prevWidth = node.width;\n    }\n\n    if (_.has(node, \"height\")) {\n      node._prevHeight = node.height;\n    }\n  });\n  g.edges().forEach(function (e) {\n    var edge = g.edge(e);\n\n    if (!_.has(edge, \"label\")) {\n      edge.label = \"\";\n    }\n\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function (v) {\n    var node = g.node(v); // Restore original dimensions\n\n    if (_.has(node, \"_prevWidth\")) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, \"_prevHeight\")) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select(\"g.\" + name);\n\n  if (selection.empty()) {\n    selection = root.append(\"g\").attr(\"class\", name);\n  }\n\n  return selection;\n}","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/dagre-d3/lib/render.js"],"names":["_","require","d3","layout","module","exports","render","createNodes","createClusters","createEdgeLabels","createEdgePaths","positionNodes","positionEdgeLabels","positionClusters","shapes","arrows","fn","svg","g","preProcessGraph","outputGroup","createOrSelectGroup","clustersGroup","edgePathsGroup","edgeLabels","nodes","clusters","postProcessGraph","value","arguments","length","NODE_DEFAULT_ATTRS","paddingLeft","paddingRight","paddingTop","paddingBottom","rx","ry","shape","EDGE_DEFAULT_ATTRS","arrowhead","curve","curveLinear","forEach","v","node","has","children","label","defaults","paddingX","paddingY","padding","each","k","Number","_prevWidth","width","_prevHeight","height","edges","e","edge","root","name","selection","select","empty","append","attr"],"mappings":"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","sourcesContent":["var _ = require(\"./lodash\");\nvar d3 = require(\"./d3\");\nvar layout = require(\"./dagre\").layout;\n\nmodule.exports = render;\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var createNodes = require(\"./create-nodes\");\n  var createClusters = require(\"./create-clusters\");\n  var createEdgeLabels = require(\"./create-edge-labels\");\n  var createEdgePaths = require(\"./create-edge-paths\");\n  var positionNodes = require(\"./position-nodes\");\n  var positionEdgeLabels = require(\"./position-edge-labels\");\n  var positionClusters = require(\"./position-clusters\");\n  var shapes = require(\"./shapes\");\n  var arrows = require(\"./arrows\");\n\n  var fn = function(svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, \"output\");\n    var clustersGroup = createOrSelectGroup(outputGroup, \"clusters\");\n    var edgePathsGroup = createOrSelectGroup(outputGroup, \"edgePaths\");\n    var edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, \"edgeLabels\"), g);\n    var nodes = createNodes(createOrSelectGroup(outputGroup, \"nodes\"), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function(value) {\n    if (!arguments.length) return createNodes;\n    createNodes = value;\n    return fn;\n  };\n\n  fn.createClusters = function(value) {\n    if (!arguments.length) return createClusters;\n    createClusters = value;\n    return fn;\n  };\n\n  fn.createEdgeLabels = function(value) {\n    if (!arguments.length) return createEdgeLabels;\n    createEdgeLabels = value;\n    return fn;\n  };\n\n  fn.createEdgePaths = function(value) {\n    if (!arguments.length) return createEdgePaths;\n    createEdgePaths = value;\n    return fn;\n  };\n\n  fn.shapes = function(value) {\n    if (!arguments.length) return shapes;\n    shapes = value;\n    return fn;\n  };\n\n  fn.arrows = function(value) {\n    if (!arguments.length) return arrows;\n    arrows = value;\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: \"rect\"\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: \"normal\",\n  curve: d3.curveLinear\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function(v) {\n    var node = g.node(v);\n    if (!_.has(node, \"label\") && !g.children(v).length) { node.label = v; }\n\n    if (_.has(node, \"paddingX\")) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX\n      });\n    }\n\n    if (_.has(node, \"paddingY\")) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY\n      });\n    }\n\n    if (_.has(node, \"padding\")) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each([\"paddingLeft\", \"paddingRight\", \"paddingTop\", \"paddingBottom\"], function(k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, \"width\")) { node._prevWidth = node.width; }\n    if (_.has(node, \"height\")) { node._prevHeight = node.height; }\n  });\n\n  g.edges().forEach(function(e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, \"label\")) { edge.label = \"\"; }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, \"_prevWidth\")) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, \"_prevHeight\")) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select(\"g.\" + name);\n  if (selection.empty()) {\n    selection = root.append(\"g\").attr(\"class\", name);\n  }\n  return selection;\n}\n"]},"metadata":{},"sourceType":"script"}