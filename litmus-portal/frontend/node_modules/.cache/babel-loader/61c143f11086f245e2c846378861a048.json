{"ast":null,"code":"var _ = require(\"./lodash\"); // Public utility functions\n\n\nmodule.exports = {\n  isSubgraph: isSubgraph,\n  edgeToId: edgeToId,\n  applyStyle: applyStyle,\n  applyClass: applyClass,\n  applyTransition: applyTransition\n};\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\n\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + \":\" + escapeId(e.w) + \":\" + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\n\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, \"\\\\:\") : \"\";\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom.attr(\"class\", classFn).attr(\"class\", otherClasses + \" \" + dom.attr(\"class\"));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/dagre-d3/lib/util.js"],"names":["_","require","module","exports","isSubgraph","edgeToId","applyStyle","applyClass","applyTransition","g","v","children","length","e","escapeId","w","name","ID_DELIM","str","String","replace","dom","styleFn","attr","classFn","otherClasses","selection","graph","isPlainObject","transition","isFunction"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,UAAD,CAAf,C,CAEA;;;AACAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,UAAU,EAAEA,UADG;AAEfC,EAAAA,QAAQ,EAAEA,QAFK;AAGfC,EAAAA,UAAU,EAAEA,UAHG;AAIfC,EAAAA,UAAU,EAAEA,UAJG;AAKfC,EAAAA,eAAe,EAAEA;AALF,CAAjB;AAQA;AACA;AACA;AACA;;AACA,SAASJ,UAAT,CAAoBK,CAApB,EAAuBC,CAAvB,EAA0B;AACxB,SAAO,CAAC,CAACD,CAAC,CAACE,QAAF,CAAWD,CAAX,EAAcE,MAAvB;AACD;;AAED,SAASP,QAAT,CAAkBQ,CAAlB,EAAqB;AACnB,SAAOC,QAAQ,CAACD,CAAC,CAACH,CAAH,CAAR,GAAgB,GAAhB,GAAsBI,QAAQ,CAACD,CAAC,CAACE,CAAH,CAA9B,GAAsC,GAAtC,GAA4CD,QAAQ,CAACD,CAAC,CAACG,IAAH,CAA3D;AACD;;AAED,IAAIC,QAAQ,GAAG,IAAf;;AACA,SAASH,QAAT,CAAkBI,GAAlB,EAAuB;AACrB,SAAOA,GAAG,GAAGC,MAAM,CAACD,GAAD,CAAN,CAAYE,OAAZ,CAAoBH,QAApB,EAA8B,KAA9B,CAAH,GAA0C,EAApD;AACD;;AAED,SAASX,UAAT,CAAoBe,GAApB,EAAyBC,OAAzB,EAAkC;AAChC,MAAIA,OAAJ,EAAa;AACXD,IAAAA,GAAG,CAACE,IAAJ,CAAS,OAAT,EAAkBD,OAAlB;AACD;AACF;;AAED,SAASf,UAAT,CAAoBc,GAApB,EAAyBG,OAAzB,EAAkCC,YAAlC,EAAgD;AAC9C,MAAID,OAAJ,EAAa;AACXH,IAAAA,GAAG,CACAE,IADH,CACQ,OADR,EACiBC,OADjB,EAEGD,IAFH,CAEQ,OAFR,EAEiBE,YAAY,GAAG,GAAf,GAAqBJ,GAAG,CAACE,IAAJ,CAAS,OAAT,CAFtC;AAGD;AACF;;AAED,SAASf,eAAT,CAAyBkB,SAAzB,EAAoCjB,CAApC,EAAuC;AACrC,MAAIkB,KAAK,GAAGlB,CAAC,CAACkB,KAAF,EAAZ;;AAEA,MAAI3B,CAAC,CAAC4B,aAAF,CAAgBD,KAAhB,CAAJ,EAA4B;AAC1B,QAAIE,UAAU,GAAGF,KAAK,CAACE,UAAvB;;AACA,QAAI7B,CAAC,CAAC8B,UAAF,CAAaD,UAAb,CAAJ,EAA8B;AAC5B,aAAOA,UAAU,CAACH,SAAD,CAAjB;AACD;AACF;;AAED,SAAOA,SAAP;AACD","sourcesContent":["var _ = require(\"./lodash\");\n\n// Public utility functions\nmodule.exports = {\n  isSubgraph: isSubgraph,\n  edgeToId: edgeToId,\n  applyStyle: applyStyle,\n  applyClass: applyClass,\n  applyTransition: applyTransition\n};\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + \":\" + escapeId(e.w) + \":\" + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, \"\\\\:\") : \"\";\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom\n      .attr(\"class\", classFn)\n      .attr(\"class\", otherClasses + \" \" + dom.attr(\"class\"));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n"]},"metadata":{},"sourceType":"script"}