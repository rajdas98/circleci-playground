{"ast":null,"code":"import { safeLoadAll } from 'js-yaml';\nexport var parseYamlValidations = function parseYamlValidations(yamlInput, classes) {\n  var parsedValidations = {\n    markers: [],\n    annotations: []\n  };\n\n  try {\n    safeLoadAll(yamlInput);\n  } catch (e) {\n    var row = e.mark && e.mark.line ? e.mark.line : 0;\n    var col = e.mark && e.mark.column ? e.mark.column : 0;\n    var message = e.message ? e.message : '';\n    parsedValidations.markers.push({\n      startRow: row,\n      startCol: 0,\n      endRow: row + 1,\n      endCol: 0,\n      className: classes.validationError,\n      type: 'fullLine'\n    });\n    parsedValidations.annotations.push({\n      row,\n      column: col,\n      type: 'error',\n      text: message\n    });\n  }\n\n  return parsedValidations;\n};","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/YamlEditor/Validations.ts"],"names":["safeLoadAll","parseYamlValidations","yamlInput","classes","parsedValidations","markers","annotations","e","row","mark","line","col","column","message","push","startRow","startCol","endRow","endCol","className","validationError","type","text"],"mappings":"AACA,SAASA,WAAT,QAA4B,SAA5B;AAOA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAClCC,SADkC,EAElCC,OAFkC,EAGf;AACnB,MAAMC,iBAAiC,GAAG;AACxCC,IAAAA,OAAO,EAAE,EAD+B;AAExCC,IAAAA,WAAW,EAAE;AAF2B,GAA1C;;AAIA,MAAI;AACFN,IAAAA,WAAW,CAACE,SAAD,CAAX;AACD,GAFD,CAEE,OAAOK,CAAP,EAAU;AACV,QAAMC,GAAG,GAAGD,CAAC,CAACE,IAAF,IAAUF,CAAC,CAACE,IAAF,CAAOC,IAAjB,GAAwBH,CAAC,CAACE,IAAF,CAAOC,IAA/B,GAAsC,CAAlD;AACA,QAAMC,GAAG,GAAGJ,CAAC,CAACE,IAAF,IAAUF,CAAC,CAACE,IAAF,CAAOG,MAAjB,GAA0BL,CAAC,CAACE,IAAF,CAAOG,MAAjC,GAA0C,CAAtD;AACA,QAAMC,OAAO,GAAGN,CAAC,CAACM,OAAF,GAAYN,CAAC,CAACM,OAAd,GAAwB,EAAxC;AACAT,IAAAA,iBAAiB,CAACC,OAAlB,CAA0BS,IAA1B,CAA+B;AAC7BC,MAAAA,QAAQ,EAAEP,GADmB;AAE7BQ,MAAAA,QAAQ,EAAE,CAFmB;AAG7BC,MAAAA,MAAM,EAAET,GAAG,GAAG,CAHe;AAI7BU,MAAAA,MAAM,EAAE,CAJqB;AAK7BC,MAAAA,SAAS,EAAEhB,OAAO,CAACiB,eALU;AAM7BC,MAAAA,IAAI,EAAE;AANuB,KAA/B;AAQAjB,IAAAA,iBAAiB,CAACE,WAAlB,CAA8BQ,IAA9B,CAAmC;AACjCN,MAAAA,GADiC;AAEjCI,MAAAA,MAAM,EAAED,GAFyB;AAGjCU,MAAAA,IAAI,EAAE,OAH2B;AAIjCC,MAAAA,IAAI,EAAET;AAJ2B,KAAnC;AAMD;;AACD,SAAOT,iBAAP;AACD,CA9BM","sourcesContent":["import { IAnnotation, IMarker } from 'react-ace';\nimport { safeLoadAll } from 'js-yaml';\n\nexport interface AceValidations {\n  markers: Array<IMarker>;\n  annotations: Array<IAnnotation>;\n}\n\nexport const parseYamlValidations = (\n  yamlInput: string,\n  classes: any\n): AceValidations => {\n  const parsedValidations: AceValidations = {\n    markers: [],\n    annotations: [],\n  };\n  try {\n    safeLoadAll(yamlInput);\n  } catch (e) {\n    const row = e.mark && e.mark.line ? e.mark.line : 0;\n    const col = e.mark && e.mark.column ? e.mark.column : 0;\n    const message = e.message ? e.message : '';\n    parsedValidations.markers.push({\n      startRow: row,\n      startCol: 0,\n      endRow: row + 1,\n      endCol: 0,\n      className: classes.validationError,\n      type: 'fullLine',\n    });\n    parsedValidations.annotations.push({\n      row,\n      column: col,\n      type: 'error',\n      text: message,\n    });\n  }\n  return parsedValidations;\n};\n"]},"metadata":{},"sourceType":"module"}