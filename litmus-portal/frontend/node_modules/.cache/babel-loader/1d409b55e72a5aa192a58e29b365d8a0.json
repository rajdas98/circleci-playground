{"ast":null,"code":"import _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/Header/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport { Box, Divider } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { GET_USER } from '../../graphql';\nimport useActions from '../../redux/actions';\nimport * as UserActions from '../../redux/actions/user';\nimport configureStore, { history } from '../../redux/configureStore';\nimport CustomBreadCrumbs from '../BreadCrumbs';\nimport ProfileDropdownSection from './ProfileDropdownSection';\nimport useStyles from './styles';\n\nvar Header = function Header() {\n  _s();\n\n  var _data$getUser$name, _data$getUser$email, _data$getUser$project;\n\n  var classes = useStyles();\n  var userData = useSelector(function (state) {\n    return state.userData;\n  });\n  var user = useActions(UserActions); // Use the persistor object\n\n  var _configureStore = configureStore(),\n      persistor = _configureStore.persistor; // Query to get user details\n\n\n  var _useQuery = useQuery(GET_USER, {\n    variables: {\n      username: userData.username\n    }\n  }),\n      data = _useQuery.data;\n\n  var name = (_data$getUser$name = data === null || data === void 0 ? void 0 : data.getUser.name) !== null && _data$getUser$name !== void 0 ? _data$getUser$name : '';\n  var email = (_data$getUser$email = data === null || data === void 0 ? void 0 : data.getUser.email) !== null && _data$getUser$email !== void 0 ? _data$getUser$email : '';\n  var projects = (_data$getUser$project = data === null || data === void 0 ? void 0 : data.getUser.projects) !== null && _data$getUser$project !== void 0 ? _data$getUser$project : [];\n\n  var _useState = useState({\n    selectedProjectID: userData.selectedProjectID,\n    selectedProjectName: userData.selectedProjectName,\n    selectedUserRole: userData.userRole\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedProjectDetails = _useState2[0],\n      setSelectedProjectDetails = _useState2[1];\n\n  var setSelectedProjectID = function setSelectedProjectID(selectedProjectID) {\n    projects.forEach(function (project) {\n      if (selectedProjectID === project.id) {\n        var memberList = project.members;\n        memberList.forEach(function (member) {\n          if (member.role === 'Owner') {\n            user.updateUserDetails({\n              selectedProjectOwner: member.user_name\n            });\n          }\n\n          if (member.user_name === (data === null || data === void 0 ? void 0 : data.getUser.username)) {\n            user.updateUserDetails({\n              selectedProjectID,\n              userRole: member.role,\n              selectedProjectName: project.name\n            }); // Flush data to persistor immediately\n\n            persistor.flush();\n            setSelectedProjectDetails({\n              selectedProjectID,\n              selectedUserRole: member.role,\n              selectedProjectName: project.name\n            });\n\n            if (member.role !== 'Owner') {\n              history.push('/');\n            }\n          }\n        });\n      }\n    });\n  };\n\n  useEffect(function () {\n    setSelectedProjectDetails({\n      selectedProjectID: userData.selectedProjectID,\n      selectedProjectName: userData.selectedProjectName,\n      selectedUserRole: userData.userRole\n    });\n  }, [userData.selectedProjectID]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"headerComponent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"relative\",\n    className: classes.appBar,\n    elevation: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    p: 1,\n    className: classes.headerFlex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    p: 1,\n    flexGrow: 8,\n    className: classes.headerFlexExtraPadded,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CustomBreadCrumbs, {\n    location: useLocation().pathname,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    p: 1,\n    className: classes.headerFlexPadded,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    p: 1,\n    flexGrow: 1,\n    className: classes.headerFlexProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ProfileDropdownSection, {\n    name: name,\n    email: email,\n    username: userData.username,\n    selectedProjectID: selectedProjectDetails.selectedProjectID,\n    CallbackToSetSelectedProjectID: setSelectedProjectID,\n    selectedProjectName: selectedProjectDetails.selectedProjectName,\n    userRole: selectedProjectDetails.selectedUserRole,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Header, \"XiJre1Mvm/9Ba3Y/M/eTDvtu2XM=\", false, function () {\n  return [useStyles, useSelector, useActions, useQuery, useLocation];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/Header/index.tsx"],"names":["useQuery","Box","Divider","AppBar","Toolbar","React","useEffect","useState","useSelector","useLocation","GET_USER","useActions","UserActions","configureStore","history","CustomBreadCrumbs","ProfileDropdownSection","useStyles","Header","classes","userData","state","user","persistor","variables","username","data","name","getUser","email","projects","selectedProjectID","selectedProjectName","selectedUserRole","userRole","selectedProjectDetails","setSelectedProjectDetails","setSelectedProjectID","forEach","project","id","memberList","members","member","role","updateUserDetails","selectedProjectOwner","user_name","flush","push","appBar","width","headerFlex","headerFlexExtraPadded","pathname","headerFlexPadded","headerFlexProfile"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client';\nimport { Box, Divider } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { GET_USER } from '../../graphql';\nimport {\n  CurrentUserDedtailsVars,\n  CurrentUserDetails,\n  Member,\n  Project,\n} from '../../models/graphql/user';\nimport useActions from '../../redux/actions';\nimport * as UserActions from '../../redux/actions/user';\nimport configureStore, { history } from '../../redux/configureStore';\nimport { RootState } from '../../redux/reducers';\nimport CustomBreadCrumbs from '../BreadCrumbs';\nimport ProfileDropdownSection from './ProfileDropdownSection';\nimport useStyles from './styles';\n\ninterface SelectedProjectDetails {\n  selectedProjectID: string;\n  selectedProjectName: string;\n  selectedUserRole: string;\n}\n\nconst Header: React.FC = () => {\n  const classes = useStyles();\n  const userData = useSelector((state: RootState) => state.userData);\n  const user = useActions(UserActions);\n  // Use the persistor object\n  const { persistor } = configureStore();\n\n  // Query to get user details\n  const { data } = useQuery<CurrentUserDetails, CurrentUserDedtailsVars>(\n    GET_USER,\n    { variables: { username: userData.username } }\n  );\n  const name: string = data?.getUser.name ?? '';\n  const email: string = data?.getUser.email ?? '';\n  const projects: Project[] = data?.getUser.projects ?? [];\n\n  const [selectedProjectDetails, setSelectedProjectDetails] = useState<\n    SelectedProjectDetails\n  >({\n    selectedProjectID: userData.selectedProjectID,\n    selectedProjectName: userData.selectedProjectName,\n    selectedUserRole: userData.userRole,\n  });\n\n  const setSelectedProjectID = (selectedProjectID: string) => {\n    projects.forEach((project) => {\n      if (selectedProjectID === project.id) {\n        const memberList: Member[] = project.members;\n\n        memberList.forEach((member) => {\n          if (member.role === 'Owner') {\n            user.updateUserDetails({\n              selectedProjectOwner: member.user_name,\n            });\n          }\n\n          if (member.user_name === data?.getUser.username) {\n            user.updateUserDetails({\n              selectedProjectID,\n              userRole: member.role,\n              selectedProjectName: project.name,\n            });\n            // Flush data to persistor immediately\n            persistor.flush();\n\n            setSelectedProjectDetails({\n              selectedProjectID,\n              selectedUserRole: member.role,\n              selectedProjectName: project.name,\n            });\n\n            if (member.role !== 'Owner') {\n              history.push('/');\n            }\n          }\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setSelectedProjectDetails({\n      selectedProjectID: userData.selectedProjectID,\n      selectedProjectName: userData.selectedProjectName,\n      selectedUserRole: userData.userRole,\n    });\n  }, [userData.selectedProjectID]);\n\n  return (\n    <div data-cy=\"headerComponent\">\n      <AppBar position=\"relative\" className={classes.appBar} elevation={0}>\n        <Toolbar>\n          <div style={{ width: '100%' }}>\n            <Box display=\"flex\" p={1} className={classes.headerFlex}>\n              <Box p={1} flexGrow={8} className={classes.headerFlexExtraPadded}>\n                <CustomBreadCrumbs location={useLocation().pathname} />\n              </Box>\n              <Box p={1} className={classes.headerFlexPadded}>\n                {/*              <NotificationsDropdown\n                  count={`${countOfMessages}`}\n                  messages={messages}\n                  CallbackToHeaderOnDeleteNotification={deleteNotification}\n                />\n  */}\n              </Box>\n              <Box p={1} flexGrow={1} className={classes.headerFlexProfile}>\n                <ProfileDropdownSection\n                  name={name}\n                  email={email}\n                  username={userData.username}\n                  selectedProjectID={selectedProjectDetails.selectedProjectID}\n                  CallbackToSetSelectedProjectID={setSelectedProjectID}\n                  selectedProjectName={\n                    selectedProjectDetails.selectedProjectName\n                  }\n                  userRole={selectedProjectDetails.selectedUserRole}\n                />\n              </Box>\n            </Box>\n          </div>\n        </Toolbar>\n        <Divider />\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}