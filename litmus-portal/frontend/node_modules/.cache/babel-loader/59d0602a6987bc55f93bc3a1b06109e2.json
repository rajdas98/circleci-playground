{"ast":null,"code":"import _slicedToArray from \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/Header/ProfileDropdownItems.tsx\";\n\n/* eslint-disable react/no-array-index-key */\nimport { useQuery } from '@apollo/client';\nimport { Avatar, Button, Divider, List, ListItem, ListItemText, Popover, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport config from '../../config';\nimport { GET_USER } from '../../graphql';\nimport useActions from '../../redux/actions';\nimport * as TabActions from '../../redux/actions/tabs';\nimport * as UserActions from '../../redux/actions/user';\nimport configureStore, { history } from '../../redux/configureStore';\nimport getToken from '../../utils/getToken';\nimport userAvatar from '../../utils/user';\nimport ProjectListItem from './ProjectListItem';\nimport useStyles from './styles';\n\nvar ProfileInfoDropdownItems = function ProfileInfoDropdownItems(_ref) {\n  var _data$getUser$project;\n\n  var anchorEl = _ref.anchorEl,\n      isOpen = _ref.isOpen,\n      onClose = _ref.onClose,\n      name = _ref.name,\n      email = _ref.email,\n      username = _ref.username,\n      selectedProjectID = _ref.selectedProjectID,\n      CallbackToSetSelectedProjectIDOnProfileDropdown = _ref.CallbackToSetSelectedProjectIDOnProfileDropdown;\n  var classes = useStyles();\n  var user = useActions(UserActions);\n  var tabs = useActions(TabActions);\n  var id = isOpen ? 'profile-popover' : undefined;\n  var initials = name ? userAvatar(name) : userAvatar(name);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // Query to get user details\n\n\n  var _useQuery = useQuery(GET_USER, {\n    variables: {\n      username\n    }\n  }),\n      data = _useQuery.data;\n\n  var projects = (_data$getUser$project = data === null || data === void 0 ? void 0 : data.getUser.projects) !== null && _data$getUser$project !== void 0 ? _data$getUser$project : [];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      switchableProjects = _useState2[0],\n      setSwitchableProjects = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loggedOut = _useState4[0],\n      doLogout = _useState4[1];\n\n  var userData = useSelector(function (state) {\n    return state.userData;\n  }); // Use the persistor object\n\n  var _configureStore = configureStore(),\n      persistor = _configureStore.persistor;\n\n  var logOut = function logOut() {\n    tabs.changeWorkflowsTabs(0);\n    tabs.changeSettingsTabs(0);\n    doLogout(true);\n    fetch(\"\".concat(config.auth.url, \"/logout\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \".concat(getToken())\n      }\n    }).then(function (response) {\n      response.json();\n    }).catch(function (err) {\n      console.error(err);\n    });\n    user.userLogout(); // Clear data from persistor\n\n    persistor.purge();\n  };\n\n  var CallbackFromProjectListItem = function CallbackFromProjectListItem(selectedProjectIDFromList) {\n    CallbackToSetSelectedProjectIDOnProfileDropdown(selectedProjectIDFromList);\n  };\n\n  useEffect(function () {\n    var projectsAvailableForSwitching = [];\n    projects.forEach(function (project) {\n      var memberList = project.members;\n      memberList.forEach(function (member) {\n        if (member.user_name === username && member.invitation === 'Accepted') {\n          projectsAvailableForSwitching.push(project);\n        }\n      });\n    });\n    setSwitchableProjects(projectsAvailableForSwitching);\n  }, [data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popover, {\n    id: id,\n    open: isOpen,\n    anchorEl: anchorEl,\n    onClose: onClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    classes: {\n      paper: classes.popover\n    },\n    className: classes.popoverProfileAdjust,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, name ? /*#__PURE__*/React.createElement(Avatar, {\n    alt: initials,\n    className: classes.avatarBackground,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, initials) : /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"User\",\n    className: classes.avatarBackground,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.userInfo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"name-header\",\n    className: classes.userName,\n    component: \"span\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, name), /*#__PURE__*/React.createElement(Typography, {\n    \"data-cy\": \"email-header\",\n    className: classes.userEmail,\n    variant: \"body1\",\n    component: \"span\",\n    color: \"textSecondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, email), userData.userRole === 'Owner' && /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.buttonEditProfile,\n    onClick: function onClick() {\n      tabs.changeSettingsTabs(0);\n      history.push('/settings');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, t('header.profileDropdown.editProfile')), /*#__PURE__*/React.createElement(Button, {\n    \"data-cy\": \"logout\",\n    disabled: loggedOut,\n    size: \"small\",\n    onClick: logOut,\n    className: classes.buttonSignout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, t('header.profileDropdown.logOut')))), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.dividerTop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    className: classes.tabContainerProfileDropdownItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, switchableProjects.length === 0 ? /*#__PURE__*/React.createElement(ListItem, {\n    \"data-cy\": \"project\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, t('header.profileDropdown.noProjects'))) : switchableProjects.map(function (element, index) {\n    return /*#__PURE__*/React.createElement(ProjectListItem, {\n      key: index,\n      project: element,\n      divider: index !== switchableProjects.length - 1,\n      selectedProjectID: selectedProjectID,\n      callbackToSetActiveProjectID: CallbackFromProjectListItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    });\n  }))));\n};\n\nexport default ProfileInfoDropdownItems;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/components/Header/ProfileDropdownItems.tsx"],"names":["useQuery","Avatar","Button","Divider","List","ListItem","ListItemText","Popover","Typography","React","useEffect","useState","useTranslation","useSelector","config","GET_USER","useActions","TabActions","UserActions","configureStore","history","getToken","userAvatar","ProjectListItem","useStyles","ProfileInfoDropdownItems","anchorEl","isOpen","onClose","name","email","username","selectedProjectID","CallbackToSetSelectedProjectIDOnProfileDropdown","classes","user","tabs","id","undefined","initials","t","variables","data","projects","getUser","switchableProjects","setSwitchableProjects","loggedOut","doLogout","userData","state","persistor","logOut","changeWorkflowsTabs","changeSettingsTabs","fetch","auth","url","method","headers","Authorization","then","response","json","catch","err","console","error","userLogout","purge","CallbackFromProjectListItem","selectedProjectIDFromList","projectsAvailableForSwitching","forEach","project","memberList","members","member","user_name","invitation","push","vertical","horizontal","paper","popover","popoverProfileAdjust","container","avatarBackground","userInfo","userName","userEmail","userRole","buttonEditProfile","buttonSignout","dividerTop","tabContainerProfileDropdownItem","length","map","element","index"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport { useQuery } from '@apollo/client';\nimport {\n  Avatar,\n  Button,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  Popover,\n  Typography,\n} from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport config from '../../config';\nimport { GET_USER } from '../../graphql';\nimport {\n  CurrentUserDedtailsVars,\n  CurrentUserDetails,\n  Member,\n  Project,\n} from '../../models/graphql/user';\nimport { ProjectsCallBackType } from '../../models/header';\nimport useActions from '../../redux/actions';\nimport * as TabActions from '../../redux/actions/tabs';\nimport * as UserActions from '../../redux/actions/user';\nimport configureStore, { history } from '../../redux/configureStore';\nimport { RootState } from '../../redux/reducers';\nimport getToken from '../../utils/getToken';\nimport userAvatar from '../../utils/user';\nimport ProjectListItem from './ProjectListItem';\nimport useStyles from './styles';\n\ninterface ProfileInfoDropdownItemProps {\n  anchorEl: HTMLElement;\n  isOpen: boolean;\n  onClose: () => void;\n  name: string;\n  email: string;\n  username: string;\n  selectedProjectID: string;\n  CallbackToSetSelectedProjectIDOnProfileDropdown: ProjectsCallBackType;\n}\n\nconst ProfileInfoDropdownItems: React.FC<ProfileInfoDropdownItemProps> = ({\n  anchorEl,\n  isOpen,\n  onClose,\n  name,\n  email,\n  username,\n  selectedProjectID,\n  CallbackToSetSelectedProjectIDOnProfileDropdown,\n}) => {\n  const classes = useStyles();\n  const user = useActions(UserActions);\n  const tabs = useActions(TabActions);\n  const id = isOpen ? 'profile-popover' : undefined;\n  const initials = name ? userAvatar(name) : userAvatar(name);\n  const { t } = useTranslation();\n\n  // Query to get user details\n  const { data } = useQuery<CurrentUserDetails, CurrentUserDedtailsVars>(\n    GET_USER,\n    { variables: { username } }\n  );\n  const projects = data?.getUser.projects ?? [];\n  const [switchableProjects, setSwitchableProjects] = useState<Project[]>([]);\n  const [loggedOut, doLogout] = useState(false);\n  const userData = useSelector((state: RootState) => state.userData);\n  // Use the persistor object\n  const { persistor } = configureStore();\n\n  const logOut = () => {\n    tabs.changeWorkflowsTabs(0);\n    tabs.changeSettingsTabs(0);\n    doLogout(true);\n\n    fetch(`${config.auth.url}/logout`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${getToken()}`,\n      },\n    })\n      .then((response) => {\n        response.json();\n      })\n\n      .catch((err) => {\n        console.error(err);\n      });\n    user.userLogout();\n    // Clear data from persistor\n    persistor.purge();\n  };\n\n  const CallbackFromProjectListItem = (selectedProjectIDFromList: string) => {\n    CallbackToSetSelectedProjectIDOnProfileDropdown(selectedProjectIDFromList);\n  };\n\n  useEffect(() => {\n    const projectsAvailableForSwitching: Project[] = [];\n    projects.forEach((project) => {\n      const memberList: Member[] = project.members;\n\n      memberList.forEach((member) => {\n        if (member.user_name === username && member.invitation === 'Accepted') {\n          projectsAvailableForSwitching.push(project);\n        }\n      });\n    });\n    setSwitchableProjects(projectsAvailableForSwitching);\n  }, [data]);\n\n  return (\n    <div>\n      <Popover\n        id={id}\n        open={isOpen}\n        anchorEl={anchorEl}\n        onClose={onClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        classes={{\n          paper: classes.popover,\n        }}\n        className={classes.popoverProfileAdjust}\n      >\n        <div className={classes.container}>\n          {name ? (\n            <Avatar alt={initials} className={classes.avatarBackground}>\n              {initials}\n            </Avatar>\n          ) : (\n            <Avatar alt=\"User\" className={classes.avatarBackground} />\n          )}\n\n          <div className={classes.userInfo}>\n            <Typography\n              data-cy=\"name-header\"\n              className={classes.userName}\n              component=\"span\"\n            >\n              {name}\n            </Typography>\n            <Typography\n              data-cy=\"email-header\"\n              className={classes.userEmail}\n              variant=\"body1\"\n              component=\"span\"\n              color=\"textSecondary\"\n            >\n              {email}\n            </Typography>\n\n            {userData.userRole === 'Owner' && (\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                className={classes.buttonEditProfile}\n                onClick={() => {\n                  tabs.changeSettingsTabs(0);\n                  history.push('/settings');\n                }}\n              >\n                {t('header.profileDropdown.editProfile')}\n              </Button>\n            )}\n\n            <Button\n              data-cy=\"logout\"\n              disabled={loggedOut}\n              size=\"small\"\n              onClick={logOut}\n              className={classes.buttonSignout}\n            >\n              {t('header.profileDropdown.logOut')}\n            </Button>\n          </div>\n        </div>\n        <Divider className={classes.dividerTop} />\n        <List dense className={classes.tabContainerProfileDropdownItem}>\n          {switchableProjects.length === 0 ? (\n            <ListItem data-cy=\"project\">\n              <ListItemText>\n                {t('header.profileDropdown.noProjects')}\n              </ListItemText>\n            </ListItem>\n          ) : (\n            switchableProjects.map((element: Project, index: number) => (\n              <ProjectListItem\n                key={index}\n                project={element}\n                divider={index !== switchableProjects.length - 1}\n                selectedProjectID={selectedProjectID}\n                callbackToSetActiveProjectID={CallbackFromProjectListItem}\n              />\n            ))\n          )}\n        </List>\n      </Popover>\n    </div>\n  );\n};\n\nexport default ProfileInfoDropdownItems;\n"]},"metadata":{},"sourceType":"module"}