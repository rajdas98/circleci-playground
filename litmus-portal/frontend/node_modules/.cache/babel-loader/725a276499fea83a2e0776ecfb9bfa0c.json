{"ast":null,"code":"import _toConsumableArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/raj/.nvm/versions/node/v12.18.2/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/Settings/TeammingTab/InviteNew/Invite/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMutation, useQuery } from '@apollo/client/react/hooks';\nimport { Input, InputAdornment, Table, TableCell, TableContainer, TableRow, Toolbar, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport ButtonFilled from '../../../../../components/Button/ButtonFilled';\nimport Loader from '../../../../../components/Loader';\nimport { ALL_USERS, GET_USER, SEND_INVITE } from '../../../../../graphql';\nimport useStyles from './styles';\nimport TableData from './TableData';\n\nvar Invite = function Invite(_ref) {\n  _s();\n\n  var handleModal = _ref.handleModal;\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t; // for response data\n\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      rows = _useState2[0],\n      setRows = _useState2[1];\n\n  var userData = useSelector(function (state) {\n    return state.userData;\n  }); // for setting the role of the user while sending invitation\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      roles = _useState4[0],\n      setRoles = _useState4[1]; // Array to store the list of selected users to be invited\n\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selected = _React$useState2[0],\n      setSelected = _React$useState2[1]; // Sets the user role while inviting\n\n\n  var setUserRole = function setUserRole(username, role) {\n    setSelected(selected.map(function (r) {\n      return r.user_name === username ? _objectSpread(_objectSpread({}, r), {}, {\n        role\n      }) : r;\n    }));\n\n    if (roles.find(function (ele) {\n      return ele.username === username;\n    })) {\n      setRoles(roles.map(function (r) {\n        return r.username === username ? {\n          username,\n          role\n        } : r;\n      }));\n    } else {\n      setRoles([].concat(_toConsumableArray(roles), [{\n        username,\n        role\n      }]));\n    }\n  }; // query for getting all the data for the logged in user\n\n\n  var _useQuery = useQuery(GET_USER, {\n    variables: {\n      username: userData.username\n    },\n    fetchPolicy: 'cache-and-network'\n  }),\n      dataB = _useQuery.data; // query to list all the users\n\n\n  var memberList = new Map();\n\n  var _useQuery2 = useQuery(ALL_USERS, {\n    skip: !dataB,\n    onCompleted: function onCompleted() {\n      var users = [];\n\n      if (dataA !== undefined) {\n        if ((dataB === null || dataB === void 0 ? void 0 : dataB.getUser.username) === userData.username) {\n          var projectList = dataB === null || dataB === void 0 ? void 0 : dataB.getUser.projects;\n          projectList.forEach(function (project) {\n            return project.id === userData.selectedProjectID && project.members.map(function (member) {\n              return member.invitation !== 'Declined' && memberList.set(member.user_name, 1);\n            });\n          }); // login for displaying only those users who are not the part of team\n\n          dataA.users.map(function (data) {\n            return !memberList.has(data.username) && users.push(data);\n          });\n        }\n\n        setRows(users);\n      }\n    }\n  }),\n      dataA = _useQuery2.data; // mutation to send invitation to selected users\n\n\n  var _useMutation = useMutation(SEND_INVITE, {\n    refetchQueries: [{\n      query: GET_USER,\n      variables: {\n        username: userData.username\n      }\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      SendInvite = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      errorB = _useMutation2$.error,\n      loadingB = _useMutation2$.loading; // Checks if the user the already selected or not\n\n\n  var isSelected = function isSelected(user) {\n    var usernames = new Map();\n    selected.map(function (el) {\n      return usernames.set(el.user_name, el.role);\n    });\n    return usernames.has(user.username);\n  };\n\n  var handleClick = function handleClick(event, user) {\n    var names = selected.map(function (el) {\n      return el.user_name;\n    });\n    var selectedIndex = names.indexOf(user.username);\n    var newSelected = [];\n\n    if (selectedIndex === -1) {\n      var userrole = function userrole() {\n        var r = roles.find(function (ele) {\n          return ele.username === user.username;\n        });\n\n        if (r) {\n          return r.role;\n        }\n\n        return 'Viewer';\n      };\n\n      newSelected = newSelected.concat(selected, {\n        user_name: user.username,\n        role: userrole(),\n        project_id: 'abc'\n      });\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  }; // States for filters\n\n\n  var _useState5 = useState({\n    search: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filters = _useState6[0],\n      setFilters = _useState6[1];\n\n  var filteredData = rows.filter(function (dataRow) {\n    return dataRow === null || dataRow === void 0 ? void 0 : dataRow.username.toLowerCase().includes(filters.search.toLowerCase());\n  });\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showsuccess = _useState8[0],\n      setShowsuccess = _useState8[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }, showsuccess ? /*#__PURE__*/React.createElement(React.Fragment, null, loadingB ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, errorB ? /*#__PURE__*/React.createElement(Typography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, errorB.message) : /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"inviteNewMemberSuccessModal\",\n    className: classes.body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./icons/checkmark.svg\",\n    alt: \"checkmark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, t('settings.teamingTab.inviteNew.invite.successHeader'), ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 23\n    }\n  }, t('settings.teamingTab.inviteNew.invite.successHeaderStrong')))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.textSecond,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.typoSub,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, t('settings.teamingTab.inviteNew.invite.info'))), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"inviteNewMemberSuccessModalDoneButton\",\n    className: classes.buttonModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    isPrimary: true,\n    isDisabled: false,\n    handleClick: handleModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, t('settings.teamingTab.inviteNew.invite.button.done'))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.Header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, t('settings.teamingTab.inviteNew.invite.header'), ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, t('settings.teamingTab.inviteNew.invite.headerStrong'))), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"inviteNewMemberSearch\",\n    className: classes.inviteSomeone,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"input-with-icon-textfield\",\n    placeholder: t('settings.teamingTab.inviteNew.invite.label.someone'),\n    onChange: function onChange(e) {\n      setFilters({\n        search: e.target.value\n      });\n    },\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"./icons/user-invite.svg\",\n      alt: \"user\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 23\n      }\n    })),\n    disableUnderline: true,\n    inputProps: {\n      style: {\n        color: theme.palette.personalDetailsBodyColor,\n        maxWidth: '31.75rem',\n        minWidth: '31.375rem'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-cy\": \"inviteNewMemberSendInviteButton\",\n    className: classes.InviteBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonFilled, {\n    isPrimary: true,\n    isDisabled: !selected.length,\n    handleClick: function handleClick() {\n      setShowsuccess(true);\n      selected.map(function (s) {\n        return !errorB && !loadingB && SendInvite({\n          variables: {\n            member: {\n              project_id: userData.selectedProjectID,\n              user_name: s.user_name,\n              role: s.role\n            }\n          }\n        });\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }, t('settings.teamingTab.inviteNew.invite.button.send')))))), /*#__PURE__*/React.createElement(TableContainer, {\n    \"data-cy\": \"inviteNewMemberTable\",\n    className: classes.table,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, filteredData && filteredData.length > 0 ? filteredData.map(function (row, index) {\n    var isItemSelected = isSelected(row);\n    var labelId = \"enhanced-table-checkbox-\".concat(index);\n    return /*#__PURE__*/React.createElement(TableRow, {\n      \"data-cy\": \"inviteNewMemberCheckBox\",\n      role: \"checkbox\",\n      key: row.username,\n      \"aria-checked\": isItemSelected,\n      selected: isItemSelected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableData, {\n      row: row,\n      isItemSelected: isItemSelected,\n      handleCheck: handleClick,\n      labelId: labelId,\n      sendInvite: setUserRole,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 23\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    colSpan: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 21\n    }\n  }, t('settings.teamingTab.inviteNew.invite.noUsers'))))))));\n};\n\n_s(Invite, \"81wywRG7IxQy83o333zgP/eSiLY=\", false, function () {\n  return [useStyles, useTheme, useTranslation, useSelector, useQuery, useQuery, useMutation];\n});\n\n_c = Invite;\nexport default Invite;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invite\");","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/views/Settings/TeammingTab/InviteNew/Invite/index.tsx"],"names":["useMutation","useQuery","Input","InputAdornment","Table","TableCell","TableContainer","TableRow","Toolbar","Typography","useTheme","React","useState","useSelector","useTranslation","ButtonFilled","Loader","ALL_USERS","GET_USER","SEND_INVITE","useStyles","TableData","Invite","handleModal","classes","theme","t","rows","setRows","userData","state","roles","setRoles","selected","setSelected","setUserRole","username","role","map","r","user_name","find","ele","variables","fetchPolicy","dataB","data","memberList","Map","skip","onCompleted","users","dataA","undefined","getUser","projectList","projects","forEach","project","id","selectedProjectID","members","member","invitation","set","has","push","refetchQueries","query","SendInvite","errorB","error","loadingB","loading","isSelected","user","usernames","el","handleClick","event","names","selectedIndex","indexOf","newSelected","userrole","concat","project_id","slice","length","search","filters","setFilters","filteredData","filter","dataRow","toLowerCase","includes","showsuccess","setShowsuccess","message","body","text","typo","textSecond","typoSub","buttonModal","Header","toolbar","inviteSomeone","e","target","value","style","color","palette","personalDetailsBodyColor","maxWidth","minWidth","InviteBtn","s","table","row","index","isItemSelected","labelId"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from '@apollo/client/react/hooks';\nimport {\n  Input,\n  InputAdornment,\n  Table,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport ButtonFilled from '../../../../../components/Button/ButtonFilled';\nimport Loader from '../../../../../components/Loader';\nimport { ALL_USERS, GET_USER, SEND_INVITE } from '../../../../../graphql';\nimport {\n  MemberInviteNew,\n  UserInvite,\n} from '../../../../../models/graphql/invite';\nimport {\n  CurrentUserDedtailsVars,\n  CurrentUserDetails,\n  Project,\n} from '../../../../../models/graphql/user';\nimport { RootState } from '../../../../../redux/reducers';\nimport useStyles from './styles';\nimport TableData from './TableData';\n\ninterface FilterOptions {\n  search: string;\n}\n\ninterface InviteProps {\n  handleModal: () => void;\n}\n\ninterface SelectedUser {\n  user_name: string;\n  role: string;\n  project_id: string;\n}\n\ninterface Role {\n  username: string;\n  role: string;\n}\n\nconst Invite: React.FC<InviteProps> = ({ handleModal }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { t } = useTranslation();\n\n  // for response data\n  const [rows, setRows] = useState<UserInvite[]>([]);\n\n  const userData = useSelector((state: RootState) => state.userData);\n\n  // for setting the role of the user while sending invitation\n  const [roles, setRoles] = useState<Role[]>([]);\n\n  // Array to store the list of selected users to be invited\n  const [selected, setSelected] = React.useState<SelectedUser[]>([]);\n\n  // Sets the user role while inviting\n  const setUserRole = (username: string, role: string) => {\n    setSelected(\n      selected.map((r) => (r.user_name === username ? { ...r, role } : r))\n    );\n    if (roles.find((ele) => ele.username === username)) {\n      setRoles(\n        roles.map((r) => (r.username === username ? { username, role } : r))\n      );\n    } else {\n      setRoles([...roles, { username, role }]);\n    }\n  };\n\n  // query for getting all the data for the logged in user\n  const { data: dataB } = useQuery<CurrentUserDetails, CurrentUserDedtailsVars>(\n    GET_USER,\n    {\n      variables: { username: userData.username },\n      fetchPolicy: 'cache-and-network',\n    }\n  );\n\n  // query to list all the users\n  const memberList = new Map();\n  const { data: dataA } = useQuery(ALL_USERS, {\n    skip: !dataB,\n    onCompleted: () => {\n      const users: UserInvite[] = [];\n      if (dataA !== undefined) {\n        if (dataB?.getUser.username === userData.username) {\n          const projectList: Project[] = dataB?.getUser.projects;\n          projectList.forEach(\n            (project) =>\n              project.id === userData.selectedProjectID &&\n              project.members.map(\n                (member) =>\n                  member.invitation !== 'Declined' &&\n                  memberList.set(member.user_name, 1)\n              )\n          );\n          // login for displaying only those users who are not the part of team\n          dataA.users.map(\n            (data: UserInvite) =>\n              !memberList.has(data.username) && users.push(data)\n          );\n        }\n        setRows(users);\n      }\n    },\n  });\n\n  // mutation to send invitation to selected users\n  const [SendInvite, { error: errorB, loading: loadingB }] = useMutation<\n    MemberInviteNew\n  >(SEND_INVITE, {\n    refetchQueries: [\n      { query: GET_USER, variables: { username: userData.username } },\n    ],\n  });\n\n  // Checks if the user the already selected or not\n  const isSelected = (user: UserInvite) => {\n    const usernames = new Map();\n    selected.map((el) => usernames.set(el.user_name, el.role));\n    return usernames.has(user.username);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, user: UserInvite) => {\n    const names = selected.map((el) => el.user_name);\n    const selectedIndex = names.indexOf(user.username);\n    let newSelected: SelectedUser[] = [];\n\n    if (selectedIndex === -1) {\n      const userrole = () => {\n        const r = roles.find((ele) => ele.username === user.username);\n        if (r) {\n          return r.role;\n        }\n        return 'Viewer';\n      };\n      newSelected = newSelected.concat(selected, {\n        user_name: user.username,\n        role: userrole(),\n        project_id: 'abc',\n      });\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  // States for filters\n  const [filters, setFilters] = useState<FilterOptions>({\n    search: '',\n  });\n\n  const filteredData = rows.filter((dataRow) =>\n    dataRow?.username.toLowerCase().includes(filters.search.toLowerCase())\n  );\n\n  const [showsuccess, setShowsuccess] = useState<boolean>(false);\n\n  return (\n    <div>\n      {showsuccess ? (\n        <>\n          {loadingB ? (\n            <>\n              <Loader />\n            </>\n          ) : (\n            <>\n              {errorB ? (\n                <Typography>{errorB.message}</Typography>\n              ) : (\n                <div\n                  data-cy=\"inviteNewMemberSuccessModal\"\n                  className={classes.body}\n                >\n                  <img src=\"./icons/checkmark.svg\" alt=\"checkmark\" />\n                  <div className={classes.text}>\n                    <Typography className={classes.typo}>\n                      {t('settings.teamingTab.inviteNew.invite.successHeader')}{' '}\n                      <strong>\n                        {t(\n                          'settings.teamingTab.inviteNew.invite.successHeaderStrong'\n                        )}\n                      </strong>\n                    </Typography>\n                  </div>\n                  <div className={classes.textSecond}>\n                    <Typography className={classes.typoSub}>\n                      {t('settings.teamingTab.inviteNew.invite.info')}\n                    </Typography>\n                  </div>\n                  <div\n                    data-cy=\"inviteNewMemberSuccessModalDoneButton\"\n                    className={classes.buttonModal}\n                  >\n                    <ButtonFilled\n                      isPrimary\n                      isDisabled={false}\n                      handleClick={handleModal}\n                    >\n                      <>\n                        {t('settings.teamingTab.inviteNew.invite.button.done')}\n                      </>\n                    </ButtonFilled>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </>\n      ) : (\n        <div>\n          <Typography className={classes.Header}>\n            {t('settings.teamingTab.inviteNew.invite.header')}{' '}\n            <strong>\n              {t('settings.teamingTab.inviteNew.invite.headerStrong')}\n            </strong>\n          </Typography>\n          <Toolbar className={classes.toolbar}>\n            <div\n              data-cy=\"inviteNewMemberSearch\"\n              className={classes.inviteSomeone}\n            >\n              <div>\n                <Input\n                  id=\"input-with-icon-textfield\"\n                  placeholder={t(\n                    'settings.teamingTab.inviteNew.invite.label.someone'\n                  )}\n                  onChange={(e) => {\n                    setFilters({\n                      search: e.target.value,\n                    });\n                  }}\n                  startAdornment={\n                    <InputAdornment position=\"start\">\n                      <img src=\"./icons/user-invite.svg\" alt=\"user\" />\n                    </InputAdornment>\n                  }\n                  disableUnderline\n                  inputProps={{\n                    style: {\n                      color: theme.palette.personalDetailsBodyColor,\n                      maxWidth: '31.75rem',\n                      minWidth: '31.375rem',\n                    },\n                  }}\n                />\n              </div>\n              <div\n                data-cy=\"inviteNewMemberSendInviteButton\"\n                className={classes.InviteBtn}\n              >\n                <ButtonFilled\n                  isPrimary\n                  isDisabled={!selected.length}\n                  handleClick={() => {\n                    setShowsuccess(true);\n                    selected.map(\n                      (s) =>\n                        !errorB &&\n                        !loadingB &&\n                        SendInvite({\n                          variables: {\n                            member: {\n                              project_id: userData.selectedProjectID,\n                              user_name: s.user_name,\n                              role: s.role,\n                            },\n                          },\n                        })\n                    );\n                  }}\n                >\n                  <div>\n                    {t('settings.teamingTab.inviteNew.invite.button.send')}\n                  </div>\n                </ButtonFilled>\n              </div>\n            </div>\n          </Toolbar>\n          <TableContainer\n            data-cy=\"inviteNewMemberTable\"\n            className={classes.table}\n          >\n            <Table stickyHeader aria-label=\"sticky table\">\n              {filteredData && filteredData.length > 0 ? (\n                filteredData.map((row, index) => {\n                  const isItemSelected = isSelected(row);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      data-cy=\"inviteNewMemberCheckBox\"\n                      role=\"checkbox\"\n                      key={row.username}\n                      aria-checked={isItemSelected}\n                      selected={isItemSelected}\n                    >\n                      <TableData\n                        row={row}\n                        isItemSelected={isItemSelected}\n                        handleCheck={handleClick}\n                        labelId={labelId}\n                        sendInvite={setUserRole}\n                      />\n                    </TableRow>\n                  );\n                })\n              ) : (\n                <TableRow>\n                  <TableCell colSpan={2}>\n                    <Typography align=\"center\">\n                      {t('settings.teamingTab.inviteNew.invite.noUsers')}\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </Table>\n          </TableContainer>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Invite;\n"]},"metadata":{},"sourceType":"module"}