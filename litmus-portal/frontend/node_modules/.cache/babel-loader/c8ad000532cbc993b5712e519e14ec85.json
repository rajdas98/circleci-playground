{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar sanitizeHTML = require('../../lib/svg_text_utils').sanitizeHTML;\n\nvar convertTextOpts = require('./convert_text_opts');\n\nvar constants = require('./constants');\n\nfunction MapboxLayer(subplot, index) {\n  this.subplot = subplot;\n  this.uid = subplot.uid + '-' + index;\n  this.index = index;\n  this.idSource = 'source-' + this.uid;\n  this.idLayer = constants.layoutLayerPrefix + this.uid; // some state variable to check if a remove/add step is needed\n\n  this.sourceType = null;\n  this.source = null;\n  this.layerType = null;\n  this.below = null; // is layer currently visible\n\n  this.visible = false;\n}\n\nvar proto = MapboxLayer.prototype;\n\nproto.update = function update(opts) {\n  if (!this.visible) {\n    // IMPORTANT: must create source before layer to not cause errors\n    this.updateSource(opts);\n    this.updateLayer(opts);\n  } else if (this.needsNewImage(opts)) {\n    this.updateImage(opts);\n  } else if (this.needsNewSource(opts)) {\n    // IMPORTANT: must delete layer before source to not cause errors\n    this.removeLayer();\n    this.updateSource(opts);\n    this.updateLayer(opts);\n  } else if (this.needsNewLayer(opts)) {\n    this.updateLayer(opts);\n  } else {\n    this.updateStyle(opts);\n  }\n\n  this.visible = isVisible(opts);\n};\n\nproto.needsNewImage = function (opts) {\n  var map = this.subplot.map;\n  return map.getSource(this.idSource) && this.sourceType === 'image' && opts.sourcetype === 'image' && (this.source !== opts.source || JSON.stringify(this.coordinates) !== JSON.stringify(opts.coordinates));\n};\n\nproto.needsNewSource = function (opts) {\n  // for some reason changing layer to 'fill' or 'symbol'\n  // w/o changing the source throws an exception in mapbox-gl 0.18 ;\n  // stay safe and make new source on type changes\n  return this.sourceType !== opts.sourcetype || this.source !== opts.source || this.layerType !== opts.type;\n};\n\nproto.needsNewLayer = function (opts) {\n  return this.layerType !== opts.type || this.below !== this.subplot.belowLookup['layout-' + this.index];\n};\n\nproto.updateImage = function (opts) {\n  var map = this.subplot.map;\n  map.getSource(this.idSource).updateImage({\n    url: opts.source,\n    coordinates: opts.coordinates\n  });\n};\n\nproto.updateSource = function (opts) {\n  var map = this.subplot.map;\n  if (map.getSource(this.idSource)) map.removeSource(this.idSource);\n  this.sourceType = opts.sourcetype;\n  this.source = opts.source;\n  if (!isVisible(opts)) return;\n  var sourceOpts = convertSourceOpts(opts);\n  map.addSource(this.idSource, sourceOpts);\n};\n\nproto.updateLayer = function (opts) {\n  var subplot = this.subplot;\n  var convertedOpts = convertOpts(opts);\n  var below = this.subplot.belowLookup['layout-' + this.index];\n\n  var _below;\n\n  if (below === 'traces') {\n    var mapLayers = subplot.getMapLayers(); // find id of first plotly trace layer\n\n    for (var i = 0; i < mapLayers.length; i++) {\n      var layerId = mapLayers[i].id;\n\n      if (typeof layerId === 'string' && layerId.indexOf(constants.traceLayerPrefix) === 0) {\n        _below = layerId;\n        break;\n      }\n    }\n  } else {\n    _below = below;\n  }\n\n  this.removeLayer();\n\n  if (isVisible(opts)) {\n    subplot.addLayer({\n      id: this.idLayer,\n      source: this.idSource,\n      'source-layer': opts.sourcelayer || '',\n      type: opts.type,\n      minzoom: opts.minzoom,\n      maxzoom: opts.maxzoom,\n      layout: convertedOpts.layout,\n      paint: convertedOpts.paint\n    }, _below);\n  }\n\n  this.layerType = opts.type;\n  this.below = below;\n};\n\nproto.updateStyle = function (opts) {\n  if (isVisible(opts)) {\n    var convertedOpts = convertOpts(opts);\n    this.subplot.setOptions(this.idLayer, 'setLayoutProperty', convertedOpts.layout);\n    this.subplot.setOptions(this.idLayer, 'setPaintProperty', convertedOpts.paint);\n  }\n};\n\nproto.removeLayer = function () {\n  var map = this.subplot.map;\n\n  if (map.getLayer(this.idLayer)) {\n    map.removeLayer(this.idLayer);\n  }\n};\n\nproto.dispose = function () {\n  var map = this.subplot.map;\n  if (map.getLayer(this.idLayer)) map.removeLayer(this.idLayer);\n  if (map.getSource(this.idSource)) map.removeSource(this.idSource);\n};\n\nfunction isVisible(opts) {\n  if (!opts.visible) return false;\n  var source = opts.source;\n\n  if (Array.isArray(source) && source.length > 0) {\n    for (var i = 0; i < source.length; i++) {\n      if (typeof source[i] !== 'string' || source[i].length === 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return Lib.isPlainObject(source) || typeof source === 'string' && source.length > 0;\n}\n\nfunction convertOpts(opts) {\n  var layout = {};\n  var paint = {};\n\n  switch (opts.type) {\n    case 'circle':\n      Lib.extendFlat(paint, {\n        'circle-radius': opts.circle.radius,\n        'circle-color': opts.color,\n        'circle-opacity': opts.opacity\n      });\n      break;\n\n    case 'line':\n      Lib.extendFlat(paint, {\n        'line-width': opts.line.width,\n        'line-color': opts.color,\n        'line-opacity': opts.opacity,\n        'line-dasharray': opts.line.dash\n      });\n      break;\n\n    case 'fill':\n      Lib.extendFlat(paint, {\n        'fill-color': opts.color,\n        'fill-outline-color': opts.fill.outlinecolor,\n        'fill-opacity': opts.opacity // no way to pass specify outline width at the moment\n\n      });\n      break;\n\n    case 'symbol':\n      var symbol = opts.symbol;\n      var textOpts = convertTextOpts(symbol.textposition, symbol.iconsize);\n      Lib.extendFlat(layout, {\n        'icon-image': symbol.icon + '-15',\n        'icon-size': symbol.iconsize / 10,\n        'text-field': symbol.text,\n        'text-size': symbol.textfont.size,\n        'text-anchor': textOpts.anchor,\n        'text-offset': textOpts.offset,\n        'symbol-placement': symbol.placement // TODO font family\n        // 'text-font': symbol.textfont.family.split(', '),\n\n      });\n      Lib.extendFlat(paint, {\n        'icon-color': opts.color,\n        'text-color': symbol.textfont.color,\n        'text-opacity': opts.opacity\n      });\n      break;\n\n    case 'raster':\n      Lib.extendFlat(paint, {\n        'raster-fade-duration': 0,\n        'raster-opacity': opts.opacity\n      });\n      break;\n  }\n\n  return {\n    layout: layout,\n    paint: paint\n  };\n}\n\nfunction convertSourceOpts(opts) {\n  var sourceType = opts.sourcetype;\n  var source = opts.source;\n  var sourceOpts = {\n    type: sourceType\n  };\n  var field;\n\n  if (sourceType === 'geojson') {\n    field = 'data';\n  } else if (sourceType === 'vector') {\n    field = typeof source === 'string' ? 'url' : 'tiles';\n  } else if (sourceType === 'raster') {\n    field = 'tiles';\n    sourceOpts.tileSize = 256;\n  } else if (sourceType === 'image') {\n    field = 'url';\n    sourceOpts.coordinates = opts.coordinates;\n  }\n\n  sourceOpts[field] = source;\n\n  if (opts.sourceattribution) {\n    sourceOpts.attribution = sanitizeHTML(opts.sourceattribution);\n  }\n\n  return sourceOpts;\n}\n\nmodule.exports = function createMapboxLayer(subplot, index, opts) {\n  var mapboxLayer = new MapboxLayer(subplot, index);\n  mapboxLayer.update(opts);\n  return mapboxLayer;\n};","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/node_modules/plotly.js/src/plots/mapbox/layers.js"],"names":["Lib","require","sanitizeHTML","convertTextOpts","constants","MapboxLayer","subplot","index","uid","idSource","idLayer","layoutLayerPrefix","sourceType","source","layerType","below","visible","proto","prototype","update","opts","updateSource","updateLayer","needsNewImage","updateImage","needsNewSource","removeLayer","needsNewLayer","updateStyle","isVisible","map","getSource","sourcetype","JSON","stringify","coordinates","type","belowLookup","url","removeSource","sourceOpts","convertSourceOpts","addSource","convertedOpts","convertOpts","_below","mapLayers","getMapLayers","i","length","layerId","id","indexOf","traceLayerPrefix","addLayer","sourcelayer","minzoom","maxzoom","layout","paint","setOptions","getLayer","dispose","Array","isArray","isPlainObject","extendFlat","circle","radius","color","opacity","line","width","dash","fill","outlinecolor","symbol","textOpts","textposition","iconsize","icon","text","textfont","size","anchor","offset","placement","field","tileSize","sourceattribution","attribution","module","exports","createMapboxLayer","mapboxLayer"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar sanitizeHTML = require('../../lib/svg_text_utils').sanitizeHTML;\nvar convertTextOpts = require('./convert_text_opts');\nvar constants = require('./constants');\n\nfunction MapboxLayer(subplot, index) {\n    this.subplot = subplot;\n\n    this.uid = subplot.uid + '-' + index;\n    this.index = index;\n\n    this.idSource = 'source-' + this.uid;\n    this.idLayer = constants.layoutLayerPrefix + this.uid;\n\n    // some state variable to check if a remove/add step is needed\n    this.sourceType = null;\n    this.source = null;\n    this.layerType = null;\n    this.below = null;\n\n    // is layer currently visible\n    this.visible = false;\n}\n\nvar proto = MapboxLayer.prototype;\n\nproto.update = function update(opts) {\n    if(!this.visible) {\n        // IMPORTANT: must create source before layer to not cause errors\n        this.updateSource(opts);\n        this.updateLayer(opts);\n    } else if(this.needsNewImage(opts)) {\n        this.updateImage(opts);\n    } else if(this.needsNewSource(opts)) {\n        // IMPORTANT: must delete layer before source to not cause errors\n        this.removeLayer();\n        this.updateSource(opts);\n        this.updateLayer(opts);\n    } else if(this.needsNewLayer(opts)) {\n        this.updateLayer(opts);\n    } else {\n        this.updateStyle(opts);\n    }\n\n    this.visible = isVisible(opts);\n};\n\nproto.needsNewImage = function(opts) {\n    var map = this.subplot.map;\n    return (\n        map.getSource(this.idSource) &&\n        this.sourceType === 'image' &&\n        opts.sourcetype === 'image' &&\n        (this.source !== opts.source ||\n            JSON.stringify(this.coordinates) !==\n            JSON.stringify(opts.coordinates))\n    );\n};\n\nproto.needsNewSource = function(opts) {\n    // for some reason changing layer to 'fill' or 'symbol'\n    // w/o changing the source throws an exception in mapbox-gl 0.18 ;\n    // stay safe and make new source on type changes\n    return (\n        this.sourceType !== opts.sourcetype ||\n        this.source !== opts.source ||\n        this.layerType !== opts.type\n    );\n};\n\nproto.needsNewLayer = function(opts) {\n    return (\n        this.layerType !== opts.type ||\n        this.below !== this.subplot.belowLookup['layout-' + this.index]\n    );\n};\n\nproto.updateImage = function(opts) {\n    var map = this.subplot.map;\n    map.getSource(this.idSource).updateImage({\n        url: opts.source, coordinates: opts.coordinates\n    });\n};\n\nproto.updateSource = function(opts) {\n    var map = this.subplot.map;\n\n    if(map.getSource(this.idSource)) map.removeSource(this.idSource);\n\n    this.sourceType = opts.sourcetype;\n    this.source = opts.source;\n\n    if(!isVisible(opts)) return;\n\n    var sourceOpts = convertSourceOpts(opts);\n\n    map.addSource(this.idSource, sourceOpts);\n};\n\nproto.updateLayer = function(opts) {\n    var subplot = this.subplot;\n    var convertedOpts = convertOpts(opts);\n\n    var below = this.subplot.belowLookup['layout-' + this.index];\n    var _below;\n\n    if(below === 'traces') {\n        var mapLayers = subplot.getMapLayers();\n\n        // find id of first plotly trace layer\n        for(var i = 0; i < mapLayers.length; i++) {\n            var layerId = mapLayers[i].id;\n            if(typeof layerId === 'string' &&\n                layerId.indexOf(constants.traceLayerPrefix) === 0\n            ) {\n                _below = layerId;\n                break;\n            }\n        }\n    } else {\n        _below = below;\n    }\n\n    this.removeLayer();\n\n    if(isVisible(opts)) {\n        subplot.addLayer({\n            id: this.idLayer,\n            source: this.idSource,\n            'source-layer': opts.sourcelayer || '',\n            type: opts.type,\n            minzoom: opts.minzoom,\n            maxzoom: opts.maxzoom,\n            layout: convertedOpts.layout,\n            paint: convertedOpts.paint\n        }, _below);\n    }\n\n    this.layerType = opts.type;\n    this.below = below;\n};\n\nproto.updateStyle = function(opts) {\n    if(isVisible(opts)) {\n        var convertedOpts = convertOpts(opts);\n        this.subplot.setOptions(this.idLayer, 'setLayoutProperty', convertedOpts.layout);\n        this.subplot.setOptions(this.idLayer, 'setPaintProperty', convertedOpts.paint);\n    }\n};\n\nproto.removeLayer = function() {\n    var map = this.subplot.map;\n    if(map.getLayer(this.idLayer)) {\n        map.removeLayer(this.idLayer);\n    }\n};\n\nproto.dispose = function() {\n    var map = this.subplot.map;\n    if(map.getLayer(this.idLayer)) map.removeLayer(this.idLayer);\n    if(map.getSource(this.idSource)) map.removeSource(this.idSource);\n};\n\nfunction isVisible(opts) {\n    if(!opts.visible) return false;\n\n    var source = opts.source;\n\n    if(Array.isArray(source) && source.length > 0) {\n        for(var i = 0; i < source.length; i++) {\n            if(typeof source[i] !== 'string' || source[i].length === 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    return Lib.isPlainObject(source) ||\n        (typeof source === 'string' && source.length > 0);\n}\n\nfunction convertOpts(opts) {\n    var layout = {};\n    var paint = {};\n\n    switch(opts.type) {\n        case 'circle':\n            Lib.extendFlat(paint, {\n                'circle-radius': opts.circle.radius,\n                'circle-color': opts.color,\n                'circle-opacity': opts.opacity\n            });\n            break;\n\n        case 'line':\n            Lib.extendFlat(paint, {\n                'line-width': opts.line.width,\n                'line-color': opts.color,\n                'line-opacity': opts.opacity,\n                'line-dasharray': opts.line.dash\n            });\n            break;\n\n        case 'fill':\n            Lib.extendFlat(paint, {\n                'fill-color': opts.color,\n                'fill-outline-color': opts.fill.outlinecolor,\n                'fill-opacity': opts.opacity\n\n                // no way to pass specify outline width at the moment\n            });\n            break;\n\n        case 'symbol':\n            var symbol = opts.symbol;\n            var textOpts = convertTextOpts(symbol.textposition, symbol.iconsize);\n\n            Lib.extendFlat(layout, {\n                'icon-image': symbol.icon + '-15',\n                'icon-size': symbol.iconsize / 10,\n\n                'text-field': symbol.text,\n                'text-size': symbol.textfont.size,\n                'text-anchor': textOpts.anchor,\n                'text-offset': textOpts.offset,\n                'symbol-placement': symbol.placement,\n\n                // TODO font family\n                // 'text-font': symbol.textfont.family.split(', '),\n            });\n\n            Lib.extendFlat(paint, {\n                'icon-color': opts.color,\n                'text-color': symbol.textfont.color,\n                'text-opacity': opts.opacity\n            });\n            break;\n        case 'raster':\n            Lib.extendFlat(paint, {\n                'raster-fade-duration': 0,\n                'raster-opacity': opts.opacity\n            });\n            break;\n    }\n\n    return {\n        layout: layout,\n        paint: paint\n    };\n}\n\nfunction convertSourceOpts(opts) {\n    var sourceType = opts.sourcetype;\n    var source = opts.source;\n    var sourceOpts = {type: sourceType};\n    var field;\n\n    if(sourceType === 'geojson') {\n        field = 'data';\n    } else if(sourceType === 'vector') {\n        field = typeof source === 'string' ? 'url' : 'tiles';\n    } else if(sourceType === 'raster') {\n        field = 'tiles';\n        sourceOpts.tileSize = 256;\n    } else if(sourceType === 'image') {\n        field = 'url';\n        sourceOpts.coordinates = opts.coordinates;\n    }\n\n    sourceOpts[field] = source;\n\n    if(opts.sourceattribution) {\n        sourceOpts.attribution = sanitizeHTML(opts.sourceattribution);\n    }\n\n    return sourceOpts;\n}\n\nmodule.exports = function createMapboxLayer(subplot, index, opts) {\n    var mapboxLayer = new MapboxLayer(subplot, index);\n\n    mapboxLayer.update(opts);\n\n    return mapboxLayer;\n};\n"]},"metadata":{},"sourceType":"script"}