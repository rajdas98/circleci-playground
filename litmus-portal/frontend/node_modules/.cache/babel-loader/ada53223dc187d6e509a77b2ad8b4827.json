{"ast":null,"code":"function timeDifference(current, previous) {\n  var milliSecondsPerMinute = 60 * 1000;\n  var milliSecondsPerHour = milliSecondsPerMinute * 60;\n  var milliSecondsPerDay = milliSecondsPerHour * 24;\n  var milliSecondsPerMonth = milliSecondsPerDay * 30;\n  var milliSecondsPerYear = milliSecondsPerDay * 365;\n  var elapsed = current - previous;\n\n  if (elapsed < milliSecondsPerMinute / 3) {\n    return 'Just now';\n  }\n\n  if (elapsed < milliSecondsPerMinute) {\n    return 'less than 1 min ago';\n  }\n\n  if (elapsed < milliSecondsPerHour) {\n    return \"\".concat(Math.round(elapsed / milliSecondsPerMinute), \" mins ago\");\n  }\n\n  if (elapsed < milliSecondsPerDay) {\n    return \"\".concat(Math.round(elapsed / milliSecondsPerHour), \" hours ago\");\n  }\n\n  if (elapsed < milliSecondsPerMonth) {\n    return \"\".concat(Math.round(elapsed / milliSecondsPerDay), \" days ago\");\n  }\n\n  if (elapsed < milliSecondsPerYear) {\n    return \"\".concat(Math.round(elapsed / milliSecondsPerMonth), \" months ago\");\n  }\n\n  return \"\".concat(Math.round(elapsed / milliSecondsPerYear), \" years ago\");\n}\n\nvar timeDifferenceForDate = function timeDifferenceForDate(date) {\n  var now = new Date().getTime();\n  var updated = date * 1000;\n  return timeDifference(now, updated);\n};\n\nexport default timeDifferenceForDate;","map":{"version":3,"sources":["/home/raj/go/src/github.com/litmuschaos/litmus/litmus-portal/frontend/src/utils/datesModifier.ts"],"names":["timeDifference","current","previous","milliSecondsPerMinute","milliSecondsPerHour","milliSecondsPerDay","milliSecondsPerMonth","milliSecondsPerYear","elapsed","Math","round","timeDifferenceForDate","date","now","Date","getTime","updated"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,OAAxB,EAAyCC,QAAzC,EAA2D;AACzD,MAAMC,qBAAqB,GAAG,KAAK,IAAnC;AACA,MAAMC,mBAAmB,GAAGD,qBAAqB,GAAG,EAApD;AACA,MAAME,kBAAkB,GAAGD,mBAAmB,GAAG,EAAjD;AACA,MAAME,oBAAoB,GAAGD,kBAAkB,GAAG,EAAlD;AACA,MAAME,mBAAmB,GAAGF,kBAAkB,GAAG,GAAjD;AAEA,MAAMG,OAAO,GAAGP,OAAO,GAAGC,QAA1B;;AAEA,MAAIM,OAAO,GAAGL,qBAAqB,GAAG,CAAtC,EAAyC;AACvC,WAAO,UAAP;AACD;;AAED,MAAIK,OAAO,GAAGL,qBAAd,EAAqC;AACnC,WAAO,qBAAP;AACD;;AACD,MAAIK,OAAO,GAAGJ,mBAAd,EAAmC;AACjC,qBAAUK,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGL,qBAArB,CAAV;AACD;;AACD,MAAIK,OAAO,GAAGH,kBAAd,EAAkC;AAChC,qBAAUI,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGJ,mBAArB,CAAV;AACD;;AACD,MAAII,OAAO,GAAGF,oBAAd,EAAoC;AAClC,qBAAUG,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGH,kBAArB,CAAV;AACD;;AACD,MAAIG,OAAO,GAAGD,mBAAd,EAAmC;AACjC,qBAAUE,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGF,oBAArB,CAAV;AACD;;AACD,mBAAUG,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAGD,mBAArB,CAAV;AACD;;AAED,IAAMI,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,IAAD,EAAe;AAC3C,MAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AACA,MAAMC,OAAO,GAAGJ,IAAI,GAAG,IAAvB;AACA,SAAOZ,cAAc,CAACa,GAAD,EAAMG,OAAN,CAArB;AACD,CAJD;;AAMA,eAAeL,qBAAf","sourcesContent":["function timeDifference(current: number, previous: number) {\n  const milliSecondsPerMinute = 60 * 1000;\n  const milliSecondsPerHour = milliSecondsPerMinute * 60;\n  const milliSecondsPerDay = milliSecondsPerHour * 24;\n  const milliSecondsPerMonth = milliSecondsPerDay * 30;\n  const milliSecondsPerYear = milliSecondsPerDay * 365;\n\n  const elapsed = current - previous;\n\n  if (elapsed < milliSecondsPerMinute / 3) {\n    return 'Just now';\n  }\n\n  if (elapsed < milliSecondsPerMinute) {\n    return 'less than 1 min ago';\n  }\n  if (elapsed < milliSecondsPerHour) {\n    return `${Math.round(elapsed / milliSecondsPerMinute)} mins ago`;\n  }\n  if (elapsed < milliSecondsPerDay) {\n    return `${Math.round(elapsed / milliSecondsPerHour)} hours ago`;\n  }\n  if (elapsed < milliSecondsPerMonth) {\n    return `${Math.round(elapsed / milliSecondsPerDay)} days ago`;\n  }\n  if (elapsed < milliSecondsPerYear) {\n    return `${Math.round(elapsed / milliSecondsPerMonth)} months ago`;\n  }\n  return `${Math.round(elapsed / milliSecondsPerYear)} years ago`;\n}\n\nconst timeDifferenceForDate = (date: any) => {\n  const now = new Date().getTime();\n  const updated = date * 1000;\n  return timeDifference(now, updated);\n};\n\nexport default timeDifferenceForDate;\n"]},"metadata":{},"sourceType":"module"}